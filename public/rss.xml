<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Aaron Shih</title>
        <link>https://www.aaron-shih.com</link>
        <description>My personal blog</description>
        <lastBuildDate>Sun, 26 Jan 2025 08:24:33 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <copyright>Copyright (c) 2021-present, Aaron Shih</copyright>
        <item>
            <title><![CDATA[Nuxt 部署與 gitlab runner]]></title>
            <link>https://www.aaron-shih.com/frontend/nuxt/nuxt-001</link>
            <guid>https://www.aaron-shih.com/frontend/nuxt/nuxt-001</guid>
            <pubDate>Sun, 19 Jan 2025 15:32:20 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><h1 id="nuxt-部署與-gitlab-runner" tabindex="-1">Nuxt 部署與 Gitlab Runner <a class="header-anchor" href="#nuxt-部署與-gitlab-runner" aria-label="Permalink to &quot;Nuxt 部署與 Gitlab Runner&quot;">&ZeroWidthSpace;</a></h1>
<p>因工作需求，需要將 Nuxt 應用程式部署到 Gitlab Runner 上，本文將記錄部署過程、遇到的問題以及解決方案，希望可以幫助到同樣遇到這些問題的人，避免像我一樣踩坑踩到半夜🥲。</p>
<h2 id="nuxt" tabindex="-1">Nuxt <a class="header-anchor" href="#nuxt" aria-label="Permalink to &quot;Nuxt&quot;">&ZeroWidthSpace;</a></h2>
<p>Nuxt.js 是一個基於 Vue.js 的開源框架，旨在簡化 Vue.js 應用程式的開發，並增強伺服器端的建構。它提供了結構化的方式來組織程式碼、處理路由、伺服器端渲染 (SSR) 和資料獲取，使開發者能更輕鬆地構建高性能、SEO 友好的 Web 應用程式。Nuxt 抽象化了管理非同步資料、中介層 (middleware) 和路由的複雜配置，它還提供了一些內建功能，例如自動程式碼分割、自動匯入和伺服器上的自動非同步資料載入，以提升應用程式的效能。</p>
<p>Nuxt.js 支援三種渲染模式：</p>
<ul>
<li><strong>SPA (單頁應用程式)</strong>：透過 JavaScript 控制頁面切換，並透過 API 獲取資料。適合打造互動性強的單頁應用程式，例如管理後台或社交網站。</li>
<li><strong>SSG (靜態網站生成)</strong>：使用 <code>nuxt generate</code> 生成靜態網站，並透過 API 獲取資料。具有快速的載入速度和 SEO 優勢，適合建立像部落格或官網這類需要快速載入的靜態網站。未來我計畫將此部落格升級至 <code>Nuxt SSG</code> 架構。</li>
<li><strong>SSR (伺服器端渲染)</strong>：在伺服器端渲染頁面，並透過 API 獲取資料。 SSR 可以提升 SEO 效果和首屏載入速度，因為伺服器會發送完整的 HTML 頁面到瀏覽器，瀏覽器可以立即顯示。適合需要兼顧 SEO 和使用者體驗的網站。</li>
</ul>
<p>Nuxt.js 提供了許多功能來簡化開發流程，例如:</p>
<ul>
<li><strong>檔案系統路由</strong>：根據 <code>pages</code> 資料夾的檔案結構自動生成路由。</li>
<li><strong>自動匯入</strong>：自動匯入元件、Composable 和模組，減少程式碼冗餘。</li>
<li><strong>伺服器端 API</strong>：例如 <code>asyncData</code>、<code>fetch</code>、<code>useFetch</code> 和 <code>useAsyncData</code>，方便開發者在伺服器端獲取資料。</li>
<li><strong>其他功能</strong>：例如伺服器端中介層 (middleware)、插件、模組和 store 等。</li>
<li><strong>Nitro 引擎</strong>：Nuxt.js 的伺服器引擎，具備以下優勢：
<ul>
<li>跨平台支援：可在 Node.js、瀏覽器、Service Workers 等平台上運行。</li>
<li>伺服器 API：支援 API 路由和中介軟體。</li>
<li>自動程式碼分割：提升應用程式效能。</li>
<li>混合渲染模式：支援靜態渲染和伺服器渲染的混合模式。</li>
<li>開發伺服器：提供熱模組重載(HMR)功能，提升開發效率。</li>
<li>部署：簡化部署流程，支援伺服器部署、靜態部署等多種部署方式。</li>
<li>效能優化：透過預渲染和快取策略提升應用程式效能。</li>
<li>除錯工具：提供效能分析和除錯工具，方便開發者找出效能瓶頸。</li>
</ul>
</li>
</ul>
<div class="danger custom-block"><p class="custom-block-title">多麼痛的領悟</p>
<p>我們這次的目標是將 Nuxt 的 SSR 模式應用程式部署到 Gitlab Runner 上，並透過 Gitlab Runner 進行自動化部署。
沒想到，這就是踩雷的開始🥲。</p>
</div>
<h2 id="gitlab-runner" tabindex="-1">Gitlab Runner <a class="header-anchor" href="#gitlab-runner" aria-label="Permalink to &quot;Gitlab Runner&quot;">&ZeroWidthSpace;</a></h2>
<p>GitLab Runner 是一個開源專案，用於執行作業系統上的作業 (jobs)，可將其視為一個持續整合/持續部署(CI/CD) 的代理程式或工作執行器。它與 GitLab CI/CD 結合使用，可以在 GitLab CI/CD 流程中運行指定的作業。GitLab Runner 可以運行在 Windows、Linux 和 macOS 上，並且可以運行在容器中。GitLab Runner 支援 Docker、Kubernetes 和 Podman 等容器平台。</p>
<p>這也是我們選擇使用它的原因，透過 Docker 封裝 Nuxt 應用程式，將其部署到指定的環境上。</p>
<h3 id="gitlab-runner-安裝" tabindex="-1">Gitlab Runner 安裝 <a class="header-anchor" href="#gitlab-runner-安裝" aria-label="Permalink to &quot;Gitlab Runner 安裝&quot;">&ZeroWidthSpace;</a></h3>
<p>這裡我們使用 Docker 安裝 Gitlab Runner，以便於管理 Runner 的版本和環境。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> --name</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> gitlab-runner</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> --restart</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> always</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66">  -v</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> /srv/gitlab-runner/config:/etc/gitlab-runner</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66">  -v</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> /var/run/docker.sock:/var/run/docker.sock</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">  gitlab/gitlab-runner:latest</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>這樣就完成了 Gitlab Runner 的安裝，接下來我們需要註冊 Runner。</p>
<h3 id="gitlab-runner-註冊" tabindex="-1"><a href="https://docs.gitlab.com/runner/" target="_blank" rel="noreferrer">Gitlab Runner</a> 註冊 <a class="header-anchor" href="#gitlab-runner-註冊" aria-label="Permalink to &quot;[Gitlab Runner](https://docs.gitlab.com/runner/) 註冊&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> exec</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -it</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> gitlab-runner</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> gitlab-runner</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> register</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然後根據提示進行註冊，這裡需要填寫 Gitlab 的 URL、Token、Runner 名稱、描述、標籤等資訊。</p>
<h3 id="runner-配置-toml" tabindex="-1">Runner 配置 <a href="https://zh.wikipedia.org/zh-tw/TOML" target="_blank" rel="noreferrer">TOML</a> <a class="header-anchor" href="#runner-配置-toml" aria-label="Permalink to &quot;Runner 配置 [TOML](https://zh.wikipedia.org/zh-tw/TOML)&quot;">&ZeroWidthSpace;</a></h3>
<p>TOML 配置文件是 Gitlab Runner 的設定檔，我們可以在這裡配置 Runner 的運行環境、運行方式等。<a href="https://gitlab.com/gitlab-org/gitlab-runner/-/blob/main/config.toml.example" target="_blank" rel="noreferrer">範例</a></p>
<p><code>若 Runner 需要使用 Docker 執行作業，則需要配置 Docker 的相關設定。</code></p>
<div class="language-toml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[[</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">runners</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "docker-runner"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  url</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "[https://gitlab.com/](https://gitlab.com/)"</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 填寫實際的 GitLab 連線 URL，例如 [https://gitlab.com/](https://gitlab.com/) 或自建 GitLab 伺服器位址。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  token</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "xxxxxxxxxxxxxxxxxxxx"</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 這裡填寫 Gitlab 的 Runner Token</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  executor</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "docker"</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 執行器類型為 docker</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  [</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">runners</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    network_mode</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "host"</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 使用主機網路模式，讓容器可以直接存取主機網路</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    privileged</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 啟用特權模式，讓容器可以存取主機資源，例如 Docker Socket</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    disable_entrypoint_overwrite</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> false</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    oom_kill_disable</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> false</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    disable_cache</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> false</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    volumes</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"/cache"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 掛載主機的 /cache 目錄到容器的 /cache 目錄</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    shm_size</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>Runner 的概念有點像是一個 CI/CD 的代理程式或工作執行器，它會根據配置的環境，運行指定的任務。這裡我們配置了一個 <code>docker-runner</code>，原本預計使用 <code>node:lts</code> 的 Docker 映像來運行任務，<code>node:lts</code> 是 Node.js 的長期維護版本，能提供較佳的穩定性。但由於我們實際上需要部署的是 Nuxt 的 SSR 模式應用程式，所以需要自行定義一個 Docker 映像。</p>
<h2 id="第一個雷坑-kaniko-與-docker-build-的誤解" tabindex="-1">第一個雷坑：Kaniko 與 <code>docker build</code> 的誤解 <a class="header-anchor" href="#第一個雷坑-kaniko-與-docker-build-的誤解" aria-label="Permalink to &quot;第一個雷坑：Kaniko 與 `docker build` 的誤解&quot;">&ZeroWidthSpace;</a></h2>
<p>為了解決這個問題，我們首先需要釐清本地開發環境與 CI/CD 環境的差異。在本地開發時，我習慣使用 <code>docker build</code> 指令來建構映像。然而，我們的 CI/CD 環境選擇使用了 Kaniko。</p>
<p>Kaniko 是 Google 開源的 Docker 映像建構工具，它可以在沒有 Docker Daemon 的情況下建構 Docker 映像，避免了 Docker Daemon 可能帶來的安全風險，因此常被用於 CI/CD 環境中。</p>
<p>由於我們希望 CI 環境不依賴 Docker Daemon，同事選擇使用了 Kaniko。結果我嘗試在本地用 <code>docker build</code> 來建置映像時，但 gitlab-ci.yml 上卻是使用了 Kaniko，所以一直失敗，但我卡了半天都不知道問題出在哪裡。</p>
<div class="danger custom-block"><p class="custom-block-title">多麼痛的領悟</p>
<p>事實上，Kaniko 不依賴 Docker Daemon，因此無法使用 <code>docker build</code> 指令。
但它仍然是透過 Dockerfile 來定義並建置映像，只是指令要改用 Kaniko 的 <code>executor</code>。例如，原本的 <code>docker build -t my-image .</code> 需要改為 <code>/kaniko/executor --dockerfile Dockerfile --context . --destination my-image:latest</code>。
我一開始卻使用 <code>docker build</code> 來建構 Nuxt 映像，結果就這樣卡了半天🥲。</p>
</div>
<h3 id="docker-daemon-安全問題" tabindex="-1">Docker Daemon 安全問題 <a class="header-anchor" href="#docker-daemon-安全問題" aria-label="Permalink to &quot;Docker Daemon 安全問題&quot;">&ZeroWidthSpace;</a></h3>
<p>Docker Daemon 是 Docker 的核心組件，負責管理 Docker 映像、容器、網路、儲存空間等資源。Docker Daemon 預設是以 root 權限運行的，這可能會導致安全問題，例如容器逃逸、容器內部攻擊等。因此，為了提高安全性，我們可以使用 Kaniko 來避免 Docker Daemon 的安全問題。</p>
<h2 id="第二個雷坑-dockerfile-建構失敗" tabindex="-1">第二個雷坑：Dockerfile 建構失敗 <a class="header-anchor" href="#第二個雷坑-dockerfile-建構失敗" aria-label="Permalink to &quot;第二個雷坑：Dockerfile 建構失敗&quot;">&ZeroWidthSpace;</a></h2>
<p>解決了 Kaniko 的問題後，以為可以順利部署了，沒想到又遇到了新的雷。我發現本地建構的 Nuxt Image 可以成功運作，但在 Gitlab Runner 上建構卻一直失敗。</p>
<h3 id="_1-多階段建構-multi-stage-builds-失敗" tabindex="-1">1. 多階段建構 (Multi-stage Builds) 失敗 <a class="header-anchor" href="#_1-多階段建構-multi-stage-builds-失敗" aria-label="Permalink to &quot;1. 多階段建構 (Multi-stage Builds) 失敗&quot;">&ZeroWidthSpace;</a></h3>
<p>Dockerfile 中，使用了多階段建構來減少最終映像的大小，但是在 Gitlab Runner 上建構卻一直失敗。</p>
<div class="tip custom-block"><p class="custom-block-title">解方</p>
<p>在多階段建構中，先在第一個階段安裝所有開發相依套件 (devDependencies) 並執行建構 (build)，然後在第二階段只安裝生產環境相依套件 (dependencies)，並複製第一階段的建構產物。這可以大幅降低最終映像的大小，並減少潛在的相依套件衝突問題。
具體做法是：「在 build 階段安裝所有 devDeps + build，然後移除 devDeps，再安裝 prodDeps」。</p>
</div>
<h3 id="_2-node-js-版本差異-node-20-vs-node-alpine-node-lts" tabindex="-1">2. Node.js 版本差異 (node:20 vs node:alpine/node:lts) <a class="header-anchor" href="#_2-node-js-版本差異-node-20-vs-node-alpine-node-lts" aria-label="Permalink to &quot;2. Node.js 版本差異 (node:20 vs node:alpine/node:lts)&quot;">&ZeroWidthSpace;</a></h3>
<p>一開始使用 <code>node:alpine</code> 作為基礎映像，但是在 Gitlab Runner 上建構卻一直失敗，無法正確顯示頁面。</p>
<p>不同 Node.js 版本可能內含不同的 npm / corepack / Python / g++ / make 等基底套件版本。Node 20、19、18 之間對一些原生模組 (native addons) 或套件安裝行為會略有差異。例如：Node 20 可能需要更高版本的某些編譯工具，或者與 pnpm 的行為略有不同。有時候在 <code>node:alpine</code> 的環境中，因為使用 musl-libc 而非 glibc，有些套件 (尤其是需要原生編譯的套件) 會安裝失敗。</p>
<h4 id="musl-libc-與-glibc-的差異" tabindex="-1">musl-libc 與 glibc 的差異 <a class="header-anchor" href="#musl-libc-與-glibc-的差異" aria-label="Permalink to &quot;musl-libc 與 glibc 的差異&quot;">&ZeroWidthSpace;</a></h4>
<p>Alpine Linux 使用 musl-libc 作為 C 標準函式庫，而大多數 Linux 發行版使用 glibc。這兩者之間有一些差異，尤其是在編譯原生模組時可能會出現問題。</p>
<div class="tip custom-block"><p class="custom-block-title">解方</p>
<p>在 Dockerfile 中使用 <code>node:lts</code> 或明確指定 Node.js 版本 (例如 <code>node:18</code>) 作為基礎映像，可以避免一些套件安裝問題。</p>
</div>
<h2 id="總結" tabindex="-1">總結 <a class="header-anchor" href="#總結" aria-label="Permalink to &quot;總結&quot;">&ZeroWidthSpace;</a></h2>
<p>這次的部署過程中，踩了不少坑，但也學到了不少東西：</p>
<ul>
<li>若要使用 <code>docker build</code>，請使用 Docker Daemon；若不想依賴 Docker Daemon，則使用 Kaniko 來建置映像，指令為 <code>/kaniko/executor --dockerfile &lt;Dockerfile 路徑&gt; --context &lt;建構上下文路徑&gt; --destination &lt;目標映像名稱&gt;</code>。</li>
<li>多階段建構中，透過先安裝所有相依套件、執行建構，再移除開發相依套件、僅安裝生產環境相依套件的方式，可以大幅降低最終映像的大小並減少相依套件衝突。</li>
<li>Node.js 版本差異可能導致套件安裝問題，建議使用 <code>node:lts</code> 或明確指定 Node.js 版本作為基礎映像，以確保環境的一致性。</li>
</ul>
<p>雖然只是短短的文字描述，卻是我熬夜踩坑的血淚經驗，希望這篇文章能幫助到有需要的人，避免重蹈覆轍。嗚嗚嗚🥲</p>
<h2 id="參考文獻" tabindex="-1">參考文獻 <a class="header-anchor" href="#參考文獻" aria-label="Permalink to &quot;參考文獻&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://nuxtjs.org/" target="_blank" rel="noreferrer">Nuxt.js</a></li>
<li><a href="https://docs.gitlab.com/runner/" target="_blank" rel="noreferrer">Gitlab Runner</a></li>
<li><a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noreferrer">Dockerfile</a></li>
<li><a href="https://github.com/GoogleContainerTools/kaniko" target="_blank" rel="noreferrer">Kaniko</a></li>
<li><a href="https://alpinelinux.org/" target="_blank" rel="noreferrer">Alpine Linux</a></li>
<li><a href="https://musl.libc.org/" target="_blank" rel="noreferrer">musl-libc</a></li>
<li><a href="https://www.gnu.org/software/libc/" target="_blank" rel="noreferrer">glibc</a></li>
</ul>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[Python-003 Class]]></title>
            <link>https://www.aaron-shih.com/backend/python/python-003</link>
            <guid>https://www.aaron-shih.com/backend/python/python-003</guid>
            <pubDate>Mon, 30 Dec 2024 23:30:00 GMT</pubDate>
            <description><![CDATA[<PageInfo/><h1 id="python-003-class" tabindex="-1">Python-003 Class <a class="header-anchor" href="#python-003-class" aria-label="Permalink to &quot;Python-003 Class&quot;">&ZeroWidthSpace;</a></h1>
<p>Python 物件導向程式設計（OOP）的進階特性與語法。除了基本的類別、建構子外，我們將來試著使用 <strong>slots</strong> 限制屬性、並透過描述器（Descriptor）來攔截屬性的讀取與寫入，還有使用 <strong>call</strong>、<strong>new</strong>、<strong>init</strong> 以及其他常見的魔術方法（例如 <strong>contains</strong>, <strong>str</strong>, <strong>iter</strong>）來自訂物件行為。廢話不多說，範例開始，一步步看 Python OOP 的強大之處吧！</p>
<h2 id="class-是什麼" tabindex="-1">Class 是什麼 <a class="header-anchor" href="#class-是什麼" aria-label="Permalink to &quot;Class 是什麼&quot;">&ZeroWidthSpace;</a></h2>
<p>在 Python 中，<code>Class（類別</code>就像是一個「自訂的資料型態」或「範本」，可以用來描述某個特定物件可能包含的屬性（變數）與行為（方法）。如果把實例（object）比喻成一棟已落成的房子，那麼類別（Class）就像是建築藍圖，定義了該房子的格局、結構與功能，並由此來實際產生一棟又一棟「遵循相同設計」的房子。</p>
<h2 id="_1-human-與類別基礎" tabindex="-1">1. <code>Human</code> 與類別基礎 <a class="header-anchor" href="#_1-human-與類別基礎" aria-label="Permalink to &quot;1. `Human` 與類別基礎&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Human</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    cry </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "A human is crying"</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # class variable</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    happiness </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "A human is happy"</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # class variable</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">    __slots__</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'name'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'age'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># restrict the attributes that can be added to the class</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __init__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> name</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> age</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># initializer</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">name </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> name</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">age </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> age</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> show</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.name)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.age)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    @</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">classmethod</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> show_class</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">cls</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#E5C07B">cls</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.cry)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    @</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">staticmethod</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> show_static</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">():</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"A human is static"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ol>
<li>
<p><strong>類別變數</strong>：<code>cry</code> 和 <code>happiness</code> 是屬於整個類別共用的變數。所有 <code>Human</code> 實例都可以存取它，並且共享相同的值。</p>
</li>
<li>
<p><strong>__slots__</strong>：</p>
<ul>
<li><code>__slots__ = ('name', 'age')</code> 限制此類別實例只能擁有 <code>name</code>、<code>age</code> 這兩個屬性，不允許動態新增其他屬性。</li>
<li>使用 <code>__slots__</code> 可以幫助節省記憶體並提高存取速度，在需要大量建立實例或對效能要求較高的場景中很常見。</li>
</ul>
</li>
<li>
<p><strong>__init__ (建構子)</strong>：</p>
<ul>
<li>在 Python 中，<code>__init__</code> 是實例初始化方法，負責把參數綁定到實例上，例如 <code>self.name = name</code>。</li>
</ul>
</li>
<li>
<p><strong>實例方法</strong>：</p>
<ul>
<li><code>show()</code>：簡單印出當前實例的屬性。</li>
</ul>
</li>
<li>
<p><strong>類別方法（@classmethod）</strong>：</p>
<ul>
<li><code>show_class(cls)</code>：可以透過類別或實例呼叫，但本質接收的是類別物件本身 (<code>cls</code>)，適合用來存取類別變數或執行與整個類別相關的操作。</li>
</ul>
</li>
<li>
<p><strong>靜態方法（@staticmethod）</strong>：</p>
<ul>
<li><code>show_static()</code>：跟類別方法一樣可以用「類別」或「實例」呼叫，但靜態方法完全不會接收任何隱含參數 (<code>self</code> 或 <code>cls</code>)。通常用於不需要存取任何類別或實例屬性的工具方法。</li>
</ul>
</li>
</ol>
<p>ex：</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">allen </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Human</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Allen"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">25</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(allen.happiness)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # A human is happy</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">allen</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">show</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">              # 印出 Allen, 25</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">allen</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">show_class</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # A human is crying</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">allen</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">show_static</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # A human is static</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 型別判斷</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">isinstance</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(allen, Human))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   # True</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">isinstance</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(allen, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">object</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # True</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">isinstance</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(allen, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">int</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # False</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>]]></description>
            <content:encoded><![CDATA[<PageInfo/><h1 id="python-003-class" tabindex="-1">Python-003 Class <a class="header-anchor" href="#python-003-class" aria-label="Permalink to &quot;Python-003 Class&quot;">&ZeroWidthSpace;</a></h1>
<p>Python 物件導向程式設計（OOP）的進階特性與語法。除了基本的類別、建構子外，我們將來試著使用 <strong>slots</strong> 限制屬性、並透過描述器（Descriptor）來攔截屬性的讀取與寫入，還有使用 <strong>call</strong>、<strong>new</strong>、<strong>init</strong> 以及其他常見的魔術方法（例如 <strong>contains</strong>, <strong>str</strong>, <strong>iter</strong>）來自訂物件行為。廢話不多說，範例開始，一步步看 Python OOP 的強大之處吧！</p>
<h2 id="class-是什麼" tabindex="-1">Class 是什麼 <a class="header-anchor" href="#class-是什麼" aria-label="Permalink to &quot;Class 是什麼&quot;">&ZeroWidthSpace;</a></h2>
<p>在 Python 中，<code>Class（類別</code>就像是一個「自訂的資料型態」或「範本」，可以用來描述某個特定物件可能包含的屬性（變數）與行為（方法）。如果把實例（object）比喻成一棟已落成的房子，那麼類別（Class）就像是建築藍圖，定義了該房子的格局、結構與功能，並由此來實際產生一棟又一棟「遵循相同設計」的房子。</p>
<h2 id="_1-human-與類別基礎" tabindex="-1">1. <code>Human</code> 與類別基礎 <a class="header-anchor" href="#_1-human-與類別基礎" aria-label="Permalink to &quot;1. `Human` 與類別基礎&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Human</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    cry </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "A human is crying"</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # class variable</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    happiness </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "A human is happy"</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # class variable</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">    __slots__</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'name'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'age'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># restrict the attributes that can be added to the class</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __init__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> name</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> age</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># initializer</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">name </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> name</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">age </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> age</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> show</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.name)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.age)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    @</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">classmethod</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> show_class</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">cls</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#E5C07B">cls</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.cry)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    @</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">staticmethod</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> show_static</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">():</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"A human is static"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ol>
<li>
<p><strong>類別變數</strong>：<code>cry</code> 和 <code>happiness</code> 是屬於整個類別共用的變數。所有 <code>Human</code> 實例都可以存取它，並且共享相同的值。</p>
</li>
<li>
<p><strong>__slots__</strong>：</p>
<ul>
<li><code>__slots__ = ('name', 'age')</code> 限制此類別實例只能擁有 <code>name</code>、<code>age</code> 這兩個屬性，不允許動態新增其他屬性。</li>
<li>使用 <code>__slots__</code> 可以幫助節省記憶體並提高存取速度，在需要大量建立實例或對效能要求較高的場景中很常見。</li>
</ul>
</li>
<li>
<p><strong>__init__ (建構子)</strong>：</p>
<ul>
<li>在 Python 中，<code>__init__</code> 是實例初始化方法，負責把參數綁定到實例上，例如 <code>self.name = name</code>。</li>
</ul>
</li>
<li>
<p><strong>實例方法</strong>：</p>
<ul>
<li><code>show()</code>：簡單印出當前實例的屬性。</li>
</ul>
</li>
<li>
<p><strong>類別方法（@classmethod）</strong>：</p>
<ul>
<li><code>show_class(cls)</code>：可以透過類別或實例呼叫，但本質接收的是類別物件本身 (<code>cls</code>)，適合用來存取類別變數或執行與整個類別相關的操作。</li>
</ul>
</li>
<li>
<p><strong>靜態方法（@staticmethod）</strong>：</p>
<ul>
<li><code>show_static()</code>：跟類別方法一樣可以用「類別」或「實例」呼叫，但靜態方法完全不會接收任何隱含參數 (<code>self</code> 或 <code>cls</code>)。通常用於不需要存取任何類別或實例屬性的工具方法。</li>
</ul>
</li>
</ol>
<p>ex：</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">allen </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Human</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Allen"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">25</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(allen.happiness)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # A human is happy</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">allen</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">show</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">              # 印出 Allen, 25</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">allen</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">show_class</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # A human is crying</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">allen</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">show_static</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # A human is static</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 型別判斷</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">isinstance</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(allen, Human))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   # True</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">isinstance</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(allen, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">object</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # True</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">isinstance</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(allen, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">int</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # False</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><hr>
<h2 id="_2-繼承-student-繼承-human" tabindex="-1">2. 繼承：<code>Student</code> 繼承 <code>Human</code> <a class="header-anchor" href="#_2-繼承-student-繼承-human" aria-label="Permalink to &quot;2. 繼承：`Student` 繼承 `Human`&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Student</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">Human</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __init__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> name</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> age</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> grade</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">        super</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">__init__</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(name, age)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # super() 呼叫父類別的 __init__</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">grade </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> grade</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> show</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">        super</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">show</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 呼叫父類別的 show()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.grade)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol>
<li>
<p><strong>繼承</strong>：</p>
<ul>
<li><code>class Student(Human)</code> 表示 <code>Student</code> 類別繼承自 <code>Human</code>，因此擁有 <code>Human</code> 的所有屬性與方法。</li>
<li>繼承可以讓你在父類別基礎上擴充功能，而不用重複撰寫相同程式碼。</li>
</ul>
</li>
<li>
<p><strong><code>super()</code></strong>：</p>
<ul>
<li>呼叫 <code>super().__init__(name, age)</code> 表示呼叫父類別 (<code>Human</code>) 的 <code>__init__</code>，確保父類別初始化完成。</li>
</ul>
</li>
<li>
<p><strong>方法覆寫（Override）</strong>：</p>
<ul>
<li><code>show()</code> 在子類別中覆寫了父類別同名方法，但也透過 <code>super().show()</code> 呼叫父類別的 <code>show()</code>, 然後再印出自己的屬性 <code>self.grade</code>。</li>
</ul>
</li>
</ol>
<p>ex：</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">student </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Student</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Allen"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">25</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">student</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">show</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 輸出：</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Allen</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 25</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 10</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><hr>
<h2 id="_3-descriptor-描述器-與-call-範例" tabindex="-1">3. Descriptor（描述器）與 <code>__call__</code> 範例 <a class="header-anchor" href="#_3-descriptor-描述器-與-call-範例" aria-label="Permalink to &quot;3. Descriptor（描述器）與 `__call__` 範例&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_3-1-descriptor-namevalue" tabindex="-1">3.1 Descriptor <code>NameValue</code> <a class="header-anchor" href="#_3-1-descriptor-namevalue" aria-label="Permalink to &quot;3.1 Descriptor `NameValue`&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> NameValue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __init__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">_name </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'Aaron'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __get__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> instance</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> owner</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">_name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __set__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> instance</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> value </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'Aaron'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">_name </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> value</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">            print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Aaron is a cat"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        else</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">            print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Aaron is not a cat"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __delete__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> obj</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"我被刪掉囉！"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        del</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">_name</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ul>
<li><strong>Descriptor Protocol</strong>：在 Python 裏，只要類別同時實作 <code>__get__</code>、<code>__set__</code> 或 <code>__delete__</code>，就是一個描述器。</li>
<li><strong>屬性攔截/控制</strong>：
<ul>
<li>當 <code>NameValue</code> 被定義成某個類別的類別屬性時（例：<code>name = NameValue()</code>），那個類別每次存取 <code>name</code> 時，底層都會呼叫 <code>NameValue</code> 裏面的 <code>__get__</code> / <code>__set__</code> / <code>__delete__</code> 方法。</li>
<li>這可以用來實作額外的屬性驗證、轉換、或讀寫控制，比如說設定時先做檢查，刪除時做清理等等。</li>
</ul>
</li>
</ul>
<h3 id="_3-2-使用描述器的類別-cat" tabindex="-1">3.2 使用描述器的類別 <code>Cat</code> <a class="header-anchor" href="#_3-2-使用描述器的類別-cat" aria-label="Permalink to &quot;3.2 使用描述器的類別 `Cat`&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Cat</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    name </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> NameValue</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __call__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> **</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">kwds</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"I am called"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol>
<li>
<p><strong><code>name = NameValue()</code></strong>：</p>
<ul>
<li>這裡 <code>name</code> 屬性就被接管到 <code>NameValue</code> 描述器中。存取或設定 <code>Cat</code> 實例的 <code>name</code>，底層都會呼叫描述器方法。</li>
</ul>
</li>
<li>
<p><strong>__call__ 魔術方法</strong>：</p>
<ul>
<li>讓物件實例可以「像函式一樣被呼叫」。當 <code>aaron()</code> 呼叫時，實際上會執行 <code>Cat.__call__()</code>。</li>
</ul>
</li>
</ol>
<p>ex：</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">aaron </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Cat</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(aaron.name)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 讀取 -> __get__ -> 'Aaron'</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">aaron</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">name </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'Aaron 1'</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 寫入 -> __set__</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(aaron.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">__dict__</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   # 查看實例屬性 (描述器通常不在實例字典中，會在類別層級)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">aaron</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 # I am called</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">del</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> aaron</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">name          </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 刪除 -> __delete__ -> "我被刪掉囉！"</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><hr>
<h2 id="_4-new-與-metaclass-基礎" tabindex="-1">4. <code>__new__</code> 與 metaclass 基礎 <a class="header-anchor" href="#_4-new-與-metaclass-基礎" aria-label="Permalink to &quot;4. `__new__` 與 metaclass 基礎&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Apple</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __new__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">cls</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> **</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">kwds</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"I am new"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> super</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">__new__</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#E5C07B">cls</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __init__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"I am init"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __contains__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> item</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> True</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __str__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "I am a apple"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> __iter__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> iter</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">])</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ol>
<li>
<p><strong>__new__</strong>：</p>
<ul>
<li>在 Python 中，<code>__new__</code> 會在物件建立（記憶體配置）時最先被呼叫，並回傳該物件本身。</li>
<li>之後才會進行 <code>__init__</code> 做初始化。</li>
<li>在高度客製化物件行為或使用 metaclass 時，常需要重寫 <code>__new__</code>。</li>
</ul>
</li>
<li>
<p><strong>魔術方法</strong>：</p>
<ul>
<li><code>__contains__(self, item)</code> 讓物件支援 <code>in</code> 運算，例如 <code>'apple' in apple_obj</code>。</li>
<li><code>__str__</code> 自訂物件被 <code>print()</code> 或 <code>str()</code> 呼叫時的字串表示。</li>
<li><code>__iter__</code> 讓物件支援迭代，可用 <code>for item in apple_obj:</code> 來迭代。</li>
</ul>
</li>
</ol>
<p>測試：</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">apple </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Apple</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # 觸發 __new__ -> "I am new"</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                      # 再執行 __init__ -> "I am init"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'apple'</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> apple)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 觸發 __contains__ -> True</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(apple)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             # 觸發 __str__ -> "I am a apple"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> i </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> apple</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         # 觸發 __iter__ -> 回傳 [1, 2, 3] 的迭代器</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(i)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><hr>
<h2 id="結語" tabindex="-1">結語 <a class="header-anchor" href="#結語" aria-label="Permalink to &quot;結語&quot;">&ZeroWidthSpace;</a></h2>
<p>若想深入了解 Python 進階 OOP 機制及各種奇妙寫法，可以參考官方文件或閱讀更多關於 metaclass、描述器的教學。這些語法特性或許不一定用得到，但在大型系統或框架層級往往能看到有前輩這樣使用，相信多多了解不吃虧。祝我們在 Python 裡玩得開心！</p>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[Python-002 函式]]></title>
            <link>https://www.aaron-shih.com/backend/python/python-002</link>
            <guid>https://www.aaron-shih.com/backend/python/python-002</guid>
            <pubDate>Mon, 30 Dec 2024 22:05:00 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><h1 id="python-002-函式" tabindex="-1">Python-002 函式 <a class="header-anchor" href="#python-002-函式" aria-label="Permalink to &quot;Python-002 函式&quot;">&ZeroWidthSpace;</a></h1>
<p>今天繼續探索 Python 中很重要的一環：函式。學習函式可以增強程式重用性與維護性。
通過以下範例和解釋，將會學習如何寫出清晰又有效的函式。</p>
<h2 id="_1-基本函式使用" tabindex="-1">1. 基本函式使用 <a class="header-anchor" href="#_1-基本函式使用" aria-label="Permalink to &quot;1. 基本函式使用&quot;">&ZeroWidthSpace;</a></h2>
<p>跟 JavaScript 相同函式可以多次的調用，並有自己的作用域存在(我是這樣理解的 😇)。
但 Python 有一個有趣的點，就是與 JavaScript 相比，引用的方式是相反的。不知道其他語言是否也是這樣呢？
在 Python 中，使用 <code>def</code> 關鍵字來宣告函式。</p>
<h3 id="定義與執行函式" tabindex="-1">定義與執行函式 <a class="header-anchor" href="#定義與執行函式" aria-label="Permalink to &quot;定義與執行函式&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> random </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> random </span><span style="--shiki-light:#B392F0;--shiki-dark:#FFFFFF">-></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 從 random 模組引入 random 函式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> functionCall</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">():</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    pass</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 不執行任何操作</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> numToString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">num</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> int</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">-></span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> str</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 類似 ts 的型別定義</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> str</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(num)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">type</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">numToString</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">123</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # str</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">random</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> shuffle</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'lodash'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 從某個模組載入一組功能</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_2-函式參數" tabindex="-1">2. 函式參數 <a class="header-anchor" href="#_2-函式參數" aria-label="Permalink to &quot;2. 函式參數&quot;">&ZeroWidthSpace;</a></h2>
<p>Python 的函式參數有個很有趣的地方，就是可以具名引入，
我們可以在呼叫函式時，直接傳入位置參數，也可以使用具名參數來指定對應的值。</p>
<h3 id="典型參數使用" tabindex="-1">典型參數使用 <a class="header-anchor" href="#典型參數使用" aria-label="Permalink to &quot;典型參數使用&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> greet</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> msg</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Hello </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">name</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">msg</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">greet</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'World'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Good morning'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">greet</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'World'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">msg</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Good morning'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">greet</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">msg</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Good morning'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'World'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="專用參數" tabindex="-1">專用參數 (*) <a class="header-anchor" href="#專用參數" aria-label="Permalink to &quot;專用參數 (\*)&quot;">&ZeroWidthSpace;</a></h3>
<p>在 Python 中，可以使用 <code>*</code> 來指定專用參數（keyword-only arguments）。這些參數必須以具名方式傳入，而不能使用位置參數。</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> greet</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">msg</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Hello </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">name</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">msg</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 正確的呼叫方式</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">greet</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'World'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">msg</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Good morning'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 錯誤的呼叫方式，會引發 TypeError</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># greet('World', 'Good morning')</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_3-可變參數-args-kwargs" tabindex="-1">3. 可變參數 (*args, **kwargs) <a class="header-anchor" href="#_3-可變參數-args-kwargs" aria-label="Permalink to &quot;3. 可變參數 (\*args, \*\*kwargs)&quot;">&ZeroWidthSpace;</a></h2>
<p>這個部分是筆者覺得 Python 最好玩的地方，可以快速的解構參數，不論是物件參數還是非物件參數，都有對應的解構方式，
讓函式呼叫時簡單且省了很多心力QQ</p>
<ul>
<li><code>*args</code>:允許函式接受任意數量的位置參數，並將它們打包成一個元組（tuple）。</li>
<li><code>**kwargs</code>: 允許函式接受任意數量的具名參數，並將它們打包成一個字典（dictionary）。</li>
<li><code>*</code>: 可以將 list 結構解構成單一參數，可以與 JavaScript 一樣收集剩餘未使用參數並使之成為 list，合併多項參數</li>
</ul>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> print_args</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">*</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(args)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">print_args</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # (1, 2, 3, 4, 5)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">print_args</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # ()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> print_kwargs</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">*</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> **</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">kwargs</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(kwargs, a)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">print_kwargs</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'World'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">msg</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Good morning'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # {'name': 'World', 'msg': 'Good morning'} (1, 2)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> print_all</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> b</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> c</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> **</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">kwargs</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#98C379">    """</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#98C379">    Combine all</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#98C379">    a, b, c: positional arguments</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#98C379">    args: tuple of positional arguments</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#98C379">    kwargs: dictionary of keyword arguments</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-dark:#98C379">    """</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(a, b, c, args, kwargs)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">heroes </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'batman'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'superman'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'wonder woman'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># * 可以解構</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">print_all</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">*</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">heroes, </span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'World'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">msg</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Good morning'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # batman superman wonder woman () {'name': 'World', 'msg': 'Good morning'}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(print_all.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">__doc__</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">heroes </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'batman'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'superman'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'wonder woman'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> b</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> c </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> heroes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> greet</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">hero1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> hero2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> hero3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Hello </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">hero1</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">hero2</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">, and </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">hero3</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">greet</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">*</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">heroes)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # Hello batman, superman, and wonder woman</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">first</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">rest </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> heroes</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(first)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 'batman'</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(rest)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   # ['superman', 'wonder woman']</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">villains </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'joker'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'lex'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">all_characters </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">heroes</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">villains]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(all_characters)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # ['batman', 'superman', 'wonder woman', 'joker', 'lex']</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="_4-記憶區規則-legb" tabindex="-1">4. 記憶區規則 (LEGB) <a class="header-anchor" href="#_4-記憶區規則-legb" aria-label="Permalink to &quot;4. 記憶區規則 (LEGB)&quot;">&ZeroWidthSpace;</a></h2>
<p>Python 的變數查找遵循 LEGB 規則，這是一個由內而外的查找順序：</p>
<ul>
<li><strong>Local (區域)</strong>: 最內層，包含當前函式內的名稱空間</li>
<li><strong>Enclosing (封閉)</strong>: 包含外層函式的名稱空間</li>
<li><strong>Global (全域)</strong>: 當前模組的全域名稱空間</li>
<li><strong>Built-in (內建)</strong>: Python 內建的名稱空間</li>
</ul>
<p>感覺跟 JavaScript 真的很像，改天來看看為何要這樣設計🫠</p>
<h3 id="legb-模型" tabindex="-1">LEGB 模型 <a class="header-anchor" href="#legb-模型" aria-label="Permalink to &quot;LEGB 模型&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'global'</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 全域變數</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> outer</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">():</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'enclosing'</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 封閉作用域變數</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> inner</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">():</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'local'</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 區域變數</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(x)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 會輸出 'local'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    inner</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(x)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 會輸出 'enclosing'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">outer</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(x)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 會輸出 'global'</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>當 Python 尋找一個變數時，會依序從最內層開始查找：</p>
<ol>
<li>先在當前函式的區域空間尋找</li>
<li>若找不到，則往上一層封閉函式查找</li>
<li>再找不到，就查找全域空間</li>
<li>最後才會查找 Python 的內建空間</li>
</ol>
</div>
<h2 id="_5-lambda-函式" tabindex="-1">5. Lambda 函式 <a class="header-anchor" href="#_5-lambda-函式" aria-label="Permalink to &quot;5. Lambda 函式&quot;">&ZeroWidthSpace;</a></h2>
<p>Lambda 函式是 Python 中的一種匿名函式，用於創建簡單的單行函式。主要用於需要函式物件但不需要完整函式定義的場合。
我是不太習慣這樣的寫法，要多適應一下。</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 基本 Lambda 函式</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">add </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> lambda</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">sum</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(args)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 輸出: 15</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 用於排序 - 將奇數排在偶數前面</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">sorted</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">], </span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">key</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">lambda</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> x</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">: x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 輸出: [2, 4, 1, 3, 5]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 用於過濾 - 只保留偶數</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">list</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">filter</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">lambda</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> x</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">: x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">])))</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 輸出: [2, 4]</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="_6-closure-閉包-與裝飾器" tabindex="-1">6. Closure (閉包) 與裝飾器 <a class="header-anchor" href="#_6-closure-閉包-與裝飾器" aria-label="Permalink to &quot;6. Closure (閉包) 與裝飾器&quot;">&ZeroWidthSpace;</a></h2>
<p>閉包是一個函式物件，它可以記住建立時的環境變數。
簡單來說就是跟 JavaScript 一樣，能夠記住不存在於此函式空間內的參數~</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> outer_function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">msg</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> inner_function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">():</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(msg)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 內部函式可以存取外部函式的變數</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> inner_function</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 創建兩個閉包</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hi_func </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> outer_function</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Hi'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hello_func </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> outer_function</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Hello'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 呼叫閉包</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">hi_func</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 輸出: Hi</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">hello_func</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # 輸出: Hello</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 檢查閉包內部結構</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(hi_func.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">__closure__</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">].cell_contents)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 輸出: Hi</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(hi_func.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">__code__</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.co_freevars)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         # 輸出: ('msg',)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="decorator-裝飾器" tabindex="-1">Decorator (裝飾器) <a class="header-anchor" href="#decorator-裝飾器" aria-label="Permalink to &quot;Decorator (裝飾器)&quot;">&ZeroWidthSpace;</a></h3>
<p>裝飾器是一種設計模式，允許我們在不修改原始函式的情況下，擴充其功能。</p>
<div class="danger custom-block"><p class="custom-block-title">DANGER</p>
<p>這樣可以在不改變原始函式的情況下，加入額外的功能，如記錄日誌、性能測量等</p>
</div>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> decorator_function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">original_function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> wrapper_function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">*</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> **</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">kwargs</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'wrapper executed this before </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">original_function.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">__name__</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> original_function</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">*</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">args, </span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">**</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">kwargs)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> wrapper_function</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">@decorator_function</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> display_info</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> age</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'display_info ran with arguments </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">name</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> and </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">age</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">display_info</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'John'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">25</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 輸出:</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># wrapper executed this before display_info</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># display_info ran with arguments John and 25</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="_7-組合應用" tabindex="-1">7. 組合應用 <a class="header-anchor" href="#_7-組合應用" aria-label="Permalink to &quot;7. 組合應用&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="遞迴-recursion" tabindex="-1">遞迴 (Recursion) <a class="header-anchor" href="#遞迴-recursion" aria-label="Permalink to &quot;遞迴 (Recursion)&quot;">&ZeroWidthSpace;</a></h3>
<p>遞迴是一種函式在內部呼叫自己的技術，適用於處理像是分治法、階乘或樹結構遍歷等問題。</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> factorial</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">n</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> n </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> n </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> factorial</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(n </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">factorial</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 輸出: 3628800</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>遞迴的優勢在於其結構簡潔，但需要注意可能導致的遞迴深度限制或效能問題。</p>
<h3 id="生成器-generator" tabindex="-1">生成器 (Generator) <a class="header-anchor" href="#生成器-generator" aria-label="Permalink to &quot;生成器 (Generator)&quot;">&ZeroWidthSpace;</a></h3>
<p>生成器是一種延遲計算的技術，可用於處理需要大量資料但不希望一次性載入的情境。</p>
<h4 id="範例-產生一個數列" tabindex="-1">範例：產生一個數列 <a class="header-anchor" href="#範例-產生一個數列" aria-label="Permalink to &quot;範例：產生一個數列&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> generator_function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">num</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> i </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(num):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        yield</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> i</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">g </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> generator_function</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">([i </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> i </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> g])</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 輸出: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>生成器適合處理需要大量迭代或流式數據的場景，例如讀取大檔案或產生無窮數列。</p>
<h2 id="key-point" tabindex="-1">Key point <a class="header-anchor" href="#key-point" aria-label="Permalink to &quot;Key point&quot;">&ZeroWidthSpace;</a></h2>
<p>今天介紹了 Python 函式的使用方式，包括基礎定義、參數使用方法、*args 與 **kwargs 的特性，以及 LEGB 變數查找規則。也提到了 Lambda 函式、閉包、裝飾器，以及遞迴和生成器的使用方式。
透過這些範例可以發現 Python 與其他語言相似的地方，同時也有自己的特色(?，像是關鍵字專用參數、更加靈活的解構用法等，學廢了學廢了😇
希望這些範例能幫助大家更加理解並靈活運用 Python 函式。</p>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[第一性原則思考]]></title>
            <link>https://www.aaron-shih.com/smallTalk/first-principles</link>
            <guid>https://www.aaron-shih.com/smallTalk/first-principles</guid>
            <pubDate>Sat, 07 Dec 2024 13:04:30 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="第一性原則思考" tabindex="-1">第一性原則思考 <a class="header-anchor" href="#第一性原則思考" aria-label="Permalink to &quot;第一性原則思考&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/first-principle.webp" alt="first-principle" data-fancybox="gallery"></p>
<p>最近經常聽到 Elon Musk 在演講中提及「First Principle（第一性原則）」這個關鍵字，讓我想進一步了解為何它被如此強調、其背後的定義究竟為何。這是否與八二法則（Pareto Principle）等思維模式有相似之處？</p>
<p>在深入探討前，先看一下維基百科上的簡介：</p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p><strong>第一原理（First Principle）</strong>，又稱第一性原理，是哲學與邏輯領域中的名詞，指一個最基本的命題或假設，無法被省略或刪除，也不可違反。此概念相當於數學中的公理，最早由亞里斯多德提出。</p>
</div>
<p>根據上述定義，第一性原則強調回歸問題的本質與不可簡化的基礎。拿前端領域作例子：即使目前已有許多前端框架，最終仍必須編譯或轉譯成 HTML、CSS、JS 這些基本的元素。無論技術如何演進，都必須回歸到這類原始基礎的檔案結構。</p>
<blockquote>
<p>當我們探索某件事物的本質時，最後勢必抵達一個無法再進一步細化的核心點，而這個核心點正是該事物的「第一性原則」。</p>
</blockquote>
<p>以上僅是對第一性原則的一種詮釋角度，未必是嚴格的學術定義，但也是一個有趣的方向。</p>
<p>接下來，將以「前端開發」為例，說明如何透過第一性原則來思考與探索。</p>
<h2 id="第一性原則的應用示範-以前端為例" tabindex="-1">第一性原則的應用示範（以前端為例） <a class="header-anchor" href="#第一性原則的應用示範-以前端為例" aria-label="Permalink to &quot;第一性原則的應用示範（以前端為例）&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_1-定義問題與目標" tabindex="-1">1. 定義問題與目標 <a class="header-anchor" href="#_1-定義問題與目標" aria-label="Permalink to &quot;1. 定義問題與目標&quot;">&ZeroWidthSpace;</a></h3>
<p>前端領域十分廣大，因此在實踐第一性原則前，我們需要先定義想解決的問題、目標與需求。例如：「我想建立一個快速且可在多裝置上運行的互動式網頁。」明確的目標能協助我們聚焦在前端必須實現的核心價值上。</p>
<h3 id="_2-基本構成要素" tabindex="-1">2. 基本構成要素 <a class="header-anchor" href="#_2-基本構成要素" aria-label="Permalink to &quot;2. 基本構成要素&quot;">&ZeroWidthSpace;</a></h3>
<p>前端的最核心要素是 <strong>HTML、CSS、JS</strong>。</p>
<ul>
<li><strong><code>HTML</code></strong>：標記語言，用於描述與組織網頁的內容與結構。</li>
<li><strong><code>CSS</code></strong>：宣告式的樣式語法，用來控制版面佈局、色彩、字型等視覺呈現。</li>
<li><strong><code>JS</code></strong>：程式語言，可操作 DOM（Document Object Model）、處理事件、進行邏輯判斷並實現互動。</li>
</ul>
<p>無論使用何種框架或工具，最終都必須依靠這三者建立一個能被瀏覽器理解並呈現的頁面。🌟</p>
<h3 id="_3-原理與運作機制" tabindex="-1">3. 原理與運作機制 <a class="header-anchor" href="#_3-原理與運作機制" aria-label="Permalink to &quot;3. 原理與運作機制&quot;">&ZeroWidthSpace;</a></h3>
<p>前端的運作基於瀏覽器機制，因此理解瀏覽器的運作流程極其重要：<br>
瀏覽器會從伺服器獲取 HTML、CSS、JS，解析並建立 DOM 樹與 CSSOM，接著生成 Render Tree，最後繪製於螢幕上。<br>
網路協定（HTTP/HTTPS）及裝置特性（如解析度與互動模式）也會影響前端的呈現與效能。為了應對各種裝置需求，我們有了 <code>RWD（Responsive Web Design，響應式網頁設計）</code>這種設計策略。🌟</p>
<h3 id="_4-回歸核心機制" tabindex="-1">4. 回歸核心機制 <a class="header-anchor" href="#_4-回歸核心機制" aria-label="Permalink to &quot;4. 回歸核心機制&quot;">&ZeroWidthSpace;</a></h3>
<p>在學習前端時，有些建議主張可跳過 JS 基礎，直接學習 Vue、React、Angular 等框架。但從第一性原則來看，我們應先理解 JS 的核心本質，再推敲前端框架出現的原因，以及為何需要 bundler（打包工具）這類工具。</p>
<ul>
<li><strong>框架的由來</strong>：DOM 操作繁瑣且容易出錯，為提升開發效率與維護性，框架透過狀態管理、虛擬 DOM 或響應式系統，簡化了複雜性。</li>
<li><strong>打包工具的必要性</strong>：bundler 能將分散的 JS、CSS、圖片、模組組裝並優化，產出可在瀏覽器高效率執行的檔案。</li>
</ul>
<p>理解脈絡，有助於面對新工具或框架時，不是盲從，而是可以清晰明瞭其設計初衷與適用情境🌟</p>
<h3 id="_5-推演策略與選擇" tabindex="-1">5. 推演策略與選擇 <a class="header-anchor" href="#_5-推演策略與選擇" aria-label="Permalink to &quot;5. 推演策略與選擇&quot;">&ZeroWidthSpace;</a></h3>
<p>當明瞭前端的本質是透過「結構（HTML）、表現（CSS）、互動（JS）」來服務使用者並展現頁面時，當我們遇到痛點時就能在繼續細分所屬的區塊，並尋求更好的解決方案。</p>
<ul>
<li>如果載入太慢：問題可能出在過多的資源載入、網路延遲、檔案體積過大。由於理解原理，我們可採取優化策略，如壓縮檔案、減少不必要的程式碼、使用 CDN 分散負載或透過 SSR（Server-Side Rendering）加速首屏呈現。</li>
<li>如果互動不佳：檢視 JavaScript 的運行機制與 DOM 操作，可能是計算過於頻繁、DOM 操作過多。理解基礎後，我們能更精準地選擇框架、狀態管理模式或優化策略。</li>
</ul>
<h3 id="_6-不斷驗證與迭代" tabindex="-1">6. 不斷驗證與迭代 <a class="header-anchor" href="#_6-不斷驗證與迭代" aria-label="Permalink to &quot;6. 不斷驗證與迭代&quot;">&ZeroWidthSpace;</a></h3>
<p>前端技術不斷演進，我們需要檢視現有的工具與流程。當我們選擇使用第一性原則思考時，能洞悉新技術所解決的核心問題，避免盲目追逐潮流及噪聲，而陷入技術的漩渦中。能保持理性判斷思考，更能清晰制定技術路線，積極應對技術變化及迭代。</p>
<h2 id="參考資料" tabindex="-1">參考資料 <a class="header-anchor" href="#參考資料" aria-label="Permalink to &quot;參考資料&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://zh.wikipedia.org/zh-tw/%E7%AC%AC%E4%B8%80%E5%8E%9F%E7%90%86" target="_blank" rel="noreferrer">第一原理 - 維基百科</a></li>
</ul>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[Python-001 探索]]></title>
            <link>https://www.aaron-shih.com/backend/python/python-001</link>
            <guid>https://www.aaron-shih.com/backend/python/python-001</guid>
            <pubDate>Sun, 03 Nov 2024 15:04:30 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><h1 id="python-001-探索" tabindex="-1">Python-001 探索 <a class="header-anchor" href="#python-001-探索" aria-label="Permalink to &quot;Python-001 探索&quot;">&ZeroWidthSpace;</a></h1>
<p>基於專案的因素，開始學習 Python 的語法以及框架知識，
此篇紀錄觀察有趣的學習點及差異點。</p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>保持滾動式的更新😵‍💫</p>
</div>
<h2 id="環境架設" tabindex="-1">環境架設 <a class="header-anchor" href="#環境架設" aria-label="Permalink to &quot;環境架設&quot;">&ZeroWidthSpace;</a></h2>
<p>在開始學習 Python 之前，需要先設置開發環境。以下是一些基本步驟：</p>
<ol>
<li><strong>安裝 Python</strong>:</li>
</ol>
<ul>
<li>前往 <a href="https://www.python.org/downloads/" target="_blank" rel="noreferrer">Python 官方網站</a> 下載並安裝最新版本的 Python。</li>
<li>安裝完成後，打開終端機（Terminal）並輸入 <code>python --version</code> 確認安裝成功。</li>
</ul>
<ol start="2">
<li><strong>設置虛擬環境</strong>:</li>
</ol>
<ul>
<li>使用 <code>venv</code> 模組來創建虛擬環境，避免不同專案之間的依賴衝突。</li>
<li>創建虛擬環境：<code>python -m venv myenv</code></li>
<li>啟動虛擬環境：</li>
<li>Windows: <code>myenv\Scripts\activate</code></li>
<li>macOS/Linux: <code>source myenv/bin/activate</code></li>
</ul>
<ol start="3">
<li><strong>安裝必要的套件</strong>:</li>
</ol>
<ul>
<li>使用 <code>pip</code> 來安裝所需的套件，例如 <code>requests</code>、<code>flask</code> 等。</li>
<li>安裝套件：<code>pip install requests flask</code></li>
</ul>
<ol start="4">
<li><strong>設置 IDE</strong>:</li>
</ol>
<ul>
<li>推薦使用 VSCode 或 PyCharm 作為開發工具，我是用 VSCode。</li>
<li>安裝 Python 插件以獲得語法 highlight、code autocomplete 功能。</li>
</ul>
<h2 id="基礎語法" tabindex="-1">基礎語法 <a class="header-anchor" href="#基礎語法" aria-label="Permalink to &quot;基礎語法&quot;">&ZeroWidthSpace;</a></h2>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<p>Python 和 JavaScript 都是直譯語言（interpreted languages），但它們的執行方式略有不同：</p>
<ul>
<li>Python: 通過 Python 直譯器（如 CPython）直接執行</li>
<li>JavaScript: 主要在瀏覽器的 JS 引擎（如 V8）中執行，也可通過 Node.js 在伺服器端執行</li>
</ul>
<p>兩者都是動態型別語言，在執行時才進行型別檢查，需要小心🥲。</p>
<p>主要差異：</p>
<ul>
<li>Python 使用縮排來定義程式區塊</li>
<li>JavaScript 使用大括號來定義程式區塊</li>
<li>Python 的命名習慣用 snake_case</li>
<li>JavaScript 的命名習慣用 camelCase</li>
</ul>
</div>
<p>Python 是一個動態型別的直譯語言，雖然在某些方面與 JavaScript 類似，但它們在語法結構和類型處理上有很大的差異。
以下是一些基本的 Python 語法特點：</p>
<h3 id="string" tabindex="-1">String <a class="header-anchor" href="#string" aria-label="Permalink to &quot;String&quot;">&ZeroWidthSpace;</a></h3>
<p>字串在 Python 中可以用單引號或雙引號表示，多行字串則使用三個引號：</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 基本字串</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">name </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Python"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">description </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'Programming Language'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 多行字串</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">multi_line </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> """</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">This is a</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">multi-line string</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"""</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 字串格式化</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">name </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Allen"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">age </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 30</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"My name is </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">name</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> and I'm </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">age</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> years old"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # f-string</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"My name is </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> and I'm </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> years old"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">format</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(name, age))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # format()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 字串操作</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">text </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Hello Python"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(text.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">upper</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">())</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 轉大寫</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(text.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">lower</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">())</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 轉小寫</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(text.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">split</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">())</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 分割字串</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>一些常見的字串方法：</p>
<ul>
<li><code>len()</code>: 取得字串長度</li>
<li><code>strip()</code>: 移除頭尾空白</li>
<li><code>replace()</code>: 替換字串</li>
<li><code>startswith()/endswith()</code>: 檢查字串開頭/結尾</li>
</ul>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>需要注意的是，Python 中的字串是不可變的（immutable），這點與 JavaScript 相同。</p>
</div>
<h3 id="number" tabindex="-1">Number <a class="header-anchor" href="#number" aria-label="Permalink to &quot;Number&quot;">&ZeroWidthSpace;</a></h3>
<p>在 Python 中，數字的處理有許多有趣的特性和方法：</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> math</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 基本型別</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">type</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1450</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 整數型別</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">type</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1450.0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 浮點數型別</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 除法運算</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1450</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">//</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 整數除法</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1450</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 浮點數除法</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">**</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            # 次方運算</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 四捨五入</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">round</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3.1415926</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 取小數點後兩位</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 銀行家捨入法（Python 3 採用）</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">round</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3.5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 結果為 4</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">round</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">4.5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # 結果為 -4</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">round</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0.5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 結果為 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 數學函式</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(math.pi)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         # 圓周率</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(math.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">ceil</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3.14</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 無條件進位</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(math.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">floor</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3.14</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 無條件捨去</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(math.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">sqrt</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 開根號</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 型別轉換</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">age </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 20</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">float</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(age))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 轉換為浮點數</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">type</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">str</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(age)))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 轉換為字串</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">bool</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(age))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # 轉換為布林值</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 科學記號</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">type</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1e3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # 1000.0 的科學記號</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">int</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1e3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 轉換為整數</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 特殊數值</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">nan1 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> float</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'nan'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # Not a Number</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(nan1)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">type</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(nan1))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 無限大（最大值為 1.7976931348623157e+308）</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">p_inf1 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> float</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'inf'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">type</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(p_inf1))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 字串格式化</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">my_money </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1000000</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"我有 </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">my_money</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 元"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">my_money</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # 千分位格式</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">my_money</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:.2f</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # 小數點後兩位</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">ratio </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.315</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">ratio</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:.1%</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 百分比格式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 對齊方式</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">pi </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3.1415926</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"|</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">pi</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:&#x3C;20</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">|"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 靠左對齊</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"|</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">pi</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:>20</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">|"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 靠右對齊</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"|</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">pi</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:^20</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">|"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 置中對齊</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"|</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">pi</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:x&#x3C;20.2f</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">|"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 自訂填充字元</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 補零</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">score1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> score2 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 123</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1450</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">score1</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:08</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # 00000123</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">score2</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:08</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # 00001450</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 時間格式</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hour</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> minute</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> second </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 12</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 7</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">hour</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:02</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">minute</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:02</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">second</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:02</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 03:12:07</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 字串切片</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">message </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "hellokitty"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">message[:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # 取前五個字元</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 切片物件</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">reverse </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> slice</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">None</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">None</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 反轉</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">all</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> slice</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">None</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">None</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">None</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 全部</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">last_5 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> slice</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">None</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">None</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # 最後五個</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">message[reverse]</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">message[</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">all</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">message[last_5]</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 位元組</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">data </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> b</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"hello"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">list</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(data))</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p>
<ol>
<li>Python 的數值運算非常直觀，但要注意整數除法（//）和一般除法（/）的區別</li>
<li>銀行家捨入法（Banker's Rounding）是為了減少累積誤差</li>
<li>使用 f-string 進行格式化時，可以使用多種對齊和格式化選項</li>
<li>Python 的數值範圍相當大，但仍有上限</li>
</ol>
</div>
<h3 id="bool" tabindex="-1">Bool <a class="header-anchor" href="#bool" aria-label="Permalink to &quot;Bool&quot;">&ZeroWidthSpace;</a></h3>
<p>在 Python 中，布林值和控制流程的操作有一些獨特之處：</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 布林值轉換</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">float</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">True</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # 1.0</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">float</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">False</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 0.0</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> True</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # True</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> False</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # True</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> True</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # True</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">message </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Hello, World!"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(message[</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">True</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">])</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   # 'e' (True 被當作索引 1)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 邏輯運算子</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">True</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> True</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   # True</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">True</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> False</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # False</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">False</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> True</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # False</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">False</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> False</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # False</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">True</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> False</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   # True</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">not</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> True</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # False</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 短路求值</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">False</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'不會執行'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">True</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'不會執行'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">True</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'會執行'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 流程控制</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 10</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">></span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'x 大於 5'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">elif</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">&#x3C;</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'x 小於 5'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'x 等於 5'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 三元運算子</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">x</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> y </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 20</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">max_num </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> x </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> y </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># match 陳述句（Python 3.10+）</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">value </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 10</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">match</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> value</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	case</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">		print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'值為 1'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	case</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">		print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'值為 2'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	case</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> _</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">		print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'其他值'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># match 與型別匹配</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">data </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 100</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">match</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> data</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	case</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> int</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> float</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">():</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">		print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'數字型別'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	case</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> str</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">():</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">		print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'字串型別'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	case</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> _</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">		print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'其他型別'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># match 與結構匹配</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">user </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'John'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 30</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">match</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> user</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	case</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'John'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> age]</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">		print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'John 今年 </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">age</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 歲'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	case</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [name</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> age]</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">		print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">name</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 今年 </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">age</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 歲'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 字典匹配</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">person </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'name'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'John'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'age'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 30</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">match</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> person</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	case</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'name'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'John'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'age'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> age</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">}:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">		print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'John 今年 </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">age</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 歲'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 條件匹配</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">nums </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">match</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> nums</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	case</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> x</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> y </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">		print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">x</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 是偶數'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	case</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> _</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">		print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'奇數'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p>
<ol>
<li>Python 的 Bool 是 <code>True</code> 和 <code>False</code>（首字母大寫）</li>
<li>支持短路求值（short-circuit evaluation）</li>
<li>match 陳述句（Python 3.10+）提供強大的模式匹配功能</li>
<li>三元運算子的語法比較直觀，但不要寫太巢狀</li>
</ol>
</div>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<ul>
<li>Python 中 <code>0</code>、<code>空字串</code>、<code>空列表</code>、<code>None</code> 都會被視為 <code>False</code></li>
<li>match 陳述句需要 Python 3.10 或更新版本</li>
</ul>
</div>
<h3 id="loop" tabindex="-1">Loop <a class="header-anchor" href="#loop" aria-label="Permalink to &quot;Loop&quot;">&ZeroWidthSpace;</a></h3>
<p>Python 提供了多種迴圈操作方式，以下是一些常見的用法：</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 基本迴圈</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">numbers </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 遍歷列表</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> numbers</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(num)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 使用 range</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(num)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 遍歷字串</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> char </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'hello'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(char)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 變數作用域示例</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">	hey </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "123123"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(num)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(num)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 迴圈結束後仍可存取</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(hey)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 迴圈內定義的變數也可存取</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 列表操作</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">heroes </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'batman'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'superman'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'wonder woman'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># enumerate 用法</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">list</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">enumerate</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(heroes)))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">heroes </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"悟空"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "達爾"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "蜘蛛人"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "蝙蝠俠"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 從 1 開始計數</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> i</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> hero </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> enumerate</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(heroes, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">i</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> {</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">hero</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># break 與 else 子句</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">		break</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(num)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # break 時不執行</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Loop completed'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 替代方案</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">		break</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(num)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> not</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Loop completed'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p>
<ol>
<li><code>enumerate()</code> 函數可以同時獲取索引和值</li>
<li>Python 迴圈的 <code>else</code> 子句在迴圈正常完成時執行</li>
<li><code>break</code> 會跳過 <code>else</code> 子句</li>
<li>迴圈變數在迴圈結束後仍然可用</li>
</ol>
</div>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<ul>
<li>注意變數作用域，Python 不像 JavaScript 有 block scope</li>
<li><code>else</code> 子句在迴圈中的行為可能不直觀</li>
</ul>
</div>
<h3 id="list" tabindex="-1">List <a class="header-anchor" href="#list" aria-label="Permalink to &quot;List&quot;">&ZeroWidthSpace;</a></h3>
<p>Python 的列表（List）是最常用的資料結構之一，具有動態大小和靈活的操作方式：</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 基本操作</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hershey </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'chocolate'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'caramel'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'nougat'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'almonds'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'toffee'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 成員檢查</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "caramel"</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> hershey</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">	print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"找到 caramel"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 索引和計數</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(hershey.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'caramel'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 取得位置</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(hershey.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">count</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'caramel'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 計算出現次數</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 添加和擴展</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hershey</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'peanuts'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 添加單一元素</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hershey</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'raisins'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'coconut'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">])</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 添加多個元素</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 排序</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">sorted_hershey </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> sorted</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(hershey, </span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">key</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">len</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 按長度排序</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 清空列表</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hershey</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">clear</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 列表解析（List Comprehension）</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">numbers </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">zeros </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> _ </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 切片操作</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(sorted_hershey[</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">])</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # 取得部分元素</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">sorted_hershey</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'new1'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'new2'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 替換部分元素</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 列表組合</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">comics </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Spider'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'Bat'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'Super'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">marvel </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Iron'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'Thor'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'Hulk'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">all_comics </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">comics</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">marvel]  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 解包組合</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 深淺拷貝</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> copy</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">copy_list </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> copy</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">deepcopy</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(sorted_hershey)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p>
<ol>
<li>列表是可變的（mutable）</li>
<li>支援多種操作方法：<code>append</code>、<code>extend</code>、<code>remove</code>、<code>pop</code>等</li>
<li>列表解析提供簡潔的創建方式</li>
<li>使用星號（*）運算符可以解包列表</li>
</ol>
</div>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<ul>
<li>深拷貝和淺拷貝的區別要注意</li>
<li>列表修改會影響所有引用</li>
<li>大型列表操作要考慮性能影響</li>
</ul>
</div>
<h3 id="set-tuple" tabindex="-1">Set &amp; Tuple <a class="header-anchor" href="#set-tuple" aria-label="Permalink to &quot;Set &amp; Tuple&quot;">&ZeroWidthSpace;</a></h3>
<p>在 Python 中，Set 和 Tuple 是兩種不同的數據結構，各有特色：</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Tuple（元組）</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 不可變序列，建立後不能修改</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">location </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">13.4125</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 103.866667</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">type</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(location))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # &#x3C;class 'tuple'></span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 可以省略括號</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">numbers </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 5</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2">type</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(numbers))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   # &#x3C;class 'tuple'></span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 支持索引訪問</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(numbers[</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">])</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 元組合併</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">combined </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> location </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> numbers</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(combined)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 創建新元組</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 元組的拷貝</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hero </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'Superman'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 30</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'Flying'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hero_copy </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> hero</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">[:]</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 淺拷貝</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">deep_copy </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> copy</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">deepcopy</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(hero)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 深拷貝</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Set（集合）</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 無序且不重複</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">unique_nums </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">11</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">}</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 重複元素會被移除</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(unique_nums)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # {1, 2, 11}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 支持數學集合運算</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">set1 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">set2 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(set1 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> set2)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # 差集</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(set1 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> set2)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # 聯集</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(set1 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">&#x26;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> set2)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # 交集</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 解構賦值</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">s </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 7</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">b</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> c </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> s          </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 解構集合</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p>
<ol>
<li>Tuple 適合存儲不變的數據序列</li>
<li>Set 適合需要去重和集合運算的場景</li>
<li>Tuple 比 List 佔用更少記憶體且創建更快</li>
<li>Set 的元素必須是可雜湊的（hashable）</li>
</ol>
</div>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<ul>
<li>Set 是無序的，不支持索引訪問</li>
<li>Tuple 一旦創建就不能修改</li>
<li>Set 不能包含可變物件（如列表）</li>
</ul>
</div>
<h3 id="dict-字典" tabindex="-1">Dict（字典） <a class="header-anchor" href="#dict-字典" aria-label="Permalink to &quot;Dict（字典）&quot;">&ZeroWidthSpace;</a></h3>
<p>Python 的字典（Dict）是一種鍵值對的資料結構，提供高效的資料存取：</p>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 基本操作</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hero </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> dict</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">fromkeys</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'name'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'age'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'power'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'health'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">], </span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">None</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hero</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'name'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'Superman'</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hero</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'age'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 30</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hero</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'power'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'Flying'</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hero</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'health'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 100</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 訪問和修改</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(hero.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'name'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # 安全地獲取值</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">del</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> hero</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'age'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             # 刪除鍵值對</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">pop </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> hero</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'power'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     # 彈出並返回值</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">popitem </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> hero</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">popitem</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 彈出最後一項</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 字典合併</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">info </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">**</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">hero</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">}</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            # 解包複製</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">infotwo </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> info </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> hero      </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 合併運算符（Python 3.9+）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 字典視圖</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(hero.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">items</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">())</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 獲取鍵值對</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 記憶體使用示例</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> sys </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> getsizeof</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 大型字典示例</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">big_dict </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">i</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> i </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> i </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1000000</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 比較視圖和列表的記憶體使用</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">keys1 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> big_dict</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">keys</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 字典視圖</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">keys2 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> list</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(keys1)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 轉換為列表</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getsizeof</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(keys1))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 40 bytes</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getsizeof</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(keys2))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # ~8MB</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p>
<ol>
<li>字典的鍵必須是不可變（hashable）的</li>
<li>字典視圖比列表更節省記憶體</li>
<li>使用 <code>.get()</code> 可以避免鍵不存在時的錯誤</li>
<li>Python 3.9+ 支援 <code>|</code> 運算符合併字典</li>
</ol>
</div>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<ul>
<li>字典是無序的（Python 3.7+ 保留插入順序）</li>
<li>大型字典操作要注意記憶體使用</li>
<li>避免直接訪問不存在的鍵</li>
</ul>
</div>
<h3 id="存址還是存引用" tabindex="-1">存址還是存引用 <a class="header-anchor" href="#存址還是存引用" aria-label="Permalink to &quot;存址還是存引用&quot;">&ZeroWidthSpace;</a></h3>
<p>在 Python 中，變數的存儲機制與其他語言有些不同：</p>
<ol>
<li><strong>不可變物件（Immutable）</strong>:</li>
</ol>
<ul>
<li>數字、字串、元組（tuple）</li>
<li>當值改變時，會建立新的物件</li>
<li>變數指向新的記憶體位置</li>
</ul>
<ol start="2">
<li><strong>可變物件（Mutable）</strong>:</li>
</ol>
<ul>
<li>列表（list）、字典（dict）、集合（set）</li>
<li>修改值時，物件本身被修改</li>
<li>變數仍指向同一個記憶體位置</li>
</ul>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 不可變物件示例</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">y </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> x</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(y)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 輸出 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 可變物件示例</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">list_a </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">list_b </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> list_a</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">list_a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(list_b)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 輸出 [1, 2, 3]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 使用 id() 觀察物件身份</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">y </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> x</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">id</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(x))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 例如：4378130624</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">id</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(y))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 相同的數字：4378130624</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 創建新列表</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">z </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">id</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(z))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 4377954304</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 字串示例</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">str1 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "hello"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">str2 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> str1</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">id</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(str1))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 例如：4379444496</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">id</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(str2))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 相同的數字：4379444496</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">str1 </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "world"</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   # 創建新字串</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">id</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(str1))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 不同的數字：4379445072</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2">id</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(str2))</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 原始數字：4379444496</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="重要注意事項" tabindex="-1">重要注意事項 <a class="header-anchor" href="#重要注意事項" aria-label="Permalink to &quot;重要注意事項&quot;">&ZeroWidthSpace;</a></h2>
<p>在使用 Python 時，還有一些重要的概念需要注意：</p>
<ol>
<li><strong>型別提示（Type Hints）</strong>:</li>
</ol>
<ul>
<li>Python 3.5+ 支援型別提示</li>
<li>幫助提高程式碼可讀性和維護性</li>
</ul>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> greet</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> str</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">-></span><span style="--shiki-light:#79B8FF;--shiki-dark:#56B6C2"> str</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">	return</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Hello </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">name</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="2">
<li><strong>垃圾回收機制</strong>:</li>
</ol>
<ul>
<li>Python 使用引用計數和循環垃圾回收</li>
<li>巨大的存儲操作要注意適時釋放記憶體</li>
</ul>
<ol start="3">
<li><strong>上下文管理器</strong>:</li>
</ol>
<ul>
<li>使用 <code>with</code> 語句自動管理資源</li>
<li>常用於檔案操作和資料庫連接</li>
</ul>
<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">with</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> open</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'file.txt'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> f</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">	content </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> f</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">read</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="4">
<li><strong>標準函式庫</strong>:</li>
</ol>
<ul>
<li><code>collections</code>: 提供額外的資料結構</li>
<li><code>itertools</code>: 提供高效迭代工具</li>
<li><code>functools</code>: 提供函式工具</li>
</ul>
<ol start="5">
<li><strong>命名規範</strong>:</li>
</ol>
<ul>
<li>變數和函式使用 snake_case</li>
<li>類別使用 PascalCase</li>
<li>常數使用大寫 SNAKE_CASE</li>
</ul>
<h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://pythonbook.cc/chapters/basic/introduction" target="_blank" rel="noreferrer">為你自己學py</a></li>
<li><a href="https://github.com/zhanymkanov/fastapi-best-practices" target="_blank" rel="noreferrer">Fastapi Best Pratice</a></li>
<li><a href="https://github.com/twtrubiks/python-notes" target="_blank" rel="noreferrer">python notes</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[Canvas 粒子化練習-歌詞播放器]]></title>
            <link>https://www.aaron-shih.com/frontend/canvas/canvas-001</link>
            <guid>https://www.aaron-shih.com/frontend/canvas/canvas-001</guid>
            <pubDate>Sun, 06 Oct 2024 14:22:53 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="canvas-粒子化練習-001-day-歌詞播放器" tabindex="-1">Canvas 粒子化練習 - 001 Day <a href="https://fet-skills.zeabur.app/canvas-lyrics-player.html" target="_blank" rel="noreferrer">歌詞播放器</a> <a class="header-anchor" href="#canvas-粒子化練習-001-day-歌詞播放器" aria-label="Permalink to &quot;Canvas 粒子化練習 - 001 Day [歌詞播放器](https://fet-skills.zeabur.app/canvas-lyrics-player.html)&quot;">&ZeroWidthSpace;</a></h1>
<p>基於對 Canvas 的好奇，加上颱風天閒閒沒事，看到了 Canvas 粒子化的 YouTube 影片，所以展開了這次的研究。
會接續下列幾點展開:</p>
<ul>
<li>同步顯示歌詞 + 歌詞嵌入 canvas</li>
<li>互動粒子效果</li>
<li>RWD + 粒子化</li>
</ul>
<p>話不多說就上囉！</p>
<h2 id="目錄" tabindex="-1">目錄 <a class="header-anchor" href="#目錄" aria-label="Permalink to &quot;目錄&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li><a href="#canvas-基礎介紹">Canvas 基礎介紹</a></li>
<li><a href="#audio-播放檔案與歌詞">Audio 播放檔案與歌詞</a></li>
<li><a href="#互動粒子">互動粒子</a></li>
<li><a href="#歌詞嵌入">歌詞嵌入</a></li>
<li><a href="#rwd與其他可改進的點">RWD與其他可改進的點</a></li>
<li><a href="#reference">Reference</a></li>
</ol>
<h2 id="canvas-基礎介紹" tabindex="-1">Canvas 基礎介紹 <a class="header-anchor" href="#canvas-基礎介紹" aria-label="Permalink to &quot;Canvas 基礎介紹&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="什麼是-canvas" tabindex="-1">什麼是 Canvas？ <a class="header-anchor" href="#什麼是-canvas" aria-label="Permalink to &quot;什麼是 Canvas？&quot;">&ZeroWidthSpace;</a></h3>
<p>Canvas 是 HTML5 提供的一個強大的圖形繪製 API，允許開發者在網頁上動態地繪製圖形和動畫。通過 JavaScript，您可以在 Canvas 上繪製 2D 或 3D 圖形，實現各種視覺效果。</p>
<h3 id="canvas-的應用場景" tabindex="-1">Canvas 的應用場景 <a class="header-anchor" href="#canvas-的應用場景" aria-label="Permalink to &quot;Canvas 的應用場景&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><strong>遊戲開發</strong>：創建2D或3D遊戲。</li>
<li><strong>數據可視化</strong>：繪製圖表和圖形。</li>
<li><strong>動畫效果</strong>：實現動態背景或互動動畫。</li>
<li><strong>圖像處理</strong>：進行圖片編輯和濾鏡處理。</li>
</ul>
<h3 id="基本使用方法" tabindex="-1">基本使用方法 <a class="header-anchor" href="#基本使用方法" aria-label="Permalink to &quot;基本使用方法&quot;">&ZeroWidthSpace;</a></h3>
<p>以下是一個簡單的 Canvas 繪製矩形的練習：</p>
<div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"myCanvas"</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66"> width</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"500"</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66"> height</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"500"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getElementById</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"myCanvas"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> ctx</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getContext</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"2d"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 取得 canvas 2d 實例中的屬性及方法</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  ctx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">fillStyle</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "#FF0000"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  ctx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">fillRect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 50</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 150</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>在這個練習中，放置了一個 500x500 像素的 Canvas，並在其上繪製了一個紅色的矩形。</p>
<h2 id="audio-播放檔案與歌詞" tabindex="-1">Audio 播放檔案與歌詞 <a class="header-anchor" href="#audio-播放檔案與歌詞" aria-label="Permalink to &quot;Audio 播放檔案與歌詞&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="音頻播放器設置" tabindex="-1">音頻播放器設置 <a class="header-anchor" href="#音頻播放器設置" aria-label="Permalink to &quot;音頻播放器設置&quot;">&ZeroWidthSpace;</a></h3>
<p>在這個練習中，使用 <code>&lt;audio&gt;</code> 標籤來播放音樂文件。基本的設置：</p>
<div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">audio</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"./02.mp3"</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66"> type</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"audio/ogg"</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66"> controls</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"audio-player"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">audio</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul>
<li><code>src</code>: 指向音頻文件的路徑。</li>
<li><code>controls</code>: 顯示瀏覽器默認的音頻控制元件。</li>
<li><code>id</code>: 用於 JavaScript 中引用音頻元素。</li>
</ul>
<h3 id="同步歌詞的數據結構" tabindex="-1">同步歌詞的數據結構 <a class="header-anchor" href="#同步歌詞的數據結構" aria-label="Permalink to &quot;同步歌詞的數據結構&quot;">&ZeroWidthSpace;</a></h3>
<p>為了實現歌詞與音頻的同步，將歌詞與對應的時間戳存儲在一個陣列中。每個歌詞對象包含 <code>time</code>（以秒為單位）和 <code>text</code>。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> lyrics</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">time</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> text</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "(傷心酒店 city pop)"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">time</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 21</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> text</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "冷淡的光線 哀怨的歌聲 飲酒的人無心晟"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 更多歌詞...</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">];</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="歌詞同步邏輯" tabindex="-1">歌詞同步邏輯 <a class="header-anchor" href="#歌詞同步邏輯" aria-label="Permalink to &quot;歌詞同步邏輯&quot;">&ZeroWidthSpace;</a></h3>
<p>通過監聽音頻的 <code>timeupdate</code> 事件，可以在播放時不斷檢查當前時間，並顯示對應的歌詞。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">audio</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">addEventListener</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"timeupdate"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> updateLyrics</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> updateLyrics</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> currentTime</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> audio</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">currentTime</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> lyrics</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">lyrics</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">time</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x3C;=</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> currentTime</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      currentLineIndex</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">currentLineIndex</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> previousLineIndex</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    createParticles</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">lyrics</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">currentLineIndex</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">text</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    previousLineIndex</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> currentLineIndex</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>確保當前播放時間達到某行歌詞的時間標記時，會動態更新顯示新歌詞並創建對應的粒子效果到 canvas 中。</p>
<h2 id="互動粒子" tabindex="-1">互動粒子 <a class="header-anchor" href="#互動粒子" aria-label="Permalink to &quot;互動粒子&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="粒子效果的基本原理" tabindex="-1">粒子效果的基本原理 <a class="header-anchor" href="#粒子效果的基本原理" aria-label="Permalink to &quot;粒子效果的基本原理&quot;">&ZeroWidthSpace;</a></h3>
<p>粒子效果通常由許多小粒子組成，粒子們根據特定的物理規則運動，創造出動態的視覺效果。而這次，粒子代表歌詞的每個單字 or 字詞，並隨著音樂播放進行動畫展示。</p>
<h3 id="粒子-particle-class" tabindex="-1">粒子（Particle Class） <a class="header-anchor" href="#粒子-particle-class" aria-label="Permalink to &quot;粒子（Particle Class）&quot;">&ZeroWidthSpace;</a></h3>
<p>定義一個 <code>Particle</code> Class 來管理每個粒子的屬性和會有的動作。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> mouse</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> radius</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 80</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> }; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 紀錄滑鼠滑到哪了及影響的半徑</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> particles</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> []; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 一維陣列 負責存儲和管理所有的粒子對象</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Particle</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> y</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> color</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> textWidth</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 粒子在 Canvas 上的初始 x 座標</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> textHeight</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 粒子在 Canvas 上的初始 y 座標</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">baseX</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 粒子的基礎 x 座標，粒子恢復位置時的目標 x 座標</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">baseY</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 粒子的基礎 y 座標，粒子恢復位置時的目標 y 座標</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> color</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 粒子的顏色</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">size</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> particleSize</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 粒子的大小（寬度和高度）</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">vx</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 粒子在 x 軸的速度</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">vy</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 粒子在 y 軸的速度</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">alpha</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">random</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.5</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.5</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 粒子的透明度，隨機初始化在 0.5 到 1 之間</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Particle</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">update</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> dx</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> mouse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 計算粒子與滑鼠在 x 軸上的距離</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> dy</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> mouse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 計算粒子與滑鼠在 y 軸上的距離</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> distance</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">sqrt</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">dx</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> dx</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> dy</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> dy</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 計算粒子與滑鼠距離</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">isMouseOver</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x26;&#x26;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> distance</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> mouse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">radius</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> angle</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">atan2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">dy</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> dx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 計算粒子與滑鼠之間的角度</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> force</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">mouse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">radius</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> distance</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> mouse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">radius</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 計算施加在粒子上的力的大小</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> forceX</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">cos</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">angle</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> force</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 計算施加在 x 軸上的力</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> forceY</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">sin</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">angle</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> force</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 計算施加在 y 軸上的力</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">vx</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -=</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> forceX</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 更新粒子的 x 速度</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">vy</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -=</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> forceY</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 更新粒子的 y 速度</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">vx</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">baseX</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 計算粒子回到基礎位置的 x 速度</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">vy</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">baseY</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 計算粒子回到基礎位置的 y 速度</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">vx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 更新粒子的 x 座標</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">vy</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 更新粒子的 y 座標</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">vx</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.9</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 減少 x 速度，實現緩動效果</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">vy</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.9</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 減少 y 速度，實現緩動效果</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">alpha</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.7</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">sin</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Date</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">now</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.005</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.01</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 更新粒子的透明度，創建閃爍效果</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Particle</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">draw</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  ctx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">fillStyle</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 設定填充顏色為粒子的顏色</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  ctx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">globalAlpha</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">alpha</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 設定全域的透明度為粒子的透明度</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  ctx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">fillRect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">size</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">size</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 繪製粒子為一個小正方形</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  ctx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">globalAlpha</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 重置透明度</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">};</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h3 id="粒子動畫循環" tabindex="-1">粒子動畫循環 <a class="header-anchor" href="#粒子動畫循環" aria-label="Permalink to &quot;粒子動畫循環&quot;">&ZeroWidthSpace;</a></h3>
<p>使用 <code>requestAnimationFrame</code> 來創建一個流暢的動畫循環，不斷更新和繪製粒子。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> animate</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  ctx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">clearRect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> particles</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    particles</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">update</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    particles</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">draw</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  requestAnimationFrame</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">animate</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 通常以每秒約 60 幀（FPS）的速度調用回調函數，取決於瀏覽器和設備的性能。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="互動效果" tabindex="-1">互動效果 <a class="header-anchor" href="#互動效果" aria-label="Permalink to &quot;互動效果&quot;">&ZeroWidthSpace;</a></h3>
<p>滑鼠移動影響粒子運動，使得粒子在滑鼠附近產生排斥效果，增強互動性。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">addEventListener</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"mousemove"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">e</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> rect</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getBoundingClientRect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  mouse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">clientX</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> rect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">left</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  mouse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">clientY</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> rect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">top</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  isMouseOver</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">addEventListener</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"mouseleave"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  isMouseOver</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">});</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="歌詞嵌入" tabindex="-1">歌詞嵌入 <a class="header-anchor" href="#歌詞嵌入" aria-label="Permalink to &quot;歌詞嵌入&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="將歌詞渲染到-canvas" tabindex="-1">將歌詞渲染到 Canvas <a class="header-anchor" href="#將歌詞渲染到-canvas" aria-label="Permalink to &quot;將歌詞渲染到 Canvas&quot;">&ZeroWidthSpace;</a></h3>
<p>為了將歌詞轉換為粒子，<strong>需要將文字渲染到一個臨時的 Canvas 上，然後提取像素數據來生成粒子</strong>。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> createParticles</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">text</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  particles</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> []; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 清空現有的粒子陣列</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 創建一個臨時的 Canvas 元素，用於渲染文本並提取像素</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> tempCanvas</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"canvas"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> tempCtx</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> tempCanvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getContext</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"2d"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  tempCanvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 設定臨時 Canvas 的寬度與主 Canvas 相同</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  tempCanvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 設定臨時 Canvas 的高度與主 Canvas 相同</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 設定字體大小，根據 Canvas 的寬度動態調整</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  fontSize</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 15</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  tempCtx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">font</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> fontSize</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "px 'Microsoft YaHei', sans-serif"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 設定字體樣式</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  tempCtx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">textAlign</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "center"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 文字水平置中</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  tempCtx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">textBaseline</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "middle"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 文字垂直置中</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> maxWidth</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.8</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 設定文字的最大寬度為 Canvas 寬度的 80%</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> lineHeight</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> fontSize</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1.2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 設定行高為字體大小的 1.2 倍</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> lines</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> wrapText</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">tempCtx</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> text</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> maxWidth</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 將文本進行自動換行</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  textHeight</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> lines</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> lineHeight</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 計算總文字高度</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  tempCtx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">fillStyle</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "#FFFFFF"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 設定填充顏色為白色</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 在臨時 Canvas 上繪製每一行文本</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> lines</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    tempCtx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">fillText</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      lines</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">      tempCanvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // x 座標設為 Canvas 的中心</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">      tempCanvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> textHeight</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> lineHeight</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> lineHeight</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // y 座標計算，確保文字垂直置中</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    );</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  textWidth</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> maxWidth</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 文字寬度設為最大寬度</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 獲取臨時 Canvas 上的圖像數據</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> imageData</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> tempCtx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getImageData</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> tempCanvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> tempCanvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 遍歷圖像數據的每個像素，每隔2個像素檢查一次</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> tempCanvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> tempCanvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> index</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> tempCanvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 計算像素在數據中的索引</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> alpha</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> imageData</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">index</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 獲取像素的透明度值</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">alpha</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ></span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 128</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 如果像素不透明（透明度大於 128）</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> color</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "#FFFFFF"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 設定粒子顏色為白色</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 創建新的粒子，位置根據 Canvas 中心調整</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> particle</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Particle</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">          x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> textWidth</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 調整 x 座標，使粒子置中</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">          y</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> textHeight</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 調整 y 座標，使粒子置中</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">          color</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 粒子顏色</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">        particles</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">particle</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 將粒子加入粒子陣列</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><h3 id="自動換行函數" tabindex="-1">自動換行函數 <a class="header-anchor" href="#自動換行函數" aria-label="Permalink to &quot;自動換行函數&quot;">&ZeroWidthSpace;</a></h3>
<p>確保歌詞在 Canvas 上整齊換行，保持可讀性。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> wrapText</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">context</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> text</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> maxWidth</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> words</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> text</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">split</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">" "</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 將文本以空格分割成單詞陣列</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> lines</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> []; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 初始化一個空陣列，用於存儲分行後的文本</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> currentLine</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> words</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 將第一個單詞設為當前行的開始</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 從第二個單詞開始遍歷所有單詞</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> words</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> word</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> words</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 取得當前單詞</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 計算將當前單詞加入當前行後的總寬度</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> context</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">measureText</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">currentLine</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> " "</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> word</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 如果總寬度小於最大寬度，則將單詞加入當前行</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> maxWidth</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      currentLine</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> " "</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> word</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 否則，將當前行推入 lines 陣列，並開始一個新的行</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">      lines</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">currentLine</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      currentLine</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> word</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 將最後一行加入 lines 陣列</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  lines</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">currentLine</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> lines</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 返回分行後的文本陣列</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="rwd與其他可改進的點" tabindex="-1">RWD與其他可改進的點 <a class="header-anchor" href="#rwd與其他可改進的點" aria-label="Permalink to &quot;RWD與其他可改進的點&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="響應式設計-rwd" tabindex="-1">響應式設計（RWD） <a class="header-anchor" href="#響應式設計-rwd" aria-label="Permalink to &quot;響應式設計（RWD）&quot;">&ZeroWidthSpace;</a></h3>
<p>確保 Canvas 和音頻播放器在不同設備和尺寸下都能展示。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> resizeCanvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">clientWidth</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">clientHeight</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">window</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">addEventListener</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"resize"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  fontSize</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  resizeCanvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  createParticles</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">lyrics</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">currentLineIndex</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">text</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">});</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="字體大小的動態調整" tabindex="-1">字體大小的動態調整 <a class="header-anchor" href="#字體大小的動態調整" aria-label="Permalink to &quot;字體大小的動態調整&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">fontSize</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 15</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 調整字體大小</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">tempCtx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">font</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> fontSize</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "px 'Microsoft YaHei', sans-serif"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="性能優化" tabindex="-1">性能優化 <a class="header-anchor" href="#性能優化" aria-label="Permalink to &quot;性能優化&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><strong>粒子數量控制</strong>：通過調整粒子的間距和大小來平衡性能和視覺效果。</li>
<li><strong>高效渲染</strong>：使用 <code>requestAnimationFrame</code> 確保動畫循環的流暢。</li>
<li><strong>資源管理</strong>：在處理大量文本或高粒子數量時，管理好內存和處理能力，避免遇到效能瓶頸。</li>
</ul>
<h3 id="其他可改進的點" tabindex="-1">其他可改進的點 <a class="header-anchor" href="#其他可改進的點" aria-label="Permalink to &quot;其他可改進的點&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><strong>更多粒子效果</strong>：引入不同形狀和顏色的粒子，增強視覺多樣性。</li>
<li><strong>用戶自定義</strong>：允許用戶自定義粒子的外觀和行為，如顏色、大小、運動方式等。</li>
<li><strong>卡拉OK式</strong>：實現卡拉OK式的歌詞 highlight 顯示，提升用戶體驗及炫砲程度。</li>
<li><strong>效能最佳化</strong>: 優化程式效能，可以動態的決定，粒子將渲染或不要渲染。</li>
<li><strong>多種動畫效果</strong>：添加粒子旋轉、彈跳等多樣化動畫，提升視覺動感。</li>
<li><strong>音樂節奏同步</strong>：根據音樂節奏調整粒子運動，增強與音樂的同步感。</li>
<li><strong>手機互動性提升</strong>：在移動設備上支持觸摸互動，提升手機端用戶體驗。</li>
<li><strong>粒子生命週期管理</strong>：設計粒子的運轉週期機制，使粒子效果更自然。</li>
</ul>
<h2 id="總結" tabindex="-1">總結 <a class="header-anchor" href="#總結" aria-label="Permalink to &quot;總結&quot;">&ZeroWidthSpace;</a></h2>
<p>通過這次的 Canvas 粒子化練習，實現了一個同步歌詞的互動粒子效果播放器。並透過 chatgpt4o-mini 及 perplexity 加速開發體驗，並透過自己對 JS 的認知加上組合功能，
整體來說還是很有趣的🌟
下一篇會針對可改進的點繪製流體粒子效果！</p>
<h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://www.youtube.com/@Frankslaboratory" target="_blank" rel="noreferrer">Franks laboratory</a> 非常推薦的資源！</li>
<li><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API" target="_blank" rel="noreferrer">MDN - Canvas API</a></li>
<li><a href="https://github.com/eepson123tw/fet-practice-skills/blob/master/fet-trick/canvas/canvas-lyrics-player.html" target="_blank" rel="noreferrer">Code</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[為何要學習]]></title>
            <link>https://www.aaron-shih.com/smallTalk/quick-learn</link>
            <guid>https://www.aaron-shih.com/smallTalk/quick-learn</guid>
            <pubDate>Mon, 09 Sep 2024 22:18:00 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="為何要學習" tabindex="-1">為何要學習 <a class="header-anchor" href="#為何要學習" aria-label="Permalink to &quot;為何要學習&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/quick-learn.webp" alt="quick-learn" data-fancybox="gallery"></p>
<p>最近在與一些業內朋友、前同事對話時感覺到他們對自己學習的能力有些懷疑，並說自己沒辦法任意的轉換不同公司、框架，挑戰不同的邏輯，
覺得我是個厲害的人，但誠實說，我並不是一個很聰明的人，很多概念我都要反覆的去看去想，才會有覺得記住的感覺，融會貫通就又要花更久的時間。
尤其是現在的這間公司，同事們都是本科碩士，看他們學東西，那是真的快😇</p>
<p>這篇就來分享我是如何學習，並且怎麼去思考這些學習後的概念。
這只是個我的個人經驗得出的一些思維模式，一定不會適合所有人，
但鼓勵大家學習總是要有個開頭，願意嘗試就成功一半了。</p>
<h2 id="學習什麼-為了什麼學習" tabindex="-1">學習什麼? 為了什麼學習? <a class="header-anchor" href="#學習什麼-為了什麼學習" aria-label="Permalink to &quot;學習什麼? 為了什麼學習?&quot;">&ZeroWidthSpace;</a></h2>
<p>在學習之前，我們要知道時間一定是等價金錢的，這個概念對我來說非常重要，每次的學習投入的時間，都是一個成本，若不學習我們去看劇看電影，獲得到的快樂，也可以算是個投資，我是這麼認為的。</p>
<p>那知道了時間等價後，每次的學習再開始前，我都會先想想，這次的學習我想做什麼，先定個目標、里程碑，讓這次的學習有個斷點，學習也不能無止境的，
達到了我們當初訂的目標，這次的任務就已經圓滿了，不需要太過度的追求，我一定要學得很強、學得比別人多，這是不可能的，我們只要比還未學習之前的自己，更加了解這個概念抑或是任務即可。</p>
<p>在確定學習目標及任務後，我會在確立一個動力，也能說是制約的一環，我會告訴自己在這個時間內我必須學習好這個概念，規律且系統性的安排某一段時間，必須要做這件事，是多是少不重要，但就是要在電腦桌前要打開檔案夾，打上幾個字， Notion TodoList 一直是我的好工具。</p>
<p><img src="/assets/images/small_talk/notion_todo.png" alt="Notion" data-fancybox="gallery"></p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>維持成一個習慣後，自然而然就會繼續下去了，很簡單但也很難。</p>
</div>
<p>制約是核心動力的一環，為什麼要學習，為什麼持續，在每一天日復一日的練習&lt;學習&gt;中，這會是支撐下去的動力，堅持住你就會看到成果。</p>
<h2 id="資源在哪裡" tabindex="-1">資源在哪裡? <a class="header-anchor" href="#資源在哪裡" aria-label="Permalink to &quot;資源在哪裡?&quot;">&ZeroWidthSpace;</a></h2>
<p>知道目標及確認核心動力後，我們要怎麼去找資源呢?在這個資訊爆炸的時代，有哪些資源是高效的、是還沒被淘汰的呢?
通常我會先想想朋友是不是有做過類似的東西，例如 LLM GEN AI，這個概念很新，資訊又這麼多，很容易被迷惑，
這時想起認識的後端朋友，大學是研究過 AI 的於是我就向他詢問資源，通常只要有一個好的起頭內容，
內容中的關鍵字就會與其他好資源關聯，
資源的好壞，往往直接影響我們是否能接觸到這次學習的本質、核心。</p>
<div class="danger custom-block"><p class="custom-block-title">DANGER</p>
<p>我們要學習本質及核心，而不是封裝後，似是而非的概念～</p>
</div>
<p>曾經我買過大量的程式課程，國內的資源平台、國外的資源平台、對岸的資源平台，我都註冊過會員，也都買過課程，但我覺得有些資源真的是用關鍵字就能找到一堆比課程更好的範例，有種白花錢的感覺。</p>
<p>我的 mentor 曾經告訴我，要去思考概念的本質，本質往往很簡單，學會了本質再去看，才學得通。</p>
<p>前端框架的本質最後都會轉化成 js html css，bundler 框架語法糖 lib 第三方庫，最後都會變成這些東西，在何時轉換、如何轉換、轉換的效益，包含了很多前端的知識，
bundler babel axios lodash vue react html tag tailwind http request 網路協定 method，這些東西成複雜的資料夾架構、程式碼區塊，但最終還是只會變成 js html css，當然這是很模糊很大的一個概念，裡面有很多很多可以深究的要素，但要知道學習本質就好，大多數的概念其實都是為了達成某要素。我們就是要找到要素是什麼，一開始一定是會不清不楚的，常常碰壁，這很正常，學習本來就是持續的過程，一次就能找到正確答案的東西，往往也很快就會忘記，痛過才會記得，這是我的些許體悟。</p>
<h2 id="如何練習" tabindex="-1">如何練習 <a class="header-anchor" href="#如何練習" aria-label="Permalink to &quot;如何練習&quot;">&ZeroWidthSpace;</a></h2>
<p>練習不是隨意的練習，打打嘗試過就叫練習了，而是要刻意的練習，我知道這很八股，但這就是這樣，
練習是多面向的，js 的迴圈有幾種，迴圈類型的差異在哪裡，什麼時候要用什麼迴圈，為何有些結構可以迴圈，
有些不行，我在程式碼中的某個段落迴圈會發生什麼事，迴圈太多次會怎麼樣，我在迴圈裡打下一個迴圈又會怎麼樣，
結束迴圈的條件是什麼？上面只是一個範例，但刻意地嘗試思考多一些問題，嘗試找出這些問題的解法，如此往復差異自然而然就會出現，
從小小的迴圈到新概念，多做幾次多錯幾次，漸漸就會清晰，知道某些結構在哪裡會錯，關鍵字在哪裡如何下，有哪些約定俗成的概念是都需要遵守的。</p>
<p>在進入這間公司前，我沒寫過 python，但報到後的一個月，我已經發了幾次修正後端 issue 的 mr，還幫忙研究新的 llm metrics 工具，看程式碼架構我覺得沒有很懂，有些資料結構跟語法上的差異跟 js 不一樣，但我要做的事情是一樣的，是明確的，我就用 js 的關鍵字與 python 關聯。</p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>遇到新的概念時，不要先否定、排斥，要先觀察，想想是不是有相似的概念我學過了，先用舊概念驗證看看</p>
</div>
<p>大量的刻意練習，會在意想不到的時刻，幫助你。
說穿了只是多做一點、多想一點而已，這個過程會很枯燥、有時候會懷疑，但只要你有核心動力堅持住，就會有意想不到的回報。</p>
<h2 id="驗證及覆盤" tabindex="-1">驗證及覆盤 <a class="header-anchor" href="#驗證及覆盤" aria-label="Permalink to &quot;驗證及覆盤&quot;">&ZeroWidthSpace;</a></h2>
<p>怎麼去驗證這些學習到的新知識，其實在練習中就是在驗證了，在練習的過程中，會發現有些點好像有所關聯，透過這些關聯的點，發想一個小題目小案子去實作，
要馬遇到更多問題需要學習，要馬就是成功實作出來，也就是透過這些實作再次的驗證，學習到的東西，去再次關聯，就這樣不斷的重複。</p>
<p>或是分享輸出給周遭的同事、朋友們，透過口語或文字的輸出，也是再次加深印象的一環，有些概念他們有不同的想法時，更是能驗證自己所學的概念，知識的碰撞也是一種學習。
若所學的概念不夠堅實，你也不會為之辯護。</p>
<h2 id="結語" tabindex="-1">結語 <a class="header-anchor" href="#結語" aria-label="Permalink to &quot;結語&quot;">&ZeroWidthSpace;</a></h2>
<p>為自己規劃學習路徑，空出時間持續練習，堅持住枯燥乏味衍生的自我懷疑，每一次的都比昨日的自己更進步一小步，相信每次的刻意付出都是成就更好的自己。
或許不會馬上的看到回報，但要相信不會白費這些時光。</p>
<p>每月寫一篇部落格，堅持到現在也兩年了。一開始也只是為了面試有個好談資，但寫著寫著也變成了自我對話回顧的一個紀錄。</p>
<p>加油！祝看到這篇文章的每個人，都有好歸宿！</p>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[利用AI學習Docker並應證]]></title>
            <link>https://www.aaron-shih.com/backend/docker</link>
            <guid>https://www.aaron-shih.com/backend/docker</guid>
            <pubDate>Sat, 24 Aug 2024 16:25:30 GMT</pubDate>
            <description><![CDATA[<PageInfo/><h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">&ZeroWidthSpace;</a></h1>
<p>換到新公司後需要負責一些部署方面的工作，因為是用 local 端起模型的模式，而且客戶的運行環境需要斷網，所以產品的更新需要使用到 docker，透過隔層分離，我們可以快速地遞交更新版本。也不會有環境不符的問題，雖然之前也學過 docker 並部署過東西，但大量使用卻是這份工作開始，為了加深印象，開始探索之旅吧。</p>
<h2 id="什麼是-docker" tabindex="-1">什麼是 Docker? <a class="header-anchor" href="#什麼是-docker" aria-label="Permalink to &quot;什麼是 Docker?&quot;">&ZeroWidthSpace;</a></h2>
<p>Docker 是一個輕量化的部署平台，可以方便的部署程式、環境、及系統工具。底層機制為建立一個隔離的環境，可以把它理解成 docker 用了些特技把當前系統騙住了，讓他相信這其實是另一個環境。透過<code>容器化</code>的方式，將環境隔離後，並在此環境運行我們定義的程式碼架構，但其實還是在調用當前系統的內核，所以我們還能在 docker 中寫一些 linux 指令。</p>
<h3 id="核心功能" tabindex="-1">核心功能 <a class="header-anchor" href="#核心功能" aria-label="Permalink to &quot;核心功能&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>Namespaces: 命名空間確保每個容器都有自己的系統視圖，包括自己的進程樹、網路介面和檔案系統。單一容器中的進程無法與另外的進程交互。</li>
<li>Control Groups (cgroups): Cgroups（控制群組的縮寫）是一項 Linux 核心功能，允許將進程組織成分層群組並對這些群組應用資源限制，docker 利用此特性，限制每個容器的使用資源上限，避免資源競態。</li>
<li>Union File System (UnionFS):聯合文件系統，允許覆蓋多個目錄，從而建立單一一致的檔案系統，而無需修改底層檔案。</li>
</ul>
<div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span>Namespaces => PID | Network | Namespace | Mount Namespace | User Namespace</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Control Group => docker run --memory="128m" --cpus="1.0" my_image</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Union File System ⬇️</span></span>
<span class="line"><span></span></span>
<span class="line"><span>FROM ubuntu:20.04</span></span>
<span class="line"><span>COPY . /app</span></span>
<span class="line"><span>RUN make /app</span></span>
<span class="line"><span>CMD ["./app"]</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="image" tabindex="-1">image <a class="header-anchor" href="#image" aria-label="Permalink to &quot;image&quot;">&ZeroWidthSpace;</a></h3>
<p>為一種只讀的可執行且輕量的印象檔，內部為獨立的環境，由 Dockerfile 建立（下方介紹），可理解為一個掛載檔案，將檔案掛載至當前系統中！我們也可以透過 docker hub(一種類似 github 的東西，但是拿來存放 docker image)，所以你可以自己寫，也可以下載別人寫好的服務～</p>
<h3 id="container" tabindex="-1">container <a class="header-anchor" href="#container" aria-label="Permalink to &quot;container&quot;">&ZeroWidthSpace;</a></h3>
<p>最重要的部分，<code>容器</code>將應用程式與其環境隔離，並確保應用程式在不同的運算環境中一致運行，輕量級的並且<code>共享主機系統的內核</code>。且容器是基於 image 的，所以當我們透過 Dockerfile 設定 image 時，也可以理解為在設定未來要起的容器內容。這樣是不是很方便呢，過往我們必須要在不同的 host 部署程式的話，還要擔心 host 的各種版本問題，不論是前端還是後端，都需要統一這些環境版本，但有了 docker 後，我們幾乎可以達到一件部署的樣式。</p>
<h3 id="dockerfile" tabindex="-1">Dockerfile <a class="header-anchor" href="#dockerfile" aria-label="Permalink to &quot;Dockerfile&quot;">&ZeroWidthSpace;</a></h3>
<p>Dockerfile 是一個文字文件，其中包含一系列有關如何建立 Docker 映像的設定。我個人感覺是寫起來蠻像 yml 的。</p>
<div class="language-Dockerfile vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Dockerfile</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Use the official Python image from the Docker Hub</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">FROM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> python:3.11-slim</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Set environment variables to prevent Python from writing .pyc files and to ensure output is logged immediately</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">ENV</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> PYTHONDONTWRITEBYTECODE=1</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">ENV</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> PYTHONUNBUFFERED=1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Set the working directory in the container</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">WORKDIR</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Copy the requirements file into the container</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">COPY</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> requirements.txt /app/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Install the Python dependencies</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">RUN</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> pip install --no-cache-dir -r requirements.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Copy the rest of the application code into the container</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">COPY</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> . /app/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Expose the port the app runs on</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">EXPOSE</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 8000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Command to run the application</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">CMD</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"python"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"app.py"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>實際上這個 markdown 網站也是用 docker 並使用 nginx 代理～</p>
<div class="language-Dockerfile vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Dockerfile</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 第一階段：構建 Vue.js 靜態資源使用 node:20 作為鏡像基底</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">FROM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> node:20 </span><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">AS</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> builder</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">WORKDIR</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">COPY</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> . .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">RUN</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> yarn install &#x26;&#x26; yarn run docs:build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># # 第二階段：將靜態資源部署到 Nginx 上</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">FROM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> nginx</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># # 複製 nginx.conf 到容器中的 /etc/nginx/conf.d/</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">COPY</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> nginx.conf /etc/nginx/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># # 複製生成的靜態資源到 Nginx 的 HTML 目錄</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">COPY</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> --from=builder /app/docs/.vitepress/dist /usr/share/nginx/html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">EXPOSE</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 8080</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">CMD</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"nginx"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"-g"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"daemon off;"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>最好是在有 autoformat 的環境撰寫，不然容易多空白之類的...（被雷過🤪</p>
</div>
<h3 id="docker-daemon-docker-client" tabindex="-1">Docker Daemon | Docker Client <a class="header-anchor" href="#docker-daemon-docker-client" aria-label="Permalink to &quot;Docker Daemon | Docker Client&quot;">&ZeroWidthSpace;</a></h3>
<p>Docker Daemon:（ dockerd ）是 Docker 的核心元件，在背景執行並管理所有 Docker 對象，例如映像、容器、網路和磁碟區。監聽 Docker API 請求並執行它們。
可以使用 JSON 或命令列來設定</p>
<p>Docker Client:（ docker ）是者與 Docker 互動的主要方式。執行docker run 之類的指令時，將這些指令傳送到 Docker Daemon 進程中執行～</p>
<p><img src="/assets/images/dockerimg/docker.png" alt="Docker" data-fancybox="gallery"></p>
<h2 id="常用指令" tabindex="-1">常用指令 <a class="header-anchor" href="#常用指令" aria-label="Permalink to &quot;常用指令&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> --name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">container_nam</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># -d 背景執行 container</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> ps</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -a</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 印出所有 container</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> logs</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">container_nam</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #針對某一容器印出內部訊息，常常因為後端改 code 時需要印出～</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> build</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -t</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> .</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #使用當前目錄下的 Dockerfile 建立 image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> info</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># -p 印射出 container 內部的 port 80 到 host 的 8080 port</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> --name</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> my-nginx</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> 8080:80</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># -f -f or --force 強制刪除無需確認</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> system</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> prune</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 將刪除所有未使用的數據，包括已停止的容器、未使用的網路、懸空映像以及可選的磁碟區。</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="network-volume" tabindex="-1">Network | Volume <a class="header-anchor" href="#network-volume" aria-label="Permalink to &quot;Network | Volume&quot;">&ZeroWidthSpace;</a></h2>
<p>Network: 允許容器相互通訊以及與外部服務通訊。每個容器都分配有自己的網路命名空間，為網路操作提供隔離的環境。</p>
<ul>
<li>host:共享主機的網路堆疊，允許容器直接存取主機的網絡，無需隔離。</li>
<li>bridge:預設網路驅動程式。它創建了一個隔離的網絡，供容器之間相互通信，同時與外部網路隔離。</li>
<li>overlay:允許跨多個 Docker 主機的容器進行通信</li>
</ul>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> network</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> create</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> bridge</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> my-network</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Volume: 用於持久性資料儲存。與容器檔案系統不同，容器檔案系統是短暫的，並且在容器被刪除時可能會遺失，Volume 提供了一種在容器生命週期之外儲存資料的方法。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># -v &#x3C;volume_name>:&#x3C;container_path> ：此指令將磁碟區或主機目錄安裝到容器內的指定路徑中。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -v</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> my-volume:/data</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> my-image</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<p>即使容器停止或刪除，磁碟區也允許資料保留。它們對於需要資料儲存的應用程式（例如資料庫）至關重要。</p>
</div>
<p>透過 gpt-4o 的整理 cheat sheet</p>
<details class="details custom-block"><summary>Details</summary>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Docker Commands Cheat Sheet</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">This</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> cheat</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> sheet</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> provides</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> comprehensive</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> list</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> of</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> commands</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> along</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> with</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> their</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> commonly</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> used</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> options</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> and</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> shortcuts.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">## Docker CLI Commands</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">### General Commands</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> --version</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Show</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> version</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> information.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> info</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Display</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> system-wide</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> information.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">### Docker Images</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> images</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> List</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> all</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> images</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> your</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> local</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> system.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> pull</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Pull</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> an</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> image</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> from</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> registry</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (e.g., </span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">Docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Hub</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> build</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -t</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> .</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Build</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> an</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> image</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> from</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Dockerfile</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> current</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> directory.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-t</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--tag</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Name</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> and</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> optionally</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">name:tag</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> format.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> rmi</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Remove</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> one</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> or</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> more</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> images.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--force</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Force</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> removal</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> of</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> image.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">### Docker Containers</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> ps</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> List</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> running</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> containers.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-a</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--all</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Show</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> all</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> containers</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (both </span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">running</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> and</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> stopped</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -it</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> command</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> new</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> container.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-i</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--interactive</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Keep</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> STDIN</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> open</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> even</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> if</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> not</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> attached.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-t</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--tty</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Allocate</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> pseudo-TTY.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-d</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--detach</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> container</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> background</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> and</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> print</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> container</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> ID.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-p</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--publish</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Publish</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> container</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'s port(s) to the host.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - `-v` or `--volume` : Bind mount a volume.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker exec -it &#x3C;container_name> &#x3C;command>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Run a command in a running container.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker stop &#x3C;container_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Stop a running container.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker start &#x3C;container_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Start a stopped container.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker restart &#x3C;container_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Restart a running container.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker rm &#x3C;container_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Remove one or more containers.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - `-f` or `--force` : Force the removal of a running container.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">### Docker Volumes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker volume ls`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - List all volumes.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker volume create &#x3C;volume_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Create a new volume.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker volume rm &#x3C;volume_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Remove one or more volumes.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker run -v &#x3C;volume_name>:&#x3C;container_path> &#x3C;image_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Create a container with a volume attached.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - `-v` or `--volume` : Bind mount a volume.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">### Docker Networks</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker network ls`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - List all networks.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker network create &#x3C;network_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Create a new network.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker network rm &#x3C;network_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Remove one or more networks.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker network inspect &#x3C;network_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Display detailed information on one or more networks.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker run --network &#x3C;network_name> &#x3C;image_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Run a container attached to a specific network.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">### Docker Compose</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker-compose up`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Build, (re)create, start, and attach to containers for a service.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - `-d` or `--detach` : Run containers in the background.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker-compose down`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Stop and remove containers, networks, images, and volumes.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker-compose build`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Build or rebuild services.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker-compose ps`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - List containers.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker-compose logs`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - View output from containers.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">## Docker Shortcuts and Options</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `-d` : Run container in detached mode (background).</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `-p` : Map host ports to container ports.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `-v` : Mount a host directory or volume into the container.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `-i` : Keep STDIN open even if not attached.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `-t` : Allocate a pseudo-TTY (terminal).</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `--rm` : Automatically remove the container when it exits.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `--name` : Assign a name to the container.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `--network` : Connect a container to a specific network.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `--env` or `-e` : Set environment variables.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">## Common Docker Files</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">### Dockerfile</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `FROM &#x3C;base_image>` : Set the base image for subsequent instructions.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `COPY &#x3C;source> &#x3C;destination>` : Copy files from the host to the image.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `RUN &#x3C;command>` : Run a command during image build.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `CMD &#x3C;command>` : Specify the default command to run when the container starts.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `EXPOSE &#x3C;port>` : Expose a port to the host.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">### docker-compose.yml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `version: '</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">3</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'` : Specify the Docker Compose file version.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `services:` : Define services (containers) to run.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `volumes:` : Define and mount volumes.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `networks:` : Define and connect to networks.</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br></div></div></details>
]]></description>
            <content:encoded><![CDATA[<PageInfo/><h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">&ZeroWidthSpace;</a></h1>
<p>換到新公司後需要負責一些部署方面的工作，因為是用 local 端起模型的模式，而且客戶的運行環境需要斷網，所以產品的更新需要使用到 docker，透過隔層分離，我們可以快速地遞交更新版本。也不會有環境不符的問題，雖然之前也學過 docker 並部署過東西，但大量使用卻是這份工作開始，為了加深印象，開始探索之旅吧。</p>
<h2 id="什麼是-docker" tabindex="-1">什麼是 Docker? <a class="header-anchor" href="#什麼是-docker" aria-label="Permalink to &quot;什麼是 Docker?&quot;">&ZeroWidthSpace;</a></h2>
<p>Docker 是一個輕量化的部署平台，可以方便的部署程式、環境、及系統工具。底層機制為建立一個隔離的環境，可以把它理解成 docker 用了些特技把當前系統騙住了，讓他相信這其實是另一個環境。透過<code>容器化</code>的方式，將環境隔離後，並在此環境運行我們定義的程式碼架構，但其實還是在調用當前系統的內核，所以我們還能在 docker 中寫一些 linux 指令。</p>
<h3 id="核心功能" tabindex="-1">核心功能 <a class="header-anchor" href="#核心功能" aria-label="Permalink to &quot;核心功能&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>Namespaces: 命名空間確保每個容器都有自己的系統視圖，包括自己的進程樹、網路介面和檔案系統。單一容器中的進程無法與另外的進程交互。</li>
<li>Control Groups (cgroups): Cgroups（控制群組的縮寫）是一項 Linux 核心功能，允許將進程組織成分層群組並對這些群組應用資源限制，docker 利用此特性，限制每個容器的使用資源上限，避免資源競態。</li>
<li>Union File System (UnionFS):聯合文件系統，允許覆蓋多個目錄，從而建立單一一致的檔案系統，而無需修改底層檔案。</li>
</ul>
<div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span>Namespaces => PID | Network | Namespace | Mount Namespace | User Namespace</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Control Group => docker run --memory="128m" --cpus="1.0" my_image</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Union File System ⬇️</span></span>
<span class="line"><span></span></span>
<span class="line"><span>FROM ubuntu:20.04</span></span>
<span class="line"><span>COPY . /app</span></span>
<span class="line"><span>RUN make /app</span></span>
<span class="line"><span>CMD ["./app"]</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="image" tabindex="-1">image <a class="header-anchor" href="#image" aria-label="Permalink to &quot;image&quot;">&ZeroWidthSpace;</a></h3>
<p>為一種只讀的可執行且輕量的印象檔，內部為獨立的環境，由 Dockerfile 建立（下方介紹），可理解為一個掛載檔案，將檔案掛載至當前系統中！我們也可以透過 docker hub(一種類似 github 的東西，但是拿來存放 docker image)，所以你可以自己寫，也可以下載別人寫好的服務～</p>
<h3 id="container" tabindex="-1">container <a class="header-anchor" href="#container" aria-label="Permalink to &quot;container&quot;">&ZeroWidthSpace;</a></h3>
<p>最重要的部分，<code>容器</code>將應用程式與其環境隔離，並確保應用程式在不同的運算環境中一致運行，輕量級的並且<code>共享主機系統的內核</code>。且容器是基於 image 的，所以當我們透過 Dockerfile 設定 image 時，也可以理解為在設定未來要起的容器內容。這樣是不是很方便呢，過往我們必須要在不同的 host 部署程式的話，還要擔心 host 的各種版本問題，不論是前端還是後端，都需要統一這些環境版本，但有了 docker 後，我們幾乎可以達到一件部署的樣式。</p>
<h3 id="dockerfile" tabindex="-1">Dockerfile <a class="header-anchor" href="#dockerfile" aria-label="Permalink to &quot;Dockerfile&quot;">&ZeroWidthSpace;</a></h3>
<p>Dockerfile 是一個文字文件，其中包含一系列有關如何建立 Docker 映像的設定。我個人感覺是寫起來蠻像 yml 的。</p>
<div class="language-Dockerfile vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Dockerfile</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Use the official Python image from the Docker Hub</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">FROM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> python:3.11-slim</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Set environment variables to prevent Python from writing .pyc files and to ensure output is logged immediately</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">ENV</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> PYTHONDONTWRITEBYTECODE=1</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">ENV</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> PYTHONUNBUFFERED=1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Set the working directory in the container</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">WORKDIR</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Copy the requirements file into the container</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">COPY</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> requirements.txt /app/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Install the Python dependencies</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">RUN</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> pip install --no-cache-dir -r requirements.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Copy the rest of the application code into the container</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">COPY</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> . /app/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Expose the port the app runs on</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">EXPOSE</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 8000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Command to run the application</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">CMD</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"python"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"app.py"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>實際上這個 markdown 網站也是用 docker 並使用 nginx 代理～</p>
<div class="language-Dockerfile vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Dockerfile</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 第一階段：構建 Vue.js 靜態資源使用 node:20 作為鏡像基底</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">FROM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> node:20 </span><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">AS</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> builder</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">WORKDIR</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">COPY</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> . .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">RUN</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> yarn install &#x26;&#x26; yarn run docs:build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># # 第二階段：將靜態資源部署到 Nginx 上</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">FROM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> nginx</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># # 複製 nginx.conf 到容器中的 /etc/nginx/conf.d/</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">COPY</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> nginx.conf /etc/nginx/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># # 複製生成的靜態資源到 Nginx 的 HTML 目錄</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">COPY</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> --from=builder /app/docs/.vitepress/dist /usr/share/nginx/html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">EXPOSE</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 8080</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#61AFEF">CMD</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"nginx"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"-g"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"daemon off;"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>最好是在有 autoformat 的環境撰寫，不然容易多空白之類的...（被雷過🤪</p>
</div>
<h3 id="docker-daemon-docker-client" tabindex="-1">Docker Daemon | Docker Client <a class="header-anchor" href="#docker-daemon-docker-client" aria-label="Permalink to &quot;Docker Daemon | Docker Client&quot;">&ZeroWidthSpace;</a></h3>
<p>Docker Daemon:（ dockerd ）是 Docker 的核心元件，在背景執行並管理所有 Docker 對象，例如映像、容器、網路和磁碟區。監聽 Docker API 請求並執行它們。
可以使用 JSON 或命令列來設定</p>
<p>Docker Client:（ docker ）是者與 Docker 互動的主要方式。執行docker run 之類的指令時，將這些指令傳送到 Docker Daemon 進程中執行～</p>
<p><img src="/assets/images/dockerimg/docker.png" alt="Docker" data-fancybox="gallery"></p>
<h2 id="常用指令" tabindex="-1">常用指令 <a class="header-anchor" href="#常用指令" aria-label="Permalink to &quot;常用指令&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> --name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">container_nam</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># -d 背景執行 container</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> ps</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -a</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 印出所有 container</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> logs</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">container_nam</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #針對某一容器印出內部訊息，常常因為後端改 code 時需要印出～</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> build</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -t</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> .</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #使用當前目錄下的 Dockerfile 建立 image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> info</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># -p 印射出 container 內部的 port 80 到 host 的 8080 port</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> --name</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> my-nginx</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> 8080:80</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># -f -f or --force 強制刪除無需確認</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> system</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> prune</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 將刪除所有未使用的數據，包括已停止的容器、未使用的網路、懸空映像以及可選的磁碟區。</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="network-volume" tabindex="-1">Network | Volume <a class="header-anchor" href="#network-volume" aria-label="Permalink to &quot;Network | Volume&quot;">&ZeroWidthSpace;</a></h2>
<p>Network: 允許容器相互通訊以及與外部服務通訊。每個容器都分配有自己的網路命名空間，為網路操作提供隔離的環境。</p>
<ul>
<li>host:共享主機的網路堆疊，允許容器直接存取主機的網絡，無需隔離。</li>
<li>bridge:預設網路驅動程式。它創建了一個隔離的網絡，供容器之間相互通信，同時與外部網路隔離。</li>
<li>overlay:允許跨多個 Docker 主機的容器進行通信</li>
</ul>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> network</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> create</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> bridge</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> my-network</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Volume: 用於持久性資料儲存。與容器檔案系統不同，容器檔案系統是短暫的，並且在容器被刪除時可能會遺失，Volume 提供了一種在容器生命週期之外儲存資料的方法。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># -v &#x3C;volume_name>:&#x3C;container_path> ：此指令將磁碟區或主機目錄安裝到容器內的指定路徑中。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -v</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> my-volume:/data</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> my-image</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<p>即使容器停止或刪除，磁碟區也允許資料保留。它們對於需要資料儲存的應用程式（例如資料庫）至關重要。</p>
</div>
<p>透過 gpt-4o 的整理 cheat sheet</p>
<details class="details custom-block"><summary>Details</summary>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Docker Commands Cheat Sheet</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">This</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> cheat</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> sheet</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> provides</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> comprehensive</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> list</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> of</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> commands</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> along</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> with</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> their</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> commonly</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> used</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> options</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> and</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> shortcuts.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">## Docker CLI Commands</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">### General Commands</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> --version</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Show</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> version</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> information.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> info</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Display</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> system-wide</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> information.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">### Docker Images</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> images</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> List</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> all</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> images</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> your</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> local</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> system.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> pull</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Pull</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> an</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> image</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> from</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> registry</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (e.g., </span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">Docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Hub</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> build</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -t</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> .</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Build</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> an</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> image</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> from</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Dockerfile</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> current</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> directory.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-t</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--tag</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Name</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> and</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> optionally</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">name:tag</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> format.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> rmi</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Remove</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> one</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> or</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> more</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> images.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--force</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Force</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> removal</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> of</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> image.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">### Docker Containers</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> ps</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> List</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> running</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> containers.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-a</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--all</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Show</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> all</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> containers</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (both </span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">running</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> and</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> stopped</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66"> -it</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">image_nam</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">e</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> command</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> new</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> container.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-i</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--interactive</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Keep</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> STDIN</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> open</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> even</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> if</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> not</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> attached.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-t</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--tty</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Allocate</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> pseudo-TTY.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-d</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--detach</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Run</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> container</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> background</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> and</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> print</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> container</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> ID.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  -</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">-p</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> or</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">--publish</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2"> :</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> Publish</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379"> container</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'s port(s) to the host.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - `-v` or `--volume` : Bind mount a volume.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker exec -it &#x3C;container_name> &#x3C;command>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Run a command in a running container.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker stop &#x3C;container_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Stop a running container.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker start &#x3C;container_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Start a stopped container.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker restart &#x3C;container_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Restart a running container.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker rm &#x3C;container_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Remove one or more containers.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - `-f` or `--force` : Force the removal of a running container.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">### Docker Volumes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker volume ls`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - List all volumes.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker volume create &#x3C;volume_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Create a new volume.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker volume rm &#x3C;volume_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Remove one or more volumes.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker run -v &#x3C;volume_name>:&#x3C;container_path> &#x3C;image_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Create a container with a volume attached.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - `-v` or `--volume` : Bind mount a volume.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">### Docker Networks</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker network ls`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - List all networks.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker network create &#x3C;network_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Create a new network.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker network rm &#x3C;network_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Remove one or more networks.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker network inspect &#x3C;network_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Display detailed information on one or more networks.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker run --network &#x3C;network_name> &#x3C;image_name>`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Run a container attached to a specific network.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">### Docker Compose</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker-compose up`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Build, (re)create, start, and attach to containers for a service.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - `-d` or `--detach` : Run containers in the background.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker-compose down`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Stop and remove containers, networks, images, and volumes.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker-compose build`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - Build or rebuild services.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker-compose ps`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - List containers.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `docker-compose logs`</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  - View output from containers.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">## Docker Shortcuts and Options</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `-d` : Run container in detached mode (background).</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `-p` : Map host ports to container ports.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `-v` : Mount a host directory or volume into the container.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `-i` : Keep STDIN open even if not attached.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `-t` : Allocate a pseudo-TTY (terminal).</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `--rm` : Automatically remove the container when it exits.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `--name` : Assign a name to the container.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `--network` : Connect a container to a specific network.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `--env` or `-e` : Set environment variables.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">## Common Docker Files</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">### Dockerfile</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `FROM &#x3C;base_image>` : Set the base image for subsequent instructions.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `COPY &#x3C;source> &#x3C;destination>` : Copy files from the host to the image.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `RUN &#x3C;command>` : Run a command during image build.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `CMD &#x3C;command>` : Specify the default command to run when the container starts.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `EXPOSE &#x3C;port>` : Expose a port to the host.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">### docker-compose.yml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `version: '</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379">3</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'` : Specify the Docker Compose file version.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `services:` : Define services (containers) to run.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `volumes:` : Define and mount volumes.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">- `networks:` : Define and connect to networks.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">---</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br></div></div></details>
<h2 id="docker-compose" tabindex="-1">Docker Compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;Docker Compose&quot;">&ZeroWidthSpace;</a></h2>
<p>是一個讓你可以定義多個 container 執行的設定文件，以 yaml 格式撰寫 <code>docker-compose.yml</code>,
以下是 gpt-4o 提供的範例，基本上跟公司的長的 7788 像。通常我們可以加些綴詞來區分不同環境如</p>
<ul>
<li>docker-compose.local.yml</li>
<li>docker-compose.sta.yml</li>
<li>docker-compose.prod.yml
...etc</li>
</ul>
<div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "3"</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">services</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">  web</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">    image</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> my-web-app:latest</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">    build</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> .</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">    ports</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"8080:8080"</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">    environment</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">DATABASE_URL=postgres://user:password@db:5432/mydatabase</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">    depends_on</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">db</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">  db</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">    image</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> postgres:latest</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">    volumes</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">db-data:/var/lib/postgresql/data</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">    environment</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">POSTGRES_USER=user</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">POSTGRES_PASSWORD=password</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">POSTGRES_DB=mydatabase</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">volumes</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75">  db-data</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="docker-desktop-orbstack-portainer" tabindex="-1">Docker Desktop | Orbstack | Portainer <a class="header-anchor" href="#docker-desktop-orbstack-portainer" aria-label="Permalink to &quot;Docker Desktop | Orbstack | Portainer&quot;">&ZeroWidthSpace;</a></h2>
<p>Docker Desktop 是操作 docker 的 GUI 介面，可以方便你觀察容器使用情況...etc</p>
<p>OrbStack 是 Docker Desktop 的輕量級且高效的替代方案，用於在 macOS 上運行容器和 Linux 虛擬機器。解決了 Docker Desktop 的一些限制，例如資源密集性和複雜的設定。
使用更少的記憶體和 CPU 資源，但目前只在 macOS 上運行。</p>
<p>Portainer.io:是一個輕量級管理 UI，可輕鬆管理 Docker 環境，包括容器、映像、網頁和磁碟區。它提供了一個簡單直覺的基於 Web 的介面來管理 Docker 資源，使初學者和經驗豐富的使用者都可以更輕鬆地操作和監控其 Docker 環境。</p>
<h2 id="參考文獻" tabindex="-1">參考文獻 <a class="header-anchor" href="#參考文獻" aria-label="Permalink to &quot;參考文獻&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://www.docker.com/" target="_blank" rel="noreferrer">Docker</a></li>
<li><a href="https://docs.orbstack.dev/" target="_blank" rel="noreferrer">Orbstack</a></li>
<li><a href="https://www.portainer.io/" target="_blank" rel="noreferrer">portainer</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[發布一個 npm 組件]]></title>
            <link>https://www.aaron-shih.com/frontend/npm-build-package</link>
            <guid>https://www.aaron-shih.com/frontend/npm-build-package</guid>
            <pubDate>Sat, 03 Aug 2024 13:09:00 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><h1 id="發布一個-npm-組件" tabindex="-1">發布一個 npm <a href="https://www.npmjs.com/package/@eepson123tw/canvas-meme" target="_blank" rel="noreferrer">組件</a> <a class="header-anchor" href="#發布一個-npm-組件" aria-label="Permalink to &quot;發布一個 npm [組件](https://www.npmjs.com/package/@eepson123tw/canvas-meme)&quot;">&ZeroWidthSpace;</a></h1>
<p>一直希望能做公有組件並考慮上傳 npm ，
<br> 想了一個一直想做而且頗鬧的題目來實作😂
<br> 上傳圖片後可以轉化成文字顯示畫上 Canvas。</p>
<p><img src="/assets/images/npm/image.png" alt="alt text" data-fancybox="gallery"></p>
<h2 id="設立目標" tabindex="-1">設立目標 <a class="header-anchor" href="#設立目標" aria-label="Permalink to &quot;設立目標&quot;">&ZeroWidthSpace;</a></h2>
<p>想實作的方式，列下幾種必須達到的 Goal</p>
<ul>
<li>必須透過 Vue3 Typescript 實作</li>
<li>必需使用自動化流程版號</li>
<li>package.json 的各項值設定</li>
<li>簡單好玩的程式實作</li>
</ul>
<h2 id="遇到挑戰" tabindex="-1">遇到挑戰 <a class="header-anchor" href="#遇到挑戰" aria-label="Permalink to &quot;遇到挑戰&quot;">&ZeroWidthSpace;</a></h2>
<p>實際上實作時卻發現...</p>
<h3 id="typescript-環境設定" tabindex="-1">Typescript 環境設定 <a class="header-anchor" href="#typescript-環境設定" aria-label="Permalink to &quot;Typescript 環境設定&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>起初不熟悉 Typescript 各種 .json 的後綴檔案代表的意義，熟悉了一陣子，後來才理解 tsconfig.app.json 「app」 為代表管理的環境，app 為應用、node 為後端建構等等。並統一在 tsconfig.json 中參考，以便 Ts 編譯器可以知道使用的環境。</li>
</ul>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-py1r0" id="tab-bhKmS30" checked="checked"><label for="tab-bhKmS30">tsconfig.json</label><input type="radio" name="group-py1r0" id="tab-19pkMZT" ><label for="tab-19pkMZT">tsconfig.app.json</label><input type="radio" name="group-py1r0" id="tab-gZBi_Ex" ><label for="tab-gZBi_Ex">tsconfig.node.json</label></div><div class="blocks">
<div class="language-tsconfig.json vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">tsconfig.json</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span>{</span></span>
<span class="line"><span>  "references": [</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>      "path": "./tsconfig.app.json" // [!code focus] 應用程式的 TypeScript 配置</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>      "path": "./tsconfig.node.json" // Node.js 環境的 TypeScript 配置</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>      "path": "./tsconfig.config.json" // 特定配置的 TypeScript 配置</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  ],</span></span>
<span class="line"><span>  "compilerOptions": {</span></span>
<span class="line"><span>    "allowSyntheticDefaultImports": true, // 允許合成默認導入</span></span>
<span class="line"><span>    "baseUrl": "./", // 基本路徑設置</span></span>
<span class="line"><span>    "declaration": true, // 生成宣告文件</span></span>
<span class="line"><span>    "declarationDir": "./dist/types", // 宣告文件的輸出目錄</span></span>
<span class="line"><span>    "esModuleInterop": true, // 允許 ES 模組互操作性</span></span>
<span class="line"><span>    "experimentalDecorators": true, // 啟用實驗性的裝飾器功能</span></span>
<span class="line"><span>    "importHelpers": true, // 引入幫助函數</span></span>
<span class="line"><span>    "isolatedModules": true, // 每個文件作為一個單獨的模組處理</span></span>
<span class="line"><span>    "jsx": "preserve", // 保留 JSX 語法</span></span>
<span class="line"><span>    "lib": ["esnext", "dom", "dom.iterable", "scripthost"], // 使用的 TypeScript 標準庫</span></span>
<span class="line"><span>    "module": "esnext", // 模組格式</span></span>
<span class="line"><span>    "target": "esnext", // 編譯目標</span></span>
<span class="line"><span>    "moduleResolution": "node", // 模組解析策略</span></span>
<span class="line"><span>    "noUnusedLocals": true, // 不允許未使用的本地變量</span></span>
<span class="line"><span>    "noUnusedParameters": true, // 不允許未使用的參數</span></span>
<span class="line"><span>    "outDir": "dist", // 輸出目錄</span></span>
<span class="line"><span>    "paths": {</span></span>
<span class="line"><span>      "@/*": ["src/*"] // 路徑別名設置</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    "resolveJsonModule": true, // 允許導入 JSON 模組</span></span>
<span class="line"><span>    "sourceMap": true, // 生成 source map</span></span>
<span class="line"><span>    "strict": true, // 啟用所有嚴格的類型檢查選項</span></span>
<span class="line"><span>    "types": ["node", "vue"], // 包含的類型定義</span></span>
<span class="line"><span>    "useDefineForClassFields": true // 使用 `define` 關鍵字定義類字段</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  "exclude": [</span></span>
<span class="line"><span>    "node_modules", // 排除 node_modules 目錄</span></span>
<span class="line"><span>    "dist" // 排除 dist 目錄</span></span>
<span class="line"><span>  ]</span></span>
<span class="line"><span>}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><div class="language-tsconfig.app.json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">tsconfig.app.json</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span>{</span></span>
<span class="line"><span>  "compilerOptions": {</span></span>
<span class="line"><span>    "composite": true,</span></span>
<span class="line"><span>    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",</span></span>
<span class="line"><span>    "target": "esnext",</span></span>
<span class="line"><span>    "useDefineForClassFields": true,</span></span>
<span class="line"><span>    "module": "esnext",</span></span>
<span class="line"><span>    "lib": ["ES2020", "DOM", "DOM.Iterable"],</span></span>
<span class="line"><span>    "skipLibCheck": true,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /* Bundler mode */</span></span>
<span class="line"><span>    "moduleResolution": "bundler",</span></span>
<span class="line"><span>    "allowImportingTsExtensions": true,</span></span>
<span class="line"><span>    "resolveJsonModule": true,</span></span>
<span class="line"><span>    "isolatedModules": true,</span></span>
<span class="line"><span>    "moduleDetection": "force",</span></span>
<span class="line"><span>    "noEmit": true,</span></span>
<span class="line"><span>    "jsx": "preserve",</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /* Linting */</span></span>
<span class="line"><span>    "strict": true,</span></span>
<span class="line"><span>    "noUnusedLocals": true,</span></span>
<span class="line"><span>    "noUnusedParameters": true,</span></span>
<span class="line"><span>    "noFallthroughCasesInSwitch": true</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  "include": ["src/**/*", "src/**/*.vue"]</span></span>
<span class="line"><span>}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><div class="language-tsconfig.node.json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">tsconfig.node.json</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span>{</span></span>
<span class="line"><span>  "compilerOptions": {</span></span>
<span class="line"><span>    "composite": true,</span></span>
<span class="line"><span>    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",</span></span>
<span class="line"><span>    "skipLibCheck": true,</span></span>
<span class="line"><span>    "moduleResolution": "bundler",</span></span>
<span class="line"><span>    "allowSyntheticDefaultImports": true,</span></span>
<span class="line"><span>    "strict": true,</span></span>
<span class="line"><span>    "noEmit": true,</span></span>
<span class="line"><span>    "module": "esnext",</span></span>
<span class="line"><span>    "types": ["node"]</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  "include": ["src/**/*.ts", "src/**/*.d.ts", "src/**/*.tsx", "src/**/*.vue"]</span></span>
<span class="line"><span>}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></div></div>
<p>有些雷真的是踩過才知道😭</p>
<h3 id="bundler-的設定及輸出" tabindex="-1">bundler 的設定及輸出 <a class="header-anchor" href="#bundler-的設定及輸出" aria-label="Permalink to &quot;bundler 的設定及輸出&quot;">&ZeroWidthSpace;</a></h3>
<p>本來以為打包只需要設定好輸出就好了吧，照著網路上的教學及文件，應該能簡單的上線😊，結果自己還是太年輕了。
要設定 package.json vite.config，有一個很重要的提醒</p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>&quot;author&quot;: &quot;一定要是本人且正確&quot;, &lt;== publish 快一小時懷疑人生的時候，發現改這個就過了👼</p>
</div>
<div class="language-package.json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">package.json</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span>{</span></span>
<span class="line"><span>  // 以上略</span></span>
<span class="line"><span>  "main": "dist/canvas-image.umd.js",  // 主入口文件，使用 UMD 格式</span></span>
<span class="line"><span>  "module": "dist/canvas-image.es.js", // ES 模塊格式的入口文件</span></span>
<span class="line"><span>  "exports": { // 當用不同引入方式時文件的指向，做了這個之後才真的知道 npm 真的幫忙做了很多</span></span>
<span class="line"><span>    ".": {</span></span>
<span class="line"><span>      "import": "./dist/canvas-image.es.js", // 當使用 import 時的入口文件</span></span>
<span class="line"><span>      "require": "./dist/canvas-image.umd.js", // 當使用 require 時的入口文件</span></span>
<span class="line"><span>      "types": "./dist/types/index.d.ts" // 型別定義文件</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    "./dist/style.css": "./dist/style.css" // 對應 CSS 文件的路徑</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  "types": "./vue3-canvas-image.d.ts" // 預設型別定義文件的入口</span></span>
<span class="line"><span>}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-vite.config.ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vite.config.ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span>export default defineConfig({</span></span>
<span class="line"><span>  plugins: [</span></span>
<span class="line"><span>    vue(), // Vue 插件，用於處理 Vue 文件</span></span>
<span class="line"><span>    dts({</span></span>
<span class="line"><span>      clearPureImport: true, // 清除純導入</span></span>
<span class="line"><span>    }),</span></span>
<span class="line"><span>  ],</span></span>
<span class="line"><span>  resolve: {</span></span>
<span class="line"><span>    alias: {</span></span>
<span class="line"><span>      "@/": new URL("./src/", import.meta.url).pathname, // 設置路徑別名，指向 src 目錄</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  build: {</span></span>
<span class="line"><span>    cssCodeSplit: true, // 啟用 CSS 代碼分割</span></span>
<span class="line"><span>    sourcemap: true, // 生成 source map 文件</span></span>
<span class="line"><span>    emptyOutDir: true, // 構建時清空輸出目錄</span></span>
<span class="line"><span>    target: "esnext", // 目標環境設置為 ESNext</span></span>
<span class="line"><span>    outDir: "./dist", // 輸出目錄</span></span>
<span class="line"><span>    lib: {</span></span>
<span class="line"><span>      // 入口文件，可以是多個入口點的字典或數組</span></span>
<span class="line"><span>      entry: resolve(dirname(fileURLToPath(import.meta.url)), "src/index.ts"),</span></span>
<span class="line"><span>      name: "canvas-image", // 庫的全局名稱</span></span>
<span class="line"><span>      // 生成的文件名，根據格式附加相應的擴展名</span></span>
<span class="line"><span>      fileName: (fileName) => `${"canvas-image"}.${fileName}.js`,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    rollupOptions: {</span></span>
<span class="line"><span>      // 確保將不應該打包進庫的依賴設置為外部化</span></span>
<span class="line"><span>      external: ["vue"],</span></span>
<span class="line"><span>      output: {</span></span>
<span class="line"><span>        // 為外部化的依賴提供全局變量，在 UMD 構建中使用</span></span>
<span class="line"><span>        globals: {</span></span>
<span class="line"><span>          vue: "Vue",</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>});</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h3 id="npm-上版失敗" tabindex="-1">npm 上版失敗 <a class="header-anchor" href="#npm-上版失敗" aria-label="Permalink to &quot;npm 上版失敗&quot;">&ZeroWidthSpace;</a></h3>
<p>這真的是這次實作最痛最哭的部分，因為網路上的資源都寫 npm publish 就好，但實際是若啟用 auth 認證，就必須實作 git action 的 secrets token，然後要複製 .npmrc 指向路徑，並且要把 org 設置好，不然就會上板上到歪頭。</p>
<h3 id="release-版號問題" tabindex="-1">release 版號問題 <a class="header-anchor" href="#release-版號問題" aria-label="Permalink to &quot;release 版號問題&quot;">&ZeroWidthSpace;</a></h3>
<p>release 自動化也是，我猜考了 vue/core 的上版流程，使用 .husky pre-commit pre-push 作用如名，在 commit push 之前先去做我寫好的指令。</p>
<ul>
<li>pre-commit 檢查 commit 是否有按照規則</li>
<li>pre-push 執行 auto update release version</li>
</ul>
<h3 id="github-actions-yml-的撰寫" tabindex="-1">github actions yml 的撰寫 <a class="header-anchor" href="#github-actions-yml-的撰寫" aria-label="Permalink to &quot;github actions yml 的撰寫&quot;">&ZeroWidthSpace;</a></h3>
<p>因為之前就有在寫類似的 pipeline 倒是簡單的參考一下別下的 CI/CD，</p>
<h2 id="學習結論" tabindex="-1">學習結論 <a class="header-anchor" href="#學習結論" aria-label="Permalink to &quot;學習結論&quot;">&ZeroWidthSpace;</a></h2>
<p>實際走過一次流程後發現，做自己的第三方插件好像也沒那麼難，而且看到下載量真的有點嚇到的感覺，想說只是跑個流程的專案居然有 500 下載量，但星星倒是沒人按哈哈哈哈哈，
之後會真的想想實際的需求後再繼續我的插件之旅～寫個後端相關的好像也可以👍</p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[2024 面試紀錄]]></title>
            <link>https://www.aaron-shih.com/smallTalk/interview-2024</link>
            <guid>https://www.aaron-shih.com/smallTalk/interview-2024</guid>
            <pubDate>Wed, 24 Jul 2024 22:11:10 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="_2024-面試紀錄" tabindex="-1">2024 面試紀錄 <a class="header-anchor" href="#_2024-面試紀錄" aria-label="Permalink to &quot;2024 面試紀錄&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/interview.webp" alt="interview" data-fancybox="gallery"></p>
<p>跨域轉職至今滿三年，今年一月萌生了轉換公司的念頭，於是改寫履歷並透過獵頭及人脈投遞工作機會，想藉此確認自己的能力並跳脫舒適圈，以激進的方式驗證自己的實力並提升薪資。</p>
<h2 id="履歷更新" tabindex="-1">履歷更新 <a class="header-anchor" href="#履歷更新" aria-label="Permalink to &quot;履歷更新&quot;">&ZeroWidthSpace;</a></h2>
<p>準備了中英文兩份履歷，整理了在星宇航空的經歷，及自己業外掌握的技術和一些加分項目（如 Docker、Jenkins、CI/CD 等）。每季或每半年更新履歷非常重要，這不僅是一個重點回顧，還可以檢視自己的成就，並且有時也由不得你的情況會發生。</p>
<h2 id="獵頭聯繫與人脈介紹" tabindex="-1">獵頭聯繫與人脈介紹 <a class="header-anchor" href="#獵頭聯繫與人脈介紹" aria-label="Permalink to &quot;獵頭聯繫與人脈介紹&quot;">&ZeroWidthSpace;</a></h2>
<p>第一次透過獵頭聯繫並了解工作機會，主要投遞的職缺都是【前端工程師】。</p>
<ol>
<li>Adecco: 推薦的職缺涵蓋範圍廣泛，包括傳產和新創區塊鏈等，提供的薪資範圍也在我的期望內或更高。溝通順暢，窗口非常有 sense，會預先了解期望及職涯走向，介紹 keyman 並鼓勵我嘗試機會，且給予第三方建議，蠻受用的，保持聯繫。</li>
<li>Cake: 推薦的職缺多元，但與窗口接觸的體感較不積極，推薦職缺也較不聚焦在前端，但也有一些不錯的 JD。</li>
<li>立可人事: 推薦職缺較少，但選定的合作企業協作力強，回覆迅速，窗口活潑，並給予一些分析及建議。</li>
</ol>
<h2 id="面試紀錄與問題區塊" tabindex="-1">面試紀錄與問題區塊 <a class="header-anchor" href="#面試紀錄與問題區塊" aria-label="Permalink to &quot;面試紀錄與問題區塊&quot;">&ZeroWidthSpace;</a></h2>
<p>這波面試的職位都是 mid 以上，收到了不少反饋及不同視角的討論，以下是簡單紀錄：</p>
<ol>
<li>Swag: React 資深前端，大量的前端考題，期望有一定技術涵蓋，並對一些底層控制有了解。很多白板題，希望面試者對演算法及程式掌握度高，側重經歷及多維度解決方案。整體來說，面試難度高，非常有挑戰性，包含許多實務及壓力測試的提問。面試時間較長，需先完成線上題，才有二面機會。</li>
<li>Gamania: Vue 資深前端，包含手寫前端題、人資面談及技術主管面談。整體節奏偏快，公司福利很好，面試注重經歷，但更多關注人格特質及思維提問。面試主管是老鄉，挺有趣的。</li>
<li>Ionex: React 中階以上，線上 live coding 前端組員一起參加，比較偏美式討論模式，針對演算法及 coverage 提問，並且對技術及思維進行提問。面試節奏偏慢，整體體感最好，有朋友在公司內部。</li>
</ol>
<h3 id="感謝信" tabindex="-1">感謝信 <a class="header-anchor" href="#感謝信" aria-label="Permalink to &quot;感謝信&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>Swag: 進入二面，但履歷關鍵經歷不足，最後收到感謝信。</li>
<li>Appier: 一開始就使用英文感謝信。</li>
</ol>
<h3 id="無聲卡" tabindex="-1">無聲卡 <a class="header-anchor" href="#無聲卡" aria-label="Permalink to &quot;無聲卡&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>ikala</li>
<li>shopline</li>
<li>91App</li>
<li>幾間 AI 新創</li>
</ol>
<h2 id="反思" tabindex="-1">反思 <a class="header-anchor" href="#反思" aria-label="Permalink to &quot;反思&quot;">&ZeroWidthSpace;</a></h2>
<p>在這波面試中，先後收到了 Ionex 和 Gamania 的錄取通知，感受到自己的成長，並能針對提問理解面試官的核心意圖。雖然 Swag 收到感謝信，但面試中 Team Lead 也肯定了我的實力，並給了一些建議。針對底層掌握還有許多不足，需要補齊短板，並建議針對 SEO、SSR、效能優化及關鍵資源存儲多下工夫，對職涯發展有更好幫助。</p>
<p>面試官們認為我與資深工程師的差距主要在經驗的不足，等時間到了，歡迎再次挑戰。之後會多嘗試不同實作方式，理解不同解法的邊界及優缺點，對程式碼架構有更深掌握。多參加社群活動，拓展不同維度的思維和人脈。</p>
<p>經過這次面試經歷，我對人生規劃有了更明確的目標和體悟。現在回首，發現 2021 年立下的那些指標已一一完成，有時也需要一些運氣和人脈。這次 Ionex 有兩位認識的工程師朋友，透過他們得知公司的發展目標及團隊內部的協作模式，聽完他們的分享後，決定放棄其他機會，並全力投入下一階段的旅程。</p>
<p>感謝在 2020 年下定決心轉職且一路不放棄的自己，及一路陪伴的轉職夥伴及好友們！</p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p><strong>Fake It Til You Make It!</strong></p>
</div>
<h2 id="人算不如天算" tabindex="-1">人算不如天算 <a class="header-anchor" href="#人算不如天算" aria-label="Permalink to &quot;人算不如天算&quot;">&ZeroWidthSpace;</a></h2>
<p>正當覺得可以順利度過 Ionex 試用期時，意外發生了。正式過試用期的前一天，主管通知我沒有過試用期，十分錯愕。日常開發與組內並無異常，且與 mentor 溝通良好，主管從未暗示有問題，但最後還是被資遣了。六月底接到人生第一張非自願離職書，雖然 HR 表示這並非能力問題，但核心原因無法透露，於是開啟了 2024 年下半年的第二波面試。</p>
<h2 id="再次的感謝信及無聲卡" tabindex="-1">再次的感謝信及無聲卡 <a class="header-anchor" href="#再次的感謝信及無聲卡" aria-label="Permalink to &quot;再次的感謝信及無聲卡&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>Cake</li>
<li>TSMC</li>
<li>蓋亞資訊</li>
<li>shopline</li>
<li>動見科技</li>
<li>群暉</li>
<li>hahow</li>
</ol>
<h2 id="等通知" tabindex="-1">等通知 <a class="header-anchor" href="#等通知" aria-label="Permalink to &quot;等通知&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>91App =&gt; 無緣二面</li>
<li>知識衛星 =&gt; 無緣二面</li>
<li>動見科技 =&gt; 婉拒二面</li>
</ol>
<h2 id="是福是禍" tabindex="-1">是福是禍 <a class="header-anchor" href="#是福是禍" aria-label="Permalink to &quot;是福是禍&quot;">&ZeroWidthSpace;</a></h2>
<p>在漫無目的投遞履歷及與獵頭聯繫間，想起四月聯繫的一家新竹新創公司，再次聯繫主管。主管表示還沒找到人，歡迎我來新竹面試。抱著試試看的心情去面試，才發現這是我最想體驗的產業——AI LLM GEN 生成相關業務。面試過程中得知這間新創在 A 輪已獲得幾家半導體公司聯合注資，還是 Nvidia 台灣協力廠商之一！</p>
<p>由於我有做一個 Gen AI 相關的 Side Project，同事及主管覺得我很適合加入，面試時口頭暗示機會很大，問我要不要搬來新竹。</p>
<p>兩天內收到老闆通知，人資已經在作業了，可以報到的時間通知一下。從被資遣到找到工作，只花了不到兩週。古人說的「禍兮福之所倚，福兮禍之所伏。」真的很有道理，彷彿有無形的力量在操控一切。</p>
<h2 id="期許" tabindex="-1">期許 <a class="header-anchor" href="#期許" aria-label="Permalink to &quot;期許&quot;">&ZeroWidthSpace;</a></h2>
<p>希望在這個新興項目及快速增長的產業中，學習不同視野與能力，繼續挑戰自己的邊界，趁年輕多方嘗試。
期望能安慰到與我有同樣境遇的人，不要放棄希望！</p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p><strong>Do Not Go Gentle into That Good Night!</strong></p>
</div>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[Type Guard 與 Enum 的應用]]></title>
            <link>https://www.aaron-shih.com/frontend/is-and-enum</link>
            <guid>https://www.aaron-shih.com/frontend/is-and-enum</guid>
            <pubDate>Sat, 29 Jun 2024 21:28:30 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><h1 id="type-guard-與-enum-的應用" tabindex="-1">Type Guard 與 Enum 的應用 <a class="header-anchor" href="#type-guard-與-enum-的應用" aria-label="Permalink to &quot;Type Guard 與 Enum 的應用&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="type-guard" tabindex="-1">Type Guard <a class="header-anchor" href="#type-guard" aria-label="Permalink to &quot;Type Guard&quot;">&ZeroWidthSpace;</a></h2>
<p>文字上翻譯的 Type Guard 就是類型守衛。我們經常需要根據後端的 API 響應或是程式碼邏輯操作來建立複雜的類型。有時候 VS Code 會報錯，提示我們需要排除一些不確定的類型定義。我們可以透過官方定義的 <a href="https://www.typescriptlang.org/docs/handbook/utility-types.html" target="_blank" rel="noreferrer">Utility Types</a> 來做一些操作，但更多時候我們需要自行設計這些複雜的類型定義，以將型別限縮在我們希望的範圍中，這時類型守衛就派上了用場。</p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>Type Guard 是一種 Run time 檢查，用來細化變量的類型範圍。</p>
</div>
<h3 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">&ZeroWidthSpace;</a></h3>
<p>Type Guard 是一種特殊的函數，它根據某些條件來判斷變量是否屬於特定類型。</p>
<div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> isNumber</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> any</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> is</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> typeof</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> value</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "number"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> someValue</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> number</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 42</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">isNumber</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">someValue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">someValue</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> is a number`</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">} </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">someValue</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> is not a number`</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="enum" tabindex="-1">Enum <a class="header-anchor" href="#enum" aria-label="Permalink to &quot;Enum&quot;">&ZeroWidthSpace;</a></h2>
<p>枚舉是一種會被編譯的類型，用於定義一組命名的常量。它可以幫助我們更清晰地表達特定的數值集合，提高程式碼的語義和可讀性。
Enum 可以用數字或字符串作為枚舉值，且默認情況下，Enum 的值會從數字 0 開始自動遞增。</p>
<div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Color</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  Red</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  Green</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  Blue</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Direction</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  Up</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "UP"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  Down</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "DOWN"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  Left</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "LEFT"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  Right</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "RIGHT"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="結合案例" tabindex="-1">結合案例 <a class="header-anchor" href="#結合案例" aria-label="Permalink to &quot;結合案例&quot;">&ZeroWidthSpace;</a></h2>
<p>這時我遇到了一個案例希望能在實作邏輯中添加枚舉的型別守衛，透過這種方式，我們能夠用通順地語義，描述我們的邏輯。</p>
<p><a href="https://www.typescriptlang.org/play/?#code/PTAEFMGcBsEsDsAuBaAJrSBDARtcz5wAPFOQ0AAUQE8AHKAYwCdZaUozFh4B7ZAV3j9I4VMgBumJpABQ4IQFtQAYR7QeTUAG8ZoPaABKo0AF5QAcgMBRACLmANLv0BxJuHmmLz61YByDpz0AIWh+cE9zIIAZAFUrcxkAXxkZADNBBkRYHnhQDFV1JgAKSVDwAC5QTHhqAEpK0rC8yBU1DW1A0DdEfiZcgHlsACtwTIA6Rqgigo1asYQGUNQpydqAbiSUhhzIRFBtwoA1TDKI6zsN2FTQIvy24oONY7La2o79fZ21cDH1AHMigADAAkWkeTGeYUSzSqoFKsFQrUKgPWSQg0BE73023gkG+vx4AJBYPukPA0IwoF4e0wcJOCKRGhRG2SQA" target="_blank" rel="noreferrer">example</a></p>
<h2 id="進階使用範例" tabindex="-1">進階使用範例 <a class="header-anchor" href="#進階使用範例" aria-label="Permalink to &quot;進階使用範例&quot;">&ZeroWidthSpace;</a></h2>
<p>假設我們需要處理來自後端的複雜 API 響應數據，這些數據可能包含多種類型的信息。我們可以結合 Enum 和 Type Guard 來進行類型檢查，確保數據的正確性和一致性。</p>
<div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseStatus</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  Success</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "SUCCESS"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  Error</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "ERROR"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  Loading</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "LOADING"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseBase</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  status</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseStatus</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseSuccess</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">> </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">extends</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseBase</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  status</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseStatus</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">Success</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  data</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseError</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseBase</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  status</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseStatus</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">Error</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  message</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseLoading</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseBase</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  status</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseStatus</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">> </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseSuccess</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">> </span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">|</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseError</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> |</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseLoading</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> isApiResponseSuccess</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>(</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">  response</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> response</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> is</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseSuccess</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">status</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> ApiResponseStatus</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Success</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> isApiResponseError</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">response</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> response</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> is</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseError</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">status</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> ApiResponseStatus</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Error</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> isApiResponseLoading</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>(</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">  response</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> response</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> is</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ApiResponseLoading</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">status</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> ApiResponseStatus</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Loading</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> fetchData</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">url</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Promise</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">ApiResponse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> response</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> await</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> fetch</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> data</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> await</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">json</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">ok</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      status</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> ApiResponseStatus</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Success</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      data</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> data</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      status</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> ApiResponseStatus</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Error</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      message</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Failed to fetch data"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> handleApiResponse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">url</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> response</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> await</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> fetchData</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">isApiResponseSuccess</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Data:"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">isApiResponseError</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Error:"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">isApiResponseLoading</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Loading..."</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Unknown response status"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">handleApiResponse</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;{ </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> }>(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"https://api.example.com/getData"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br></div></div><h2 id="總結" tabindex="-1">總結 <a class="header-anchor" href="#總結" aria-label="Permalink to &quot;總結&quot;">&ZeroWidthSpace;</a></h2>
<p>我們深入討論了 TypeScript 中的類型守衛（Type Guard）和枚舉（Enum），並嘗試結合這兩種強大的工具來提高代碼的安全性和可維護性。
Type Guard 允許我們在運行時進行精確的類型檢查，而枚舉提供了一種清晰且有語義的方式來定義一組命名常量。</p>
<p>通過實際範例，我們展示了如何在處理複雜的 API 響應數據時使用這些技術。
嘗試使用看看吧～</p>
<h2 id="參考資料" tabindex="-1">參考資料 <a class="header-anchor" href="#參考資料" aria-label="Permalink to &quot;參考資料&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://stackoverflow.com/questions/76807943/typescript-how-to-get-the-value-of-enum-type-in-type-definition" target="_blank" rel="noreferrer">Get Enum value</a></li>
<li><a href="https://stackoverflow.com/questions/71973722/how-to-write-a-generic-type-guard-in-typescript" target="_blank" rel="noreferrer">Generic Type Guard with Enum</a></li>
<li><a href="https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates" target="_blank" rel="noreferrer">Narrowing</a></li>
</ul>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[用 React Chart 套件們畫台灣]]></title>
            <link>https://www.aaron-shih.com/frontend/react/react-chart</link>
            <guid>https://www.aaron-shih.com/frontend/react/react-chart</guid>
            <pubDate>Fri, 10 May 2024 22:02:00 GMT</pubDate>
            <description><![CDATA[<PageInfo/><h1 id="用-react-chart-畫一個台灣-geo-tw-🤪" tabindex="-1">用 React Chart 畫一個台灣 <a href="https://geo-tw.zeabur.app/" target="_blank" rel="noreferrer">GEO_TW</a> 🤪 <a class="header-anchor" href="#用-react-chart-畫一個台灣-geo-tw-🤪" aria-label="Permalink to &quot;用 React Chart 畫一個台灣 [GEO_TW](https://geo-tw.zeabur.app/) 🤪&quot;">&ZeroWidthSpace;</a></h1>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<p>本頁面持續更新中 ⛑️</p>
</div>
<p>因開發需求，需要 Survey 可以繪畫出世界地圖的圖表，於是嘗試使用 react 生態系相關的 GEO 圖表套件庫。</p>
<h2 id="畫地圖需要什麼" tabindex="-1">畫地圖需要什麼? <a class="header-anchor" href="#畫地圖需要什麼" aria-label="Permalink to &quot;畫地圖需要什麼?&quot;">&ZeroWidthSpace;</a></h2>
<p>在今天，地圖不僅是導航工具，也是呈現和分析地理數據的重要方式。想要創建一幅具有互動性和功能性的地圖互動模式，需要先了解基本且關鍵的要素：</p>
<h3 id="地理數據" tabindex="-1">地理數據 <a class="header-anchor" href="#地理數據" aria-label="Permalink to &quot;地理數據&quot;">&ZeroWidthSpace;</a></h3>
<p>地理數據是指描述地球表面特征的數據。這包括山脈、河流、道路、建築物等的位置以及其他相關信息。這些數據是地圖的基礎元素，確保我們能夠準確地描繪出一個地區的地理狀態。正確且最新的地理數據可以幫助用戶做出更好的決策和深入的分析。</p>
<h3 id="座標系統" tabindex="-1">座標系統 <a class="header-anchor" href="#座標系統" aria-label="Permalink to &quot;座標系統&quot;">&ZeroWidthSpace;</a></h3>
<p>座標系統是用於確定地球表面各點位置的系統。地理座標系統（以經度和緯度表示）是最普遍使用的一種，它幫助我們確定任何位置的精確坐標。選擇適當的座標系統對於確保地圖的準確性至關重要，因為不同的系統可能會導致位置的微小偏差。</p>
<h3 id="geojson-和-topojson" tabindex="-1">GeoJSON 和 TopoJSON <a class="header-anchor" href="#geojson-和-topojson" aria-label="Permalink to &quot;GeoJSON 和 TopoJSON&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>
<p><strong>GeoJSON</strong>：這是一種基於 JSON（JavaScript Object Notation）的格式，用於編碼各種地理數據結構。GeoJSON 是開放的標準格式，支持各種地圖應用，與 JavaScript 的兼容性極佳。</p>
</li>
<li>
<p><strong>TopoJSON</strong>：這是 GeoJSON 的一個擴展，專門用於存儲更為複雜的地理拓撲結構。TopoJSON 通過合併相鄰的地區和消除冗餘的邊界，有效地減少了文件大小，同時保持了地圖的高精度和細節。這使得 TopoJSON 非常適合那些需要處理大量地理數據的應用。</p>
</li>
</ul>
<h3 id="地圖繪製的-library" tabindex="-1">地圖繪製的 library <a class="header-anchor" href="#地圖繪製的-library" aria-label="Permalink to &quot;地圖繪製的 library&quot;">&ZeroWidthSpace;</a></h3>
<p>利用適當的工具和 library 來實現地圖的可視化是至關重要的。在 React 生態系中，我們有許多強大的庫如 React-simple-maps 和 React-leaflet，這些 library 提供了豐富的 API 和組件，使得開發者可以更輕鬆地整合地圖功能到現代的網頁應用中。</p>
<h2 id="d3是繪圖表始祖" tabindex="-1">D3是繪圖表始祖? <a class="header-anchor" href="#d3是繪圖表始祖" aria-label="Permalink to &quot;D3是繪圖表始祖?&quot;">&ZeroWidthSpace;</a></h2>
<p>在談到網頁上的數據視覺化，我們不得不提 D3.js，這是一個 JavaScript library，它允許開發者使用網頁標準直接在瀏覽器中操作文檔來生成複雜的視覺圖形。D3代表 Data-Driven Documents，即數據驅動的文件，它結合了 HTML、SVG 和 CSS 的功能，提供了一個強大的畫圖和數據處理平台。</p>
<h3 id="核心特性" tabindex="-1">核心特性 <a class="header-anchor" href="#核心特性" aria-label="Permalink to &quot;核心特性&quot;">&ZeroWidthSpace;</a></h3>
<p>D3的核心在於它的功能強大和靈活性。開發者可以利用 D3 綁定任意的數據到一個 DOM，然後根據這些數據來進行元素的變換，包括但不限於使用數據來生成圖表、圖形和其他視覺化格式。D3 的核心特性包括：</p>
<ul>
<li><strong>數據綁定</strong>：D3 強大的數據綁定能力使得數據與視覺元素之間的連接更加緊密和動態。</li>
<li><strong>動態屬性</strong>：使用 D3，開發者可以輕鬆地根據數據動態改變元素的屬性，如大小、顏色和位置。</li>
<li><strong>豐富的圖表類型</strong>：D3 支援各種圖表類型，包括地理地圖、樹形圖、堆疊圖等，並允許高度客制化。</li>
</ul>
<h3 id="創新性和影響" tabindex="-1">創新性和影響 <a class="header-anchor" href="#創新性和影響" aria-label="Permalink to &quot;創新性和影響&quot;">&ZeroWidthSpace;</a></h3>
<p>D3.js 的創新性在於它不依賴於專有框架，而是直接使用網頁標準。這意味著它可以在任何現代瀏覽器上運行而不需要額外的插件。D3的設計理念是將控制權交給開發者，使他們可以創建完全定制的視覺效果。</p>
<h3 id="d3-範例-基本柱狀圖" tabindex="-1">D3 範例 - <a href="https://codepen.io/eepson123tw/full/gOJOqPQ" target="_blank" rel="noreferrer">基本柱狀圖</a> <a class="header-anchor" href="#d3-範例-基本柱狀圖" aria-label="Permalink to &quot;D3 範例 - [基本柱狀圖](https://codepen.io/eepson123tw/full/gOJOqPQ)&quot;">&ZeroWidthSpace;</a></h3>
<p>寫一個 D3.js 在數據視覺化中的基本範例，包括數據綁定、動態屬性設定和 SVG 操作。
當然還有更多更複雜的實現，都在官網裡 😇</p>
<h2 id="react-地圖繪製套件比較" tabindex="-1">React 地圖繪製套件比較 <a class="header-anchor" href="#react-地圖繪製套件比較" aria-label="Permalink to &quot;React 地圖繪製套件比較&quot;">&ZeroWidthSpace;</a></h2>
<p>以下表格展示了各個 React 地圖繪製套件的主要特點、優勢以及基本的使用案例鏈接：</p>
<p>| 圖表套件                | 主要特點與優勢                                               | 基本使用方法案例                                                                              |
|</p>
]]></description>
            <content:encoded><![CDATA[<PageInfo/><h1 id="用-react-chart-畫一個台灣-geo-tw-🤪" tabindex="-1">用 React Chart 畫一個台灣 <a href="https://geo-tw.zeabur.app/" target="_blank" rel="noreferrer">GEO_TW</a> 🤪 <a class="header-anchor" href="#用-react-chart-畫一個台灣-geo-tw-🤪" aria-label="Permalink to &quot;用 React Chart 畫一個台灣 [GEO_TW](https://geo-tw.zeabur.app/) 🤪&quot;">&ZeroWidthSpace;</a></h1>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<p>本頁面持續更新中 ⛑️</p>
</div>
<p>因開發需求，需要 Survey 可以繪畫出世界地圖的圖表，於是嘗試使用 react 生態系相關的 GEO 圖表套件庫。</p>
<h2 id="畫地圖需要什麼" tabindex="-1">畫地圖需要什麼? <a class="header-anchor" href="#畫地圖需要什麼" aria-label="Permalink to &quot;畫地圖需要什麼?&quot;">&ZeroWidthSpace;</a></h2>
<p>在今天，地圖不僅是導航工具，也是呈現和分析地理數據的重要方式。想要創建一幅具有互動性和功能性的地圖互動模式，需要先了解基本且關鍵的要素：</p>
<h3 id="地理數據" tabindex="-1">地理數據 <a class="header-anchor" href="#地理數據" aria-label="Permalink to &quot;地理數據&quot;">&ZeroWidthSpace;</a></h3>
<p>地理數據是指描述地球表面特征的數據。這包括山脈、河流、道路、建築物等的位置以及其他相關信息。這些數據是地圖的基礎元素，確保我們能夠準確地描繪出一個地區的地理狀態。正確且最新的地理數據可以幫助用戶做出更好的決策和深入的分析。</p>
<h3 id="座標系統" tabindex="-1">座標系統 <a class="header-anchor" href="#座標系統" aria-label="Permalink to &quot;座標系統&quot;">&ZeroWidthSpace;</a></h3>
<p>座標系統是用於確定地球表面各點位置的系統。地理座標系統（以經度和緯度表示）是最普遍使用的一種，它幫助我們確定任何位置的精確坐標。選擇適當的座標系統對於確保地圖的準確性至關重要，因為不同的系統可能會導致位置的微小偏差。</p>
<h3 id="geojson-和-topojson" tabindex="-1">GeoJSON 和 TopoJSON <a class="header-anchor" href="#geojson-和-topojson" aria-label="Permalink to &quot;GeoJSON 和 TopoJSON&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>
<p><strong>GeoJSON</strong>：這是一種基於 JSON（JavaScript Object Notation）的格式，用於編碼各種地理數據結構。GeoJSON 是開放的標準格式，支持各種地圖應用，與 JavaScript 的兼容性極佳。</p>
</li>
<li>
<p><strong>TopoJSON</strong>：這是 GeoJSON 的一個擴展，專門用於存儲更為複雜的地理拓撲結構。TopoJSON 通過合併相鄰的地區和消除冗餘的邊界，有效地減少了文件大小，同時保持了地圖的高精度和細節。這使得 TopoJSON 非常適合那些需要處理大量地理數據的應用。</p>
</li>
</ul>
<h3 id="地圖繪製的-library" tabindex="-1">地圖繪製的 library <a class="header-anchor" href="#地圖繪製的-library" aria-label="Permalink to &quot;地圖繪製的 library&quot;">&ZeroWidthSpace;</a></h3>
<p>利用適當的工具和 library 來實現地圖的可視化是至關重要的。在 React 生態系中，我們有許多強大的庫如 React-simple-maps 和 React-leaflet，這些 library 提供了豐富的 API 和組件，使得開發者可以更輕鬆地整合地圖功能到現代的網頁應用中。</p>
<h2 id="d3是繪圖表始祖" tabindex="-1">D3是繪圖表始祖? <a class="header-anchor" href="#d3是繪圖表始祖" aria-label="Permalink to &quot;D3是繪圖表始祖?&quot;">&ZeroWidthSpace;</a></h2>
<p>在談到網頁上的數據視覺化，我們不得不提 D3.js，這是一個 JavaScript library，它允許開發者使用網頁標準直接在瀏覽器中操作文檔來生成複雜的視覺圖形。D3代表 Data-Driven Documents，即數據驅動的文件，它結合了 HTML、SVG 和 CSS 的功能，提供了一個強大的畫圖和數據處理平台。</p>
<h3 id="核心特性" tabindex="-1">核心特性 <a class="header-anchor" href="#核心特性" aria-label="Permalink to &quot;核心特性&quot;">&ZeroWidthSpace;</a></h3>
<p>D3的核心在於它的功能強大和靈活性。開發者可以利用 D3 綁定任意的數據到一個 DOM，然後根據這些數據來進行元素的變換，包括但不限於使用數據來生成圖表、圖形和其他視覺化格式。D3 的核心特性包括：</p>
<ul>
<li><strong>數據綁定</strong>：D3 強大的數據綁定能力使得數據與視覺元素之間的連接更加緊密和動態。</li>
<li><strong>動態屬性</strong>：使用 D3，開發者可以輕鬆地根據數據動態改變元素的屬性，如大小、顏色和位置。</li>
<li><strong>豐富的圖表類型</strong>：D3 支援各種圖表類型，包括地理地圖、樹形圖、堆疊圖等，並允許高度客制化。</li>
</ul>
<h3 id="創新性和影響" tabindex="-1">創新性和影響 <a class="header-anchor" href="#創新性和影響" aria-label="Permalink to &quot;創新性和影響&quot;">&ZeroWidthSpace;</a></h3>
<p>D3.js 的創新性在於它不依賴於專有框架，而是直接使用網頁標準。這意味著它可以在任何現代瀏覽器上運行而不需要額外的插件。D3的設計理念是將控制權交給開發者，使他們可以創建完全定制的視覺效果。</p>
<h3 id="d3-範例-基本柱狀圖" tabindex="-1">D3 範例 - <a href="https://codepen.io/eepson123tw/full/gOJOqPQ" target="_blank" rel="noreferrer">基本柱狀圖</a> <a class="header-anchor" href="#d3-範例-基本柱狀圖" aria-label="Permalink to &quot;D3 範例 - [基本柱狀圖](https://codepen.io/eepson123tw/full/gOJOqPQ)&quot;">&ZeroWidthSpace;</a></h3>
<p>寫一個 D3.js 在數據視覺化中的基本範例，包括數據綁定、動態屬性設定和 SVG 操作。
當然還有更多更複雜的實現，都在官網裡 😇</p>
<h2 id="react-地圖繪製套件比較" tabindex="-1">React 地圖繪製套件比較 <a class="header-anchor" href="#react-地圖繪製套件比較" aria-label="Permalink to &quot;React 地圖繪製套件比較&quot;">&ZeroWidthSpace;</a></h2>
<p>以下表格展示了各個 React 地圖繪製套件的主要特點、優勢以及基本的使用案例鏈接：</p>
<table>
<thead>
<tr>
<th>圖表套件</th>
<th>主要特點與優勢</th>
<th>基本使用方法案例</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Visx</strong></td>
<td>由 Airbnb 開發，提供低級繪圖能力，高度自定義，輕量級。</td>
<td><a href="https://airbnb.io/visx/geo-mercator" target="_blank" rel="noreferrer">Visx Geo Mercator</a></td>
</tr>
<tr>
<td><strong>Highcharts Maps</strong></td>
<td>功能豐富，支持大量地圖類型和高度互動性，廣泛的 API 支持。</td>
<td><a href="https://www.highcharts.com/demo/maps/animated-mapline" target="_blank" rel="noreferrer">Animated Mapline</a></td>
</tr>
<tr>
<td><strong>ECharts</strong></td>
<td>由百度開發，支持豐富的圖表類型和大數據視覺化。</td>
<td><a href="https://echarts.apache.org/examples/zh/editor.html?c=map-usa-projection" target="_blank" rel="noreferrer">Map USA Projection</a></td>
</tr>
<tr>
<td><strong>react-simple-maps</strong></td>
<td>專門針對地圖繪製而設計的輕量級套件，易於集成和使用。</td>
<td><a href="https://www.react-simple-maps.io/" target="_blank" rel="noreferrer">Simple Maps</a></td>
</tr>
<tr>
<td><strong>React Leaflet</strong></td>
<td>基於 Leaflet 的 React 版本，適用於輕量級地圖應用，擴展性強。</td>
<td><a href="https://react-leaflet.js.org/docs/example-popup-marker/" target="_blank" rel="noreferrer">Popup Marker Example</a></td>
</tr>
<tr>
<td><strong>chartjs-chart-geo</strong></td>
<td>將 Chart.js 擴展到地理數據，支持現代瀏覽器和簡單API。</td>
<td><a href="https://www.npmjs.com/package/chartjs-chart-geo" target="_blank" rel="noreferrer">Chartjs Geo</a></td>
</tr>
<tr>
<td><strong>react-google-charts</strong></td>
<td>融合 Google Charts 強大的繪圖能力，支持多種圖表類型。</td>
<td><a href="https://www.react-google-charts.com/" target="_blank" rel="noreferrer">Google Charts React</a></td>
</tr>
<tr>
<td><strong>D3</strong></td>
<td>高度靈活和動態的視覺化圖書館，專為復雜和創新的視覺化設計。</td>
<td><a href="https://d3js.org/" target="_blank" rel="noreferrer">D3 Official</a></td>
</tr>
</tbody>
</table>
<h3 id="圖表套件詳細介紹" tabindex="-1">圖表套件詳細介紹 <a class="header-anchor" href="#圖表套件詳細介紹" aria-label="Permalink to &quot;圖表套件詳細介紹&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>
<p><strong>Visx</strong><br>
Visx 結合了 React 的可組合性與 D3 的計算能力，特別適合需要高度自定義的項目。由於其只關注底層繪圖邏輯，開發者可以自由設計視覺效果，不受限於預設的樣式。</p>
</li>
<li>
<p><strong>Highcharts Maps</strong><br>
Highcharts 提供了一個極其豐富的地圖繪製功能，包括互動性圖表、動態更新的地圖等。它的 API 支持廣泛，能夠應對大多數的商業需求。</p>
</li>
<li>
<p><strong>ECharts</strong><br>
ECharts 支持的圖表類型非常多樣，從簡單的折線圖到複雜的地理數據視覺化都能夠處理，且適合需要處理大量數據的應用。</p>
</li>
<li>
<p><strong>react-simple-maps</strong><br>
此套件專為簡單的地圖視覺化設計，並且提供了易於使用的 API，非常適合需要快速結果的項目。</p>
</li>
<li>
<p><strong>React Leaflet</strong><br>
React Leaflet 使得集成 Leaflet 地圖變得輕而易舉，並且支持廣泛的插件生態系統，使得定制化和功能擴展非常方便。</p>
</li>
<li>
<p><strong>chartjs-chart-geo</strong><br>
此套件擴展了 Chart.js，使其能夠處理地理數據。保留了 Chart.js 的簡潔和易用性，並且新增了地圖繪製的功能。</p>
</li>
<li>
<p><strong>react-google-charts</strong><br>
集成了 Google Charts 的強大功能，允許開發者快速部署各種圖表，包括地圖，並且支持豐富的配置選項和數據類型。「 但要花錢買 api 」💰</p>
</li>
<li>
<p><strong>D3</strong><br>
D3 是數據視覺化的一個強大工具，它提供了廣泛的自定義選項，適合需要進行復雜數據操作和創新視覺表現的專案。</p>
</li>
</ol>
<h2 id="react-與-vue-簡單繪圖比較" tabindex="-1">React 與 Vue 簡單繪圖比較 <a class="header-anchor" href="#react-與-vue-簡單繪圖比較" aria-label="Permalink to &quot;React 與 Vue 簡單繪圖比較&quot;">&ZeroWidthSpace;</a></h2>

      <Suspense>
      <template #default>
      <Mermaid id="mermaid-252" class="mermaid" graph="graph%20TD%0A%20%20%20%20A%5BReact%5D%20--%3E%7C%E8%99%9B%E6%93%AC%20DOM%7C%20B%5BDOM%20%E6%AF%94%E5%B0%8D%5D%0A%20%20%20%20B%20--%3E%20C%5B%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0%20DOM%5D%0A%20%20%20%20C%20--%3E%20D%5B%E6%9C%80%E7%B5%82%E6%B8%B2%E6%9F%93%5D%0A%20%20%20%20A%20--%3E%7C%E7%B5%84%E4%BB%B6%E7%8B%80%E6%85%8B%7C%20E%5B%E9%87%8D%E6%96%B0%E6%B8%B2%E6%9F%93%E6%A9%9F%E5%88%B6%5D%0A%20%20%20%20E%20--%3E%20C%0A%0A%20%20%20%20X%5BVue%5D%20--%3E%7C%E9%9F%BF%E6%87%89%E5%BC%8F%E7%B3%BB%E7%B5%B1%7C%20Y%5B%E4%BE%9D%E8%B3%B4%E8%BF%BD%E8%B8%AA%5D%0A%20%20%20%20Y%20--%3E%20Z%5B%E8%A8%88%E7%AE%97%E5%B1%AC%E6%80%A7%E5%92%8C%E7%9B%A3%E8%81%BD%E5%99%A8%5D%0A%20%20%20%20Z%20--%3E%20W%5BDOM%20%E6%9B%B4%E6%96%B0%5D%0A%20%20%20%20X%20--%3E%7C%E7%B5%84%E4%BB%B6%E6%A8%A1%E6%9D%BF%7C%20V%5B%E7%B7%A8%E8%AD%AF%E8%87%B3%E6%B8%B2%E6%9F%93%E5%87%BD%E6%95%B8%5D%0A%20%20%20%20V%20--%3E%20W%0A%20%20%20%20W%20--%3E%20T%5B%E6%9C%80%E7%B5%82%E6%B8%B2%E6%9F%93%5D%0A%0A%20%20%20%20D%20--%3E%20G%5BReact%20%E5%9C%96%E5%BD%A2%E6%80%A7%E8%83%BD%5D%0A%20%20%20%20T%20--%3E%20H%5BVue%20%E5%9C%96%E5%BD%A2%E6%80%A7%E8%83%BD%5D%0A%0A"></Mermaid>
      </template>
        <!-- loading state via #fallback slot -->
        <template #fallback>
          Loading...
        </template>
      </Suspense><h3 id="react" tabindex="-1">React <a class="header-anchor" href="#react" aria-label="Permalink to &quot;React&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>虛擬 DOM 處理：
React 使用虛擬 DOM 來減少直接對真實 DOM 的操作，這對於繪圖和大型應用來說，可以大幅提升性能。
當數據發生變化時，React 會計算新的虛擬 DOM 與舊的虛擬 DOM 的差異，並只更新變更的部分，且更接近原生 js 的操作模式，可以避開較多的副作用。</li>
<li>組件化和可擴展性：
React 的組件化結構使得擴展和維護大型繪圖應用更加方便。每個組件負責維護自己的狀態，並可重用於不同的繪圖場景。
大型網頁開發中，React 組件可以很容易地與繪圖庫（如 D3.js、Chart.js）集成，實現複雜的視覺效果。</li>
</ul>
<h3 id="vue" tabindex="-1">Vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;Vue&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>響應式數據綁定：
Vue 的響應式系統通過依賴追踪自動更新 DOM，這對於繪圖意味著任何數據的變化都會即時反映在圖形上，無需手動介入。
變更檢測是自動化的，當使用 Vue 開發動態圖表時，自動化使得開發更加直觀和較少錯誤，但開發者需要更高的素養去控制依賴及驅動時的互相影響。</li>
<li>模板和渲染函數的彈性：
Vue 的模板語法和可選的 JSX 支持，使得在 Vue 中創建動態圖表變得非常靈活和強大。
對於複雜的視覺效果，我們可以利用模板或直接的渲染函數來精細控制 DOM 的輸出，但可使用的 library 會較少，我的經驗中最後使用 d3 開發動態圖表。</li>
</ul>
<h3 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><a href="https://airbnb.io/visx/geo-mercator" target="_blank" rel="noreferrer">Visx</a></li>
<li><a href="https://www.highcharts.com/demo/maps/animated-mapline" target="_blank" rel="noreferrer">highChart</a></li>
<li><a href="https://echarts.apache.org/examples/zh/editor.html?c=map-usa-projection" target="_blank" rel="noreferrer">EChart</a></li>
<li><a href="https://www.react-simple-maps.io/" target="_blank" rel="noreferrer">react-simple-maps</a></li>
<li><a href="https://react-leaflet.js.org/docs/example-popup-marker/" target="_blank" rel="noreferrer">React leaflet</a></li>
<li><a href="https://www.npmjs.com/package/chartjs-chart-geo" target="_blank" rel="noreferrer">chartjs-chart-geo</a></li>
<li><a href="https://www.react-google-charts.com/" target="_blank" rel="noreferrer">react-google-charts</a></li>
<li><a href="https://d3js.org/" target="_blank" rel="noreferrer">d3</a></li>
</ul>
<h3 id="圖資" tabindex="-1">圖資 <a class="header-anchor" href="#圖資" aria-label="Permalink to &quot;圖資&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><a href="https://code.highcharts.com/mapdata/" target="_blank" rel="noreferrer">World geo from highChart</a></li>
<li><a href="https://github.com/dkaoster/taiwan-atlas?tab=readme-ov-file#tw.objects.towns" target="_blank" rel="noreferrer">Taiwan geo data</a></li>
</ul>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[ESM 模組原理]]></title>
            <link>https://www.aaron-shih.com/frontend/esm</link>
            <guid>https://www.aaron-shih.com/frontend/esm</guid>
            <pubDate>Thu, 14 Mar 2024 12:25:00 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><h1 id="模組是什麼" tabindex="-1">模組是什麼 <a class="header-anchor" href="#模組是什麼" aria-label="Permalink to &quot;模組是什麼&quot;">&ZeroWidthSpace;</a></h1>
<p>ESM 模組是一種在 JavaScript 中進行模組化開發的標準。它允許開發者將程式碼分割成多個模組，並且可以在需要的地方引入這些模組。ESM 模組使用 <code>import</code> 和 <code>export</code> 關鍵字來定義和使用模組。</p>
<p>ESM 模組的重點：</p>
<ul>
<li>可组合性與隔離性:提供了更好的程式碼組織和管理方式</li>
<li>重用性:支援模組的重複使用和共享</li>
<li>支援模組的動態加載和異步載入</li>
</ul>
<h2 id="commonjs-原理" tabindex="-1">Commonjs 原理 <a class="header-anchor" href="#commonjs-原理" aria-label="Permalink to &quot;Commonjs 原理&quot;">&ZeroWidthSpace;</a></h2>
<p>我們可以透過 Webpack 來理解 Commonjs 是如何封裝的，簡單的來說每個模組都是一個物件</p>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-ceyKV" id="tab-HixGwsQ" checked="checked"><label for="tab-HixGwsQ">index.js</label><input type="radio" name="group-ceyKV" id="tab-TOtOqbR" ><label for="tab-TOtOqbR">module.js</label><input type="radio" name="group-ceyKV" id="tab-eq88BDE" ><label for="tab-eq88BDE">webpack.js</label></div><div class="blocks">
<div class="language-js vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"start require"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> module</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"./module"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"end require"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> module</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// module.js 知識點1</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">module</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">tencent</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// module.js 知識點2</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">module</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">additional</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "test"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"this is a module"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">exports</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">app</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">hello</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "haha"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">exports</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">tencent</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"good"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 知識點1：對module.exports賦值，exports物件就不再是外部require所得到的結果了。</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 我在視頻中採用的說法是「覆蓋exports」其實不算非常嚴謹。</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 因為exports變數本身還是存在的</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">module</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">exports</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"hello app"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 知識點2：外部取得require呼叫的結果和這裡的exports物件是同一個引用</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">setTimeout</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 驗證index.js裡加的additional屬性是否生效</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 用於確定外部require到的物件和此處的exports是否是同一個屬性</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">exports</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2000</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/******/</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (() </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // webpackBootstrap</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /******/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> __webpack_modules__</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /***/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "./module.js"</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      /*!****************!*\</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  !*** ./module.js ***!</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  \****************/</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      /***/</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">module</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> exports</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"this is module"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">        exports</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">app</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">hello</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "haha"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> };</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">        exports</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">tencent</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">          console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"good"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        };</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">        module</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">exports</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">          console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"hello app"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        };</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">        setTimeout</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">          console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">exports</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2000</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /***/</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  };</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /************************************************************************/</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /******/</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // The module cache</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /******/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> __webpack_module_cache__</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {};</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /******/</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /******/</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // The require function</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /******/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> __webpack_require__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">moduleId</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // Check if module is in cache</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> cachedModule</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> __webpack_module_cache__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">moduleId</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">cachedModule</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> undefined</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      /******/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> cachedModule</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">exports</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      /******/</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // Create a new module (and put it into the cache)</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> module</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">__webpack_module_cache__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">moduleId</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      /******/</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // no module.id needed</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      /******/</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // no module.loaded needed</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      /******/</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> exports</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {}</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      /******/</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // Execute the module function</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> __webpack_modules__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">moduleId</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">](</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">module</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> module</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">exports</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> __webpack_require__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // Return the exports of the module</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> module</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">exports</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /******/</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /******/</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /************************************************************************/</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> __webpack_exports__</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {};</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  (() </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /*!******************!*\</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  !*** ./index.js ***!</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  \******************/</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"start require"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> module</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> __webpack_require__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/*! ./module */</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "./module.js"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"end require"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> module</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">module</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">tencent</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    module</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">additional</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "test"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  })();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  /******/</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">})();</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div></div></div>
<h2 id="esm-原理" tabindex="-1">ESM 原理 <a class="header-anchor" href="#esm-原理" aria-label="Permalink to &quot;ESM 原理&quot;">&ZeroWidthSpace;</a></h2>
<p>ESM（ECMAScript 模組）是一種在 JavaScript 中用於模組化程式碼的標準。</p>
<p>主要有以下步驟：</p>
<ol>
<li>構造 - 查找、下載並解析所有文件，並將它們記錄在一個模塊記錄表(module map)中。</li>
<li>實例化 - 在內存中找到一塊區域來存儲所有導出的變量，並建立導出屬性的依賴關係。然後將 export 和 import 都指向這些內存塊。這個過程稱為鏈接(linking)。</li>
<li>賦值 - 執行代碼，將真實的值添加到內存塊中。</li>
</ol>
<h3 id="構造" tabindex="-1">構造 <a class="header-anchor" href="#構造" aria-label="Permalink to &quot;構造&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>模塊解析</li>
<li>獲取文件(URL、filesystem load)</li>
<li>將文件解析成紀錄</li>
</ol>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>此部分會巢狀的解析相依的模組文件，一層一層的找下去。若文件相依的模組過多，那 main thread 勢必會被加載阻塞。</p>
</div>
<p>ES 模組規範將遞歸查找算法分為多個階段。並將構造過程單獨分離出來，使得瀏覽器在執行同步的初始化過程前可以自行下載文件並建立自己對於模組圖的路徑。</p>
<p>不過，需要注意一件事——這兩個圖中的任何模組都將共用一個模組實例。這是因為載入器快取了模組實例。對於特定全域範圍內的每個模組，只有一個模組實例。</p>
<p><a href="https://hacks.mozilla.org/files/2018/03/14dynamic_import_graph.png" target="_blank" rel="noreferrer">dynamic_import_graph</a></p>
<p>透過 module map 緩存路徑，若有重複的模組需要被載入時，瀏覽器就可以知道並跳過此載入流程&gt;&lt;!</p>
<h4 id="解析" tabindex="-1">解析 <a class="header-anchor" href="#解析" aria-label="Permalink to &quot;解析&quot;">&ZeroWidthSpace;</a></h4>
<p>在瀏覽器環境中，可以透過添加 'type=module' 來告知瀏覽器此引入為 module，而在 node 環境中可以透過加入 .mjs 拓展，或是在 package.json 中加入 type 告知並通知加載器。</p>
<p><a href="https://hacks.mozilla.org/files/2018/03/05_module_record.png" target="_blank" rel="noreferrer">module_record</a></p>
<h3 id="實例化" tabindex="-1">實例化 <a class="header-anchor" href="#實例化" aria-label="Permalink to &quot;實例化&quot;">&ZeroWidthSpace;</a></h3>
<p>使用深度優先後序遍歷（depth first post-order traversal）將模組連接到記憶體中，建構模組環境記錄(實例化)。
模組環境記錄管理著模組記錄對應的變數。同時，它為所有的導出變數分配內存空間。模組環境記錄會追蹤不同內存區域與不同導出變數之間的關聯關係。
這些內存區域在此階段還沒有被賦值。<code>只有在求值之後，它們才會獲得真正的值</code>。需要注意的是，任何導出的函數聲明都在此階段初始化，這使得求值過程更加容易。</p>
<h3 id="賦值" tabindex="-1">賦值 <a class="header-anchor" href="#賦值" aria-label="Permalink to &quot;賦值&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>模塊初始化：JavaScript 引擎首先將代碼中的變量和函數分配記憶體空間。</li>
<li>代碼評估：評估代碼可能引起副作用，例如發送網絡請求。模塊只被評估一次，以避免重複引起副作用。</li>
<li>模塊映射：通過模塊的標準URL進行緩存，保證每個模塊只執行一次。</li>
<li>處理循環依賴：ES 模塊設計支持循環依賴。即使在循環依賴中，模塊也能正確地讀取到最終的變量值，使用 <code>live binding</code>。</li>
</ol>
<h2 id="總結" tabindex="-1">總結 <a class="header-anchor" href="#總結" aria-label="Permalink to &quot;總結&quot;">&ZeroWidthSpace;</a></h2>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>require 會同步解析，而 import 會在執行程式碼之前就會有預解析，可以更方便的執行 tree-shacking 及 分析載入點 .etc</p>
</div>
<p>CommonJS 模組同步加載，這意味著它們會阻止程式碼的執行，直到模組完全加載並執行。
而 ESM 加載分了好幾個步驟，加載模組，然後深度優先遍歷生成 export、import、加載模組 URL 等資訊形成的一個模組表，最後返回模組的值。而這些步驟之間是異步進行的，</p>
<GitTalk/><h2 id="參考資料" tabindex="-1">參考資料 <a class="header-anchor" href="#參考資料" aria-label="Permalink to &quot;參考資料&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://www.yuque.com/haixueyewupingtaibuqianduanchengchangjihua/tk9sk4/myx1nzzfwhd8nb6w#wuSdV" target="_blank" rel="noreferrer">Node.js - 高级篇</a></li>
<li><a href="https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/" target="_blank" rel="noreferrer">es-modules-a-cartoon-deep-dive</a></li>
<li><a href="https://html.spec.whatwg.org/multipage/webappapis.html#module-map" target="_blank" rel="noreferrer">module-map</a></li>
</ul>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[探索 ChatGPT：從理論到實踐的技術突破]]></title>
            <link>https://www.aaron-shih.com/smallTalk/gpt-history</link>
            <guid>https://www.aaron-shih.com/smallTalk/gpt-history</guid>
            <pubDate>Sun, 19 Nov 2023 20:58:00 GMT</pubDate>
            <description><![CDATA[<h1 id="探索-chatgpt-從理論到實踐的技術突破" tabindex="-1">探索 ChatGPT：從理論到實踐的技術突破 <a class="header-anchor" href="#探索-chatgpt-從理論到實踐的技術突破" aria-label="Permalink to &quot;探索 ChatGPT：從理論到實踐的技術突破&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/gpt-history.webp" alt="gpt-history" data-fancybox="gallery"></p>
<p>本文旨在探討 ChatGPT 技術的理論基礎及其在各領域的實際應用。 <br/>
從其起源、發展，到未來的可能性，我們將深入分析這項革命性技術如何改變人工智能領域。</p>
<h2 id="chatgpt-技術概述" tabindex="-1">ChatGPT 技術概述 <a class="header-anchor" href="#chatgpt-技術概述" aria-label="Permalink to &quot;ChatGPT 技術概述&quot;">&ZeroWidthSpace;</a></h2>
<p>| <strong>特點</strong>     | <strong>描述</strong>                                                                | <strong>意義</strong>                                                                   |
|</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="探索-chatgpt-從理論到實踐的技術突破" tabindex="-1">探索 ChatGPT：從理論到實踐的技術突破 <a class="header-anchor" href="#探索-chatgpt-從理論到實踐的技術突破" aria-label="Permalink to &quot;探索 ChatGPT：從理論到實踐的技術突破&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/gpt-history.webp" alt="gpt-history" data-fancybox="gallery"></p>
<p>本文旨在探討 ChatGPT 技術的理論基礎及其在各領域的實際應用。 <br/>
從其起源、發展，到未來的可能性，我們將深入分析這項革命性技術如何改變人工智能領域。</p>
<h2 id="chatgpt-技術概述" tabindex="-1">ChatGPT 技術概述 <a class="header-anchor" href="#chatgpt-技術概述" aria-label="Permalink to &quot;ChatGPT 技術概述&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th><strong>特點</strong></th>
<th><strong>描述</strong></th>
<th><strong>意義</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>語言模型基礎</td>
<td>ChatGPT 基於大規模轉換器（Transformer）模型，專注於理解和生成自然語言。</td>
<td>這種模型的能力超越了傳統的自然語言處理方法，允許更加準確和流暢的語言生成。</td>
</tr>
<tr>
<td>深度學習技術</td>
<td>使用深度學習算法來分析和理解大量文本數據。</td>
<td>能夠從複雜的數據集中學習語言的細微差異和語境，從而提高溝通質量。</td>
</tr>
<tr>
<td>上下文理解</td>
<td>能夠根據上下文生成相關且連貫的回答或文本。</td>
<td>與傳統模型相比，提供更為自然和人性化的交互體驗。</td>
</tr>
<tr>
<td>自我學習能力</td>
<td>模型通過持續的學習和調整來改善其表現。</td>
<td>確保模型隨著時間的推移而不斷進步，適應新的語言模式和用戶需求。</td>
</tr>
<tr>
<td>多樣性應用</td>
<td>可應用於各種領域，如客服、內容創作、教育等。</td>
<td>展示了其作為一種通用工具的潛力，能夠跨行業提供支持。</td>
</tr>
<tr>
<td>持續演進</td>
<td>隨著技術的發展，模型不斷進行迭代和優化。</td>
<td>確保技術能夠跟上最新的研究發現和市場需求。</td>
</tr>
</tbody>
</table>
<h2 id="技術演進與創新" tabindex="-1">技術演進與創新 <a class="header-anchor" href="#技術演進與創新" aria-label="Permalink to &quot;技術演進與創新&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th><strong>發展階段</strong></th>
<th><strong>關鍵技術/特點</strong></th>
<th><strong>代表性模型/應用</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>人工智慧初期</td>
<td>硬編碼的規則和邏輯，模擬專家決策過程。</td>
<td>專家系統：DENDRAL（化學分析），MYCIN（醫療診斷）。</td>
</tr>
<tr>
<td>統計學習階段</td>
<td>統計方法，從數據中發現模式。</td>
<td>HMM（語音識別），SVM（影像識別）。</td>
</tr>
<tr>
<td>深度學習</td>
<td>多層神經網絡，複雜模式識別。注意力機制（Attention）。</td>
<td>CNNs（如AlexNet，影像識別），Seq2Seq（如LSTM，機器翻譯）。</td>
</tr>
<tr>
<td>預訓練階段</td>
<td>預訓練技術，學習語言通用模式。</td>
<td>Transformer（BERT，自然語言處理），GPT-2（自監督學習）。</td>
</tr>
<tr>
<td>大規模模型</td>
<td>大量數據和計算資源，高水平語言理解和生成。</td>
<td>GPT-3（少量學習能力），GPT-4（更大參數量和知識基礎）。</td>
</tr>
</tbody>
</table>
<h2 id="核心算法解析" tabindex="-1">核心算法解析 <a class="header-anchor" href="#核心算法解析" aria-label="Permalink to &quot;核心算法解析&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th><strong>算法/技術</strong></th>
<th><strong>創新點</strong></th>
<th><strong>技術實現</strong></th>
<th><strong>應用</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ELMo（Embeddings from Language Models）</td>
<td>使用兩個方向的語言模型來捕捉單詞的豐富語義。</td>
<td>運用LSTM網絡訓練左至右和右至左的模型。</td>
<td>作為預訓練嵌入，增強現有模型的語境理解能力。</td>
</tr>
<tr>
<td>嵌入（Embeddings）</td>
<td>轉化文字為機器可理解的數字形式。</td>
<td>詞嵌入將單詞表示為高維空間中的向量，上下文嵌入考慮單詞的周圍語境。</td>
<td>應用於文本分類、情感分析、機器翻譯等多種NLP任務。</td>
</tr>
<tr>
<td>GPT-1（Generative Pretrained Transformer）</td>
<td>預訓練後的模型適應各種文本任務。</td>
<td>12層變換器架構，結合文本和位置嵌入，學習語言模型。</td>
<td>微調後適用於文本分類、相似度測試、問答等任務。</td>
</tr>
<tr>
<td>NLP基准测试</td>
<td>用於評估模型在理解複雜自然語言關係的能力。</td>
<td>包括MNLI、SNLI、SciTail、QNLI、RTE等多種測試。</td>
<td>測試模型對句子關系和邏輯含義的識別和分類能力。</td>
</tr>
</tbody>
</table>
<h2 id="gpt-家族的進化" tabindex="-1">GPT 家族的進化 <a class="header-anchor" href="#gpt-家族的進化" aria-label="Permalink to &quot;GPT 家族的進化&quot;">&ZeroWidthSpace;</a></h2>
<p>GPT 系列從 GPT-1 的初步應用到 GPT-3 的先進技術，展現了自然語言處理的重大進步。這些模型在參數量、架構深度、訓練數據及學習方式上均有顯著提升，尤其是 GPT-3 在 in-context learning 方面的創新。</p>
<h3 id="gpt-系列模型比較表" tabindex="-1">GPT 系列模型比較表 <a class="header-anchor" href="#gpt-系列模型比較表" aria-label="Permalink to &quot;GPT 系列模型比較表&quot;">&ZeroWidthSpace;</a></h3>
<table>
<thead>
<tr>
<th><strong>特徵</strong></th>
<th><strong>GPT-1</strong></th>
<th><strong>GPT-2</strong></th>
<th><strong>GPT-3</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>參數</td>
<td>117M</td>
<td>1.5B</td>
<td>175B</td>
</tr>
<tr>
<td>層數</td>
<td>12層</td>
<td>48層</td>
<td>96層</td>
</tr>
<tr>
<td>數據源</td>
<td>Books1</td>
<td>Books1、Books2、網頁</td>
<td>Common Crawl、WebText2、Books1/2、網頁</td>
</tr>
<tr>
<td>學習方式</td>
<td>預訓練和微調</td>
<td>零擊、一擊</td>
<td>in-context learning</td>
</tr>
<tr>
<td>應用</td>
<td>文本生成、問答</td>
<td>多任務 NLP</td>
<td>廣泛多模態任務</td>
</tr>
</tbody>
</table>
<h3 id="gpt-3-技術詳細分析" tabindex="-1">GPT-3 技術詳細分析 <a class="header-anchor" href="#gpt-3-技術詳細分析" aria-label="Permalink to &quot;GPT-3 技術詳細分析&quot;">&ZeroWidthSpace;</a></h3>
<table>
<thead>
<tr>
<th><strong>特徵</strong></th>
<th><strong>詳細說明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>模型規模</strong></td>
<td>GPT-3 擁有<strong>1750億個參數</strong>，這使其成為迄今為止最大的語言模型之一。</td>
</tr>
<tr>
<td><strong>架構深度</strong></td>
<td>由<strong>96層的變換器（Transformer）架構</strong>組成，這增強了模型處理複雜語言結構的能力。</td>
</tr>
<tr>
<td><strong>訓練數據</strong></td>
<td>使用了包括Common Crawl、WebText2、Books1/2在內的廣泛數據集，這為模型提供了豐富的語言知識和模式。</td>
</tr>
<tr>
<td><strong>in-context learning</strong></td>
<td>GPT-3 能夠進行<strong>無梯度學習</strong>，即通過觀察和分析給定的文本例子自動學習如何完成特定任務。</td>
</tr>
<tr>
<td><strong>應用靈活性</strong></td>
<td>它的多模態應用範圍廣泛，包括但不限於文本生成、語言翻譯、問答系統，以及創造性寫作。</td>
</tr>
<tr>
<td><strong>創新點</strong></td>
<td>GPT-3 在模型規模、學習方式和應用靈活性上取得了重大創新，尤其在<strong>元學習能力</strong>方面展現了巨大的潛力。</td>
</tr>
</tbody>
</table>
<p>GPT-3 的技術進步不僅反映在其巨大的規模上，更體現在其對自然語言的理解和生成能力上。它的 in-context learning 能力使得模型能夠在沒有直接訓練的情況下適應並完成多種複雜的語言任務，這是其前兩代模型所不具備的特性。此外，GPT-3 在多模態應用和創新性應用方面的潛力也被廣泛關注。</p>
<h3 id="gpt-3-模型關鍵概念分析" tabindex="-1">GPT-3 模型關鍵概念分析 <a class="header-anchor" href="#gpt-3-模型關鍵概念分析" aria-label="Permalink to &quot;GPT-3 模型關鍵概念分析&quot;">&ZeroWidthSpace;</a></h3>
<table>
<thead>
<tr>
<th><strong>概念</strong></th>
<th><strong>解釋</strong></th>
<th><strong>重點</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>上下文學習 (In-Context Learning)</strong></td>
<td>模型根據提供的上下文信息自我學習並做出預測。這一過程不需要外部調整。</td>
<td><strong>自我適應能力</strong>：模型能通過分析給定的上下文來自主學習如何回應，無需外部指導。</td>
</tr>
<tr>
<td><strong>少數樣本學習 (Few-Shot Learning)</strong></td>
<td>在觀察到有限的例子後，模型能根據這些例子進行學習並作出預測。</td>
<td><strong>高效學習</strong>：即使數據有限，GPT-3 也能進行有效預測，展示了模型的學習效率。</td>
</tr>
<tr>
<td><strong>提示工程 (Prompt Engineering)</strong></td>
<td>透過設計恰當的提示來幫助模型更好地理解任務並作出預測。</td>
<td><strong>任務優化</strong>：精確提示可以提高模型對任務本質的理解及其響應的準確性。</td>
</tr>
</tbody>
</table>
<h3 id="預訓練語言模型加上微調過程分析" tabindex="-1">預訓練語言模型加上微調過程分析 <a class="header-anchor" href="#預訓練語言模型加上微調過程分析" aria-label="Permalink to &quot;預訓練語言模型加上微調過程分析&quot;">&ZeroWidthSpace;</a></h3>
<table>
<thead>
<tr>
<th><strong>流程部分</strong></th>
<th><strong>功能說明</strong></th>
<th><strong>重點</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>詞彙庫 (Vocab)</strong></td>
<td>模型識別和處理所有詞彙的基礎。</td>
<td><strong>基石</strong>：為模型學習和理解語言提供必要的詞彙基礎。</td>
</tr>
<tr>
<td><strong>預訓練語言模型</strong></td>
<td>通過大量文本數據學習語言通用模式。</td>
<td><strong>學習基礎</strong>：為模型提供豐富的語言知識和模式。</td>
</tr>
<tr>
<td><strong>嵌入層 (Embeddings) &amp; 最終層 (Final Layers)</strong></td>
<td>將詞彙轉化為數值向量並進行特定任務的微調。</td>
<td><strong>個性化調整</strong>：使預訓練模型更適合特定的應用或任務。</td>
</tr>
</tbody>
</table>
<div align="center">

      <Suspense>
      <template #default>
      <Mermaid id="mermaid-525" class="mermaid" graph="graph%20TD%0A%20%20%20%20A%5BVocabulary%5D%20--%3E%7CIdentify%20and%20process%20all%20vocabularies%7C%20B%5BPre-trained%20Language%20Model%5D%0A%20%20%20%20B%20--%3E%7CLearn%20general%20language%20patterns%7C%20C%5BEmbedding%20Layer%5D%0A%20%20%20%20C%20--%3E%7CTransform%20vocabulary%20into%20numerical%20vectors%7C%20D%5BFinal%20Layers%5D%0A%20%20%20%20D%20--%3E%7CFine-tuning%20for%20specific%20tasks%7C%20E%5BCompleted%20Model%5D%0A%0A%20%20%20%20classDef%20default%20fill%3A%23f9f%2Cstroke%3A%23333%2Cstroke-width%3A2px%3B%0A%20%20%20%20class%20A%2CB%2CC%2CD%2CE%20default%3B%0A"></Mermaid>
      </template>
        <!-- loading state via #fallback slot -->
        <template #fallback>
          Loading...
        </template>
      </Suspense></div>
<h3 id="流程描述" tabindex="-1">流程描述 <a class="header-anchor" href="#流程描述" aria-label="Permalink to &quot;流程描述&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>
<p><strong>詞彙庫 (Vocab)</strong>：這是模型識別和處理所有詞彙的起點。詞彙庫提供了模型學習和理解語言的基礎。</p>
</li>
<li>
<p><strong>預訓練語言模型</strong>：在這一階段，模型通過大量的文本數據學習語言的通用模式。這一步驟為模型提供了豐富的語言知識和模式。</p>
</li>
<li>
<p><strong>嵌入層 (Embeddings)</strong>：在這裡，詞彙被轉化為模型能夠處理的數值向量。這一步驟是將自然語言轉換成機器能理解的格式的關鍵。</p>
</li>
<li>
<p><strong>最終層 (Final Layers)</strong>：這裡會進行特定任務的微調。基於預訓練的基礎，最終層對模型進行個性化調整，使其更適合特定的應用或任務。</p>
</li>
<li>
<p><strong>完成的模型</strong>：經過微調後的模型現在已準備好用於實際的應用，如文本分類、語言生成等。</p>
</li>
</ol>
<h2 id="gpt-4-的爆誕" tabindex="-1">GPT-4 的爆誕 <a class="header-anchor" href="#gpt-4-的爆誕" aria-label="Permalink to &quot;GPT-4 的爆誕&quot;">&ZeroWidthSpace;</a></h2>
<p>GPT-4 於 2023 年 3 月由 OpenAI 正式發布，較前代 GPT-3 和 GPT-3.5 有顯著進化。其主要進展包括：</p>
<ol>
<li><strong>多樣態進展</strong>：在多種語言和任務處理上有显著提升，特別是複雜問題解決能力。</li>
<li><strong>強大上下文理解</strong>：最大上下文長度從 8192 擴展至 32768 個 token。</li>
<li><strong>GPT+生態</strong>：激活了如 ChatGPT Plugin 的 AIGC 應用生態，類似於 App Store。</li>
<li><strong>應用+GPT</strong>：GPT-4 已廣泛應用於多個領域，如 Office、Duolingo、Khan Academy。</li>
</ol>
<table>
<thead>
<tr>
<th><strong>特性</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>多樣態進展</td>
<td>性能在多語言和各類任務處理上顯著提升</td>
</tr>
<tr>
<td>上下文理解</td>
<td>最大上下文長度擴展至 32768 個 token</td>
</tr>
<tr>
<td>GPT+生態</td>
<td>啟動新一代 AIGC 應用，如 ChatGPT Plugin</td>
</tr>
<tr>
<td>應用範圍</td>
<td>廣泛應用於教育、辦公等領域</td>
</tr>
</tbody>
</table>

      <Suspense>
      <template #default>
      <Mermaid id="mermaid-631" class="mermaid" graph="graph%20LR%0A%20%20%20%20A%5BGPT-4%20Release%5D%20--%3E%20B%5BMulti-Modal%20Progress%5D%0A%20%20%20%20B%20--%3E%20C%5BEnhanced%20Context%20Understanding%5D%0A%20%20%20%20C%20--%3E%20D%5BGPT%2B%20Ecosystem%20Activation%5D%0A%20%20%20%20D%20--%3E%20E%5BBroad%20Application%20Range%5D%0A%0A%20%20%20%20classDef%20default%20fill%3A%23f9f%2Cstroke%3A%23333%2Cstroke-width%3A2px%3B%0A%20%20%20%20class%20A%2CB%2CC%2CD%2CE%20default%3B%0A"></Mermaid>
      </template>
        <!-- loading state via #fallback slot -->
        <template #fallback>
          Loading...
        </template>
      </Suspense><h2 id="總結" tabindex="-1">總結 <a class="header-anchor" href="#總結" aria-label="Permalink to &quot;總結&quot;">&ZeroWidthSpace;</a></h2>
<p>AI 的發展使得機器可以更好地理解和回應人類。GPT 模型通過變換器架構和大量參數，能夠處理複雜的語言任務。未來，AI 將成為更加強大的工具，能夠處理多種數據類型並提供個性化的體驗。</p>
<h3 id="未來展望" tabindex="-1">未來展望 <a class="header-anchor" href="#未來展望" aria-label="Permalink to &quot;未來展望&quot;">&ZeroWidthSpace;</a></h3>
<p>未來 AI 和 GPT 模型可能會在以下方面繼續發展：</p>
<ol>
<li><strong>模型規模</strong>：模型可能會變得更大，參數量更多。</li>
<li><strong>多模態學習</strong>：AI 將處理更多類型的數據（如視頻、音頻）。</li>
<li><strong>個性化應用</strong>：更精細化和個性化的 AI 應用。</li>
<li><strong>智慧互動</strong>：AI 將更自然地與人類互動。</li>
</ol>
<table>
<thead>
<tr>
<th><strong>模型/技術</strong></th>
<th><strong>特點/進展</strong></th>
<th><strong>未來趨勢</strong></th>
<th><strong>圖標</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>GPT-1</td>
<td>基本文本處理</td>
<td>更大模型</td>
<td>📖</td>
</tr>
<tr>
<td>GPT-2</td>
<td>語言理解提升</td>
<td>多模態學習</td>
<td>💬</td>
</tr>
<tr>
<td>GPT-3</td>
<td>in-context learning</td>
<td>個性化應用</td>
<td>🧠</td>
</tr>
<tr>
<td>GPT-4</td>
<td>多樣態進展</td>
<td>智慧互動</td>
<td>🌐</td>
</tr>
<tr>
<td>深度學習</td>
<td>圖像、語言處理</td>
<td>-</td>
<td>🖥️</td>
</tr>
<tr>
<td>轉換器模型</td>
<td>高效能語言模型</td>
<td>-</td>
<td>🔍</td>
</tr>
<tr>
<td>自然語言處理</td>
<td>語言理解、生成</td>
<td>-</td>
<td>💡</td>
</tr>
</tbody>
</table>
<h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://u.geekbang.org/subject/intro/100616401?utm_source=u_list_web&amp;utm_medium=u_list_web&amp;utm_term=u_list_web" target="_blank" rel="noreferrer">GPT技術理論</a></p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[Prompt 指令魔術師]]></title>
            <link>https://www.aaron-shih.com/smallTalk/gpt-prompt-learning</link>
            <guid>https://www.aaron-shih.com/smallTalk/gpt-prompt-learning</guid>
            <pubDate>Sun, 05 Nov 2023 15:50:37 GMT</pubDate>
            <description><![CDATA[<h1 id="prompt-指令魔術師" tabindex="-1">Prompt 指令魔術師 <a class="header-anchor" href="#prompt-指令魔術師" aria-label="Permalink to &quot;Prompt 指令魔術師&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/prompt-engineering.webp" alt="prompt-engineering" data-fancybox="gallery"></p>
<p>如果有一個工具可以處理日常的繁重工作，讓我們專注於思考、創造和組織，那麼我們是否能擺脫不斷回想的繁瑣任務，並有更多時間追求我們真正感興趣的事情？在這樣的背景下，我嘗試使用像 <code>chat-gpt</code> 這樣的工具，發現了一些能夠幫助我們工作和生活的有用提示。現在，讓我們進一步討論這些提示。</p>
<h2 id="gpt、nlp、llm-是什麼-奇點接近了嗎" tabindex="-1">GPT、NLP、LLM 是什麼，奇點接近了嗎? <a class="header-anchor" href="#gpt、nlp、llm-是什麼-奇點接近了嗎" aria-label="Permalink to &quot;GPT、NLP、LLM 是什麼，奇點接近了嗎?&quot;">&ZeroWidthSpace;</a></h2>
<p><code>生成式預訓練轉換器 GPT（Generative Pre-trained Transformer)</code>: 是一種具體的語言模型，它是基於 Transformer 架構的深度學習模型，用於處理和生成自然語言文本。GPT 模型是 NLP 領域中的一種特定技術，它通過預訓練大量的文本數據來學習語言的結構和語義，然後可以用於各種 NLP 任務，如文本生成、文本分類、問答等。</p>
<p><code>自然語言處理 NLP（Natural Language Processing</code>: 是一個更廣泛的領域，它涉及處理和理解自然語言的一切方面。NLP包括了各種技術和方法，用於處理文本數據，從而使計算機能夠理解、解釋和生成自然語言文本。NLP不僅包括語言模型（如 GPT），還包括語音識別、機器翻譯、情感分析、信息擷取、文本分類、對話系統等多種子領域和應用。</p>
<p><code>大型語言模型（Large Language Model)</code>:指那些由大量文本數據預訓練而成的深度學習模型，它們能夠理解和生成自然語言文本。</p>
<p><code>ChatGPT</code>： ChatGPT 是基於 GPT 的變種，專門設計用於對話和對話式應用。它被優化用於生成自然、流暢的對話，並且可以用於構建聊天機器人、虛擬助手和其他對話系統。</p>
<blockquote>
<p>簡單來說，GPT 是一種語言處理技術，而 ChatGPT 是用於建立更自然對話的一種應用。這些技術都屬於 NLP 領域。</p>
</blockquote>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>GPT（Generative Pre-trained Transformer）的應用：</p>
<ul>
<li>文本生成：例如，生成文章、故事、詩歌等文本。</li>
<li>問答系統：用於回答關於特定主題的問題。</li>
<li>語言翻譯：將一種語言的文本翻譯成另一種語言。</li>
</ul>
<p>自然語言處理（NLP）的應用：</p>
<ul>
<li>語音識別：例如，將語音轉換成文本，用於語音助手（如 Siri 或 Google 助手）。</li>
<li>情感分析：分析文本中的情感，判斷情感是正面、負面還是中性。</li>
<li>文本分類：將文本分為不同的類別，如新聞分類、垃圾郵件過濾等。</li>
</ul>
<p>大型語言模型的例子：</p>
<ul>
<li>GPT-3：擁有1750億個參數，用於文本生成和多項 NLP 任務。</li>
<li>BERT：用於文本理解，廣泛應用於問答和文本分類。</li>
<li>XLNet：自回歸的語言模型，在多項 NLP 任務中表現出色。</li>
</ul>
</div>
]]></description>
            <content:encoded><![CDATA[<h1 id="prompt-指令魔術師" tabindex="-1">Prompt 指令魔術師 <a class="header-anchor" href="#prompt-指令魔術師" aria-label="Permalink to &quot;Prompt 指令魔術師&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/prompt-engineering.webp" alt="prompt-engineering" data-fancybox="gallery"></p>
<p>如果有一個工具可以處理日常的繁重工作，讓我們專注於思考、創造和組織，那麼我們是否能擺脫不斷回想的繁瑣任務，並有更多時間追求我們真正感興趣的事情？在這樣的背景下，我嘗試使用像 <code>chat-gpt</code> 這樣的工具，發現了一些能夠幫助我們工作和生活的有用提示。現在，讓我們進一步討論這些提示。</p>
<h2 id="gpt、nlp、llm-是什麼-奇點接近了嗎" tabindex="-1">GPT、NLP、LLM 是什麼，奇點接近了嗎? <a class="header-anchor" href="#gpt、nlp、llm-是什麼-奇點接近了嗎" aria-label="Permalink to &quot;GPT、NLP、LLM 是什麼，奇點接近了嗎?&quot;">&ZeroWidthSpace;</a></h2>
<p><code>生成式預訓練轉換器 GPT（Generative Pre-trained Transformer)</code>: 是一種具體的語言模型，它是基於 Transformer 架構的深度學習模型，用於處理和生成自然語言文本。GPT 模型是 NLP 領域中的一種特定技術，它通過預訓練大量的文本數據來學習語言的結構和語義，然後可以用於各種 NLP 任務，如文本生成、文本分類、問答等。</p>
<p><code>自然語言處理 NLP（Natural Language Processing</code>: 是一個更廣泛的領域，它涉及處理和理解自然語言的一切方面。NLP包括了各種技術和方法，用於處理文本數據，從而使計算機能夠理解、解釋和生成自然語言文本。NLP不僅包括語言模型（如 GPT），還包括語音識別、機器翻譯、情感分析、信息擷取、文本分類、對話系統等多種子領域和應用。</p>
<p><code>大型語言模型（Large Language Model)</code>:指那些由大量文本數據預訓練而成的深度學習模型，它們能夠理解和生成自然語言文本。</p>
<p><code>ChatGPT</code>： ChatGPT 是基於 GPT 的變種，專門設計用於對話和對話式應用。它被優化用於生成自然、流暢的對話，並且可以用於構建聊天機器人、虛擬助手和其他對話系統。</p>
<blockquote>
<p>簡單來說，GPT 是一種語言處理技術，而 ChatGPT 是用於建立更自然對話的一種應用。這些技術都屬於 NLP 領域。</p>
</blockquote>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>GPT（Generative Pre-trained Transformer）的應用：</p>
<ul>
<li>文本生成：例如，生成文章、故事、詩歌等文本。</li>
<li>問答系統：用於回答關於特定主題的問題。</li>
<li>語言翻譯：將一種語言的文本翻譯成另一種語言。</li>
</ul>
<p>自然語言處理（NLP）的應用：</p>
<ul>
<li>語音識別：例如，將語音轉換成文本，用於語音助手（如 Siri 或 Google 助手）。</li>
<li>情感分析：分析文本中的情感，判斷情感是正面、負面還是中性。</li>
<li>文本分類：將文本分為不同的類別，如新聞分類、垃圾郵件過濾等。</li>
</ul>
<p>大型語言模型的例子：</p>
<ul>
<li>GPT-3：擁有1750億個參數，用於文本生成和多項 NLP 任務。</li>
<li>BERT：用於文本理解，廣泛應用於問答和文本分類。</li>
<li>XLNet：自回歸的語言模型，在多項 NLP 任務中表現出色。</li>
</ul>
</div>
<hr>
<p><img src="/assets/images/gpt/singular-point.png" alt="singular-point 人類的奇點" data-fancybox="gallery"></p>
<h2 id="prompt-是什麼" tabindex="-1">Prompt 是什麼? <a class="header-anchor" href="#prompt-是什麼" aria-label="Permalink to &quot;Prompt 是什麼?&quot;">&ZeroWidthSpace;</a></h2>
<p>Prompt（提示詞）是用於指導 GPT 或 LLM（語言模型）生成文本的輸入。它是一個包含了模型所需指令、問題、上下文或示例等信息的文字或句子。</p>
<p>Prompt 的目的是引導模型生成特定類型或主題的文本回應。</p>
<p>基本 Prompt 應包含以下結構:</p>
<div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">指令：想要模型执行的特定任务或指令。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">上下文：包含外部信息或额外的上下文信息，引导语言模型更好地响应。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">输入数据：用户输入的内容或问题。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">输出指示：指定输出的类型或格式。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">ex:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">我需要你告訴我，蘋果是什麼?我是個大學生，輸出須考量到我的知識量。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">輸出為 markdown 等等。</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="寫出更好-prompt" tabindex="-1">寫出更好 Prompt <a class="header-anchor" href="#寫出更好-prompt" aria-label="Permalink to &quot;寫出更好 Prompt&quot;">&ZeroWidthSpace;</a></h3>
<p>一個好的 Prompt 需要明確的<strong>引導</strong>、具體的問題或任務、上下文信息、使用關鍵詞以及不斷的測試和調整。這些要點有助於確保模型能夠生成更好的文本內容。</p>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>最重要部分可能是「清晰的引導面向」。需要確保 prompt 提供明確的指示，告訴模型應該生成什麼類型的文本，以及期望的動作或回應。如果引導面向不清晰或模糊，模型可能會產生不符合預期的結果。</p>
</div>
<div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">一般描述</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> "蘋果是什麼?"</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">加強指示</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> "請描述蘋果的不同品種以及它們的特點和用途。"</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>是否有不一樣的感覺了呢?</p>
<p>若將 GPT 視為一個可溝通的對象，我們是否也需要清晰的溝通流程呢?</p>
<p>大概就是這種感覺~</p>
<p>若我們更加地加強結構體及描述呢?會不會更接近我們想要的回答?</p>
<div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">“請詳細描述蘋果，包括其植物分類、品種、營養價值以及在文化背景中的角色。目標是提供一個全面而易於理解的解釋，適合對植物學和營養學感興趣的普通受眾。”</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>讓我們來比較三句 Prompt 的差異，使用 <code>GPT 3.5 模型</code> 詢問，是否就有看出差異了呢?</p>
<p><img src="/assets/images/gpt/prompt-apple.png" alt="prompt-apple 比較三個 Prompt" data-fancybox="gallery"></p>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>還能使用下列的指令再去加強，Prompt的結構，達到更好的效果。</p>
<ul>
<li>將指令放在提示的開頭，並使用特殊符號(如###或&quot;&quot;&quot;)來分隔指令和上下文。</li>
<li>在指令中明確所需的上下文、結果、長度、格式和風格。</li>
<li>透過示例明確指出所需的輸出格式，以便於程式化地可靠地解析多個輸出。</li>
<li>針對代碼生成，使用特定的“leading words”來引導模型遵循特定的寫作模式。</li>
</ul>
</div>
<h3 id="prompt-該如何應用" tabindex="-1">Prompt 該如何應用 <a class="header-anchor" href="#prompt-該如何應用" aria-label="Permalink to &quot;Prompt 該如何應用&quot;">&ZeroWidthSpace;</a></h3>
<p>Prompt 可以涵蓋可以涵蓋各種主題，例如技術、生活、職業、教育等等。</p>
<ul>
<li>教育</li>
</ul>
<div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">Prompt: 如何在教育領域中更有效地應用創新技術？</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul>
<li>信件</li>
</ul>
<div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">Prompt: 如何寫一封令人難忘的正式信件？</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul>
<li>心理輔導</li>
</ul>
<div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">Prompt: 如何在心理輔導中幫助患者管理壓力和焦慮？</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>當然這只是些一般的範例，如果我們針對一些更特殊的情況，寫些 Agent Prompt 協助我們呢?</p>
<ul>
<li>讀取網頁連結，然後輸出結果，並統整這份報告</li>
<li>貼上信件截圖，並請他依照情境回覆</li>
<li>讀取 PDF EXCEL 等文檔，輸出視覺化的分析圖表</li>
</ul>
<p>若能做到以上這些，是不是能節省並提升我們的時間呢?</p>
<h2 id="再次提升-prompt" tabindex="-1">再次提升 Prompt <a class="header-anchor" href="#再次提升-prompt" aria-label="Permalink to &quot;再次提升 Prompt&quot;">&ZeroWidthSpace;</a></h2>
<p>提供個讀取網頁連結的 Prompt，<code>需啟用 GPT 4且網頁允許爬蟲</code>。</p>
<div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#FF7A84;--shiki-light-font-weight:bold;--shiki-dark:#E06C75;--shiki-dark-font-weight:inherit"># Role: Link_Agent 分析機器人</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FF7A84;--shiki-light-font-weight:bold;--shiki-dark:#E06C75;--shiki-dark-font-weight:inherit">## 當前任務描述</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">作為 Link_Agent 分析機器人，我的任務是根據用戶提供的網絡連結，進行深入分析並撰寫報告。這包括摘要網頁內容、識別關鍵點、評估信息源的可靠性、進行批判性分析，以及探討相關的問題和機會。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FF7A84;--shiki-light-font-weight:bold;--shiki-dark:#E06C75;--shiki-dark-font-weight:inherit">## 指令流程</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">1.</span><span style="--shiki-light:#FF7A84;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit"> **開啟連結**</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">：自動使用瀏覽工具開啟提供的連結。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">2.</span><span style="--shiki-light:#FF7A84;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit"> **內容摘要**</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">：撰寫網頁內容的簡要摘要，特別強調對用戶研究或問題陳述的重要部分。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">3.</span><span style="--shiki-light:#FF7A84;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit"> **識別關鍵點**</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">：從文本中識別最少三個關鍵點，若有更多則提出更多要點，這些點對理解主題至關重要。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">4.</span><span style="--shiki-light:#FF7A84;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit"> **評估來源**</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">：檢查來源的可靠性，並提供可靠性評估的簡要說明。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">5.</span><span style="--shiki-light:#FF7A84;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit"> **批判性分析**</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">：對於連結中提出的信息和觀點，進行批判性分析，並與相關領域的已知事實或數據進行對比。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">6.</span><span style="--shiki-light:#FF7A84;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit"> **檢查程式碼或關鍵字**</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">：檢查文本中是否包含程式碼或相關關鍵字。如果存在，需要進一步搜索相關資源並統整，以便加入整合分析。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">7.</span><span style="--shiki-light:#FF7A84;--shiki-light-font-weight:bold;--shiki-dark:#D19A66;--shiki-dark-font-weight:inherit"> **問題與機會**</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">：分析文本中提到的問題和機會，並提供對用戶項目或研究的潛在益處的見解。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FF7A84;--shiki-light-font-weight:bold;--shiki-dark:#E06C75;--shiki-dark-font-weight:inherit">## 整合分析</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">"""</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">在完成上述步驟後，將所有信息整合，提供一份結構化的結論性報告。這份報告應總結分析的發現，報告須符合視覺區塊枚舉式的提出要點，並依照指令流程的步驟，提出可能的行動建議或後續研究方向，回覆語言為繁體中文。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">"""</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><img src="/assets/images/gpt/prompt-link-agent.png" alt="prompt-link-agent Link_Agent 分析機器人" data-fancybox="gallery"></p>
<p>是不是很神奇呢~</p>
<h2 id="自定義模型及進階技巧" tabindex="-1">自定義模型及進階技巧 <a class="header-anchor" href="#自定義模型及進階技巧" aria-label="Permalink to &quot;自定義模型及進階技巧&quot;">&ZeroWidthSpace;</a></h2>
<p>還有更多種的 Prompt，例如給與人格特質或是專業技能。</p>
<ul>
<li>人物模型</li>
</ul>
<div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 你是個英文老師，我需要你協助我的英文自傳 XXXX</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 你是個健身高手，建議我訓練菜單 XXXX</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul>
<li>更進階的 Prompt 技巧</li>
</ul>
<div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 少量樣板題示 (Chain-of-Thought Prompting)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 思維樹（Tree of Thoughts，ToT）</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 鏈示思考（CoT）</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> Prompt 函數</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 背景、角色、任務、要求等概念組合</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#FF7A84;--shiki-light-font-weight:bold;--shiki-dark:#E06C75;--shiki-dark-font-weight:inherit"># Role: CoT、ToT、RAG和ART Prompt Agent</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">此角色的任務是與使用者互動，確認其欲探索的對象或主題。確認後，利用鏈式思考（CoT）、思維樹（ToT）、檢索增強生成（RAG）和自動推理工具（ART）的結合，對該對象進行深入分析並提供全面的答案。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">🔎 請問您想要了解哪個對象或主題？</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">✅ 確認後，將按照以下結構化prompt進行解析：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 🔍 問題：[</span><span style="--shiki-light:#79B8FF;--shiki-dark:#61AFEF">對象</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]是什麼？ (CoT起始點)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 📝 定義階段：定義[</span><span style="--shiki-light:#79B8FF;--shiki-dark:#61AFEF">對象</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]。 (CoT)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 🎨 特徵階段：描述[</span><span style="--shiki-light:#79B8FF;--shiki-dark:#61AFEF">對象</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]的外觀、口味和質地。 (CoT)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 🛠️ 用途階段：列出[</span><span style="--shiki-light:#79B8FF;--shiki-dark:#61AFEF">對象</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]的可能用途。 (ToT的探索階段)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 🌱 生長階段：解釋[</span><span style="--shiki-light:#79B8FF;--shiki-dark:#61AFEF">對象</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]的生長或製造環境。 (ToT的推理階段)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 🌟 意義階段：討論[</span><span style="--shiki-light:#79B8FF;--shiki-dark:#61AFEF">對象</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]在營養、文化或科學上的意義。 (ToT的評估階段)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 🔎 檢索增強：進行深入檢索以確保所有信息都是基於最新和最準確的數據。 (RAG概念)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 🤖 自動推理：利用可用的工具和資源，進行自動推理以提供更深入的分析。 (ART概念)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">結合這些方法，我們將提供一個結構化且深入的回答，涵蓋從基本定義到[</span><span style="--shiki-light:#79B8FF;--shiki-dark:#61AFEF">對象</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]在不同領域中的重要性。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">"""</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">需維持中立且統一的回答，再詢始時詢問使用者，欲詢問的知識，並以更廣泛的視角搜尋(Prompt模板)這個問題，</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">最後將 temperature 設定為 0，若回覆太長，則使用段落回覆我。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">"""</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">---</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://www.promptingguide.ai/zh" target="_blank" rel="noreferrer">提示工程指南</a></li>
<li><a href="https://help.openai.com/en/articles/6654000-best-practices-for-prompt-engineering-with-openai-api" target="_blank" rel="noreferrer">best-practices-for-prompt-engineering-with-openai-api</a></li>
<li><a href="https://github.com/eepson123tw/GPT-Prompts" target="_blank" rel="noreferrer">Prompt store</a></li>
</ul>
<p>若有其他疑問或是更好建議，可以詢問並留言給我~</p>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[Encode、Decode、Hash 是幹甚麼東西?]]></title>
            <link>https://www.aaron-shih.com/backend/encode</link>
            <guid>https://www.aaron-shih.com/backend/encode</guid>
            <pubDate>Wed, 11 Oct 2023 23:50:24 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/> <h1 id="encode、decode、hash" tabindex="-1">Encode、Decode、Hash <a class="header-anchor" href="#encode、decode、hash" aria-label="Permalink to &quot;Encode、Decode、Hash&quot;">&ZeroWidthSpace;</a></h1>
<p>最近同事為了一個需求而苦惱，想要把 URI 上的資料存入前端框架中並能反向讀入儲存字串在反導出 URI，卻發現轉入框架時，資料無法按照他的想法轉換，
同事們討論的過程，聽到了幾個關鍵字，於是想記錄下來 ~</p>
<h2 id="encode-編碼" tabindex="-1">Encode（編碼） <a class="header-anchor" href="#encode-編碼" aria-label="Permalink to &quot;Encode（編碼）&quot;">&ZeroWidthSpace;</a></h2>
<p>編碼是指將數據從一種形式轉換為另一種形式的過程，以便在不同系統或環境中進行傳輸或存儲。</p>
<ul>
<li>URL 編碼 (URL encoding) : URL 編碼用於將URL中的特殊字符轉換為百分比編碼，以便在網址中進行安全傳輸(RFC 3986)。</li>
</ul>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> originalString</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Hello, js!"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> encodedString</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> encodeURIComponent</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">originalString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">encodedString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// "Hello%2C%20js!"</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul>
<li>Base64 編碼 (Base64 encoding) : Base64 編碼將二進制數據轉換為一種文本表示形式，以便在文本協議中(RFC 4648)傳輸二進制數據，如圖像或音頻文件。</li>
</ul>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> originalString</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Hello, js!"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> encodedString</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> btoa</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">originalString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> decodedString</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> atob</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">encodedString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">encodedString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// "SGVsbG8sIGpzIQ==</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">decodedString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// "Hello, js!"</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/btoa" target="_blank" rel="noreferrer">btoa</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/atob" target="_blank" rel="noreferrer">atob</a></li>
</ul>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>SSH 密鑰本身以二進制格式存在，但在特定情況下，它們的<code>公鑰部分可以以 Base64 編碼的文本形式表示</code>。</p>
<blockquote>
<p>cat XXXX_xxx | base64 | tr -d \n</p>
</blockquote>
</div>
<ul>
<li>HTML 編碼 (HTML encoding) :HTML 編碼用於將HTML文件中的特殊字符轉換為HTML實體，以避免它們被解釋為HTML標記。這有助於防止HTML注入攻擊。</li>
</ul>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//類似所謂的跳脫字元、除了自行實現，也可以使用第三方 library 達成 Lodash、DOMPurify、he。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> encodeHTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">text</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> text</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">/&#x26;/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">g</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> '&#x26;amp'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#56B6C2">\"</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">g</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> '&#x26;quot;'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">/&#x3C;/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">g</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> '&#x26;lt;'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">/>/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">g</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> '&#x26;gt;'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> originalString</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "&#x3C;script>alert('Hello, js!');&#x3C;/script>"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> encodedString</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> encodeHTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">originalString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 自定義HTML編碼函數</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">encodedString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// "&#x26;lt;script&#x26;gt;alert('Hello, js!');&#x26;lt;/script&#x26;gt;"</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="字符編碼" tabindex="-1">字符編碼 <a class="header-anchor" href="#字符編碼" aria-label="Permalink to &quot;字符編碼&quot;">&ZeroWidthSpace;</a></h3>
<p>用於將文本字符映射到二進制數據以便在計算機中儲存和傳輸。</p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p><strong>ASCII</strong> (American Standard Code for Information Interchange):</p>
<ol>
<li>ASCII 是一個字符編碼標準，最早於1963年發布，僅定義了128個字符（7位二進制數據），包括26個大寫字母、26個小寫字母、數字、標點符號和控制字符。</li>
<li>ASCII 不包括非英語字符，因此無法表示多語言文字。</li>
<li>ASCII 字符在計算機系統中佔用1個字節（8位）的存儲空間。</li>
</ol>
<p><strong>UTF-8</strong> (Unicode Transformation Format - 8-bit)</p>
<ol>
<li>UTF-8 是一個可變長字符編碼標準，最早於1993年發布，它是 Unicode <code>萬國碼</code>的一種實現方式。</li>
<li>UTF-8 支持世界上幾乎所有的字符，<code>包括 ASCII 字符，以及多語言字符、符號和表情符號</code>。</li>
<li>UTF-8 中的字符可以使用1至4個字節來表示，具體的字節數取決於字符的 Unicode 編碼。</li>
<li>UTF-8 是當前最常用的字符編碼，用於互聯網通信、數據存儲、軟件開發等。</li>
</ol>
</div>
<h2 id="decode-解碼" tabindex="-1">Decode（解碼） <a class="header-anchor" href="#decode-解碼" aria-label="Permalink to &quot;Decode（解碼）&quot;">&ZeroWidthSpace;</a></h2>
<p>是編碼的反向過程，它將已編碼的數據轉換回其原始形式。解碼的目的是還原編碼過的數據，以便能夠正確讀取或處理它們。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> decodeHTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">html</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> txt</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"textarea"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    txt</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> html</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> txt</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> encodedString</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "&#x26;lt;script&#x26;gt;alert('Hello, js!');&#x26;lt;/script&#x26;gt;"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> decodedString</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> decodeHTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">encodedString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 自定義HTML解碼函數</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">decodedString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// "&#x3C;script>alert('Hello, js!');&#x3C;/script>"</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="hash-哈希" tabindex="-1">Hash（哈希） <a class="header-anchor" href="#hash-哈希" aria-label="Permalink to &quot;Hash（哈希）&quot;">&ZeroWidthSpace;</a></h2>
<p>哈希是一種將任意大小的數據轉換為固定大小散列值的過程。哈希函數通常用於加密、數據完整性檢查、數據結構（如哈希表）等場合。</p>
<p>實做一個 hash 函式:</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> _hash</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">key</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> hashInt</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">typeof</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> key</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "string"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      throw</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"oh! need string type to insert to memory"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> key</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      hashInt</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> key</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">charCodeAt</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> hashInt</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> %</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> size</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  };</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>如何實現一個數據結構 <a href="https://codepen.io/eepson123tw/pen/dywGdRg" target="_blank" rel="noreferrer">hash table</a></p>
</div>
<h3 id="常見的-hash-函式" tabindex="-1">常見的 HASH 函式 <a class="header-anchor" href="#常見的-hash-函式" aria-label="Permalink to &quot;常見的 HASH 函式&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>MD5（Message Digest Algorithm 5）:</li>
</ul>
<blockquote>
<p>MD5是一種128位哈希函數，通常用於生成數據的校驗和檢測數據完整性。然而，由於它容易受到碰撞攻擊，現在不再被推薦用於安全應用程序。</p>
</blockquote>
<ul>
<li>SHA-1（Secure Hash Algorithm 1）:</li>
</ul>
<blockquote>
<p>SHA-1是一種160位哈希函數，用於安全性要求不太高的應用中。然而，它已經被發現存在碰撞攻擊漏洞，因此也不再安全。</p>
</blockquote>
<ul>
<li>SHA-256（Secure Hash Algorithm 256）:</li>
</ul>
<blockquote>
<p>SHA-256是SHA-2家族中的一員，生成256位散列值。它在當今的加密和安全應用中非常常見，用於保護數據完整性和加密密鑰。</p>
</blockquote>
<ul>
<li>SHA-3（Secure Hash Algorithm 3）:</li>
</ul>
<blockquote>
<p>SHA-3是一個新的SHA家族，與SHA-2不同。它提供了不同的設計，並且在一些安全應用中被廣泛使用。</p>
</blockquote>
<ul>
<li>bcrypt:</li>
</ul>
<blockquote>
<p>bcrypt是一個專門用於存儲密碼的哈希函數。它使用適合於安全存儲的鹽（salt）和遞迴計算，以增加安全性。</p>
</blockquote>
<ul>
<li>PBKDF2（Password-Based Key Derivation Function 2）:</li>
</ul>
<blockquote>
<p>PBKDF2是一種基於密碼的金鑰派生函數，用於將密碼轉換為密鑰。它通常用於加密存儲和身份驗證。</p>
</blockquote>
<ul>
<li>HMAC（Hash-based Message Authentication Code）:</li>
</ul>
<blockquote>
<p>HMAC是一種使用特定哈希函數的訊息認證碼，通常用於驗證消息的完整性和真實性。它可以與不同的哈希函數一起使用。</p>
</blockquote>
<ul>
<li>CRC32（Cyclic Redundancy Check）:</li>
</ul>
<blockquote>
<p>CRC32是一種循環冗餘檢查哈希函數，主要用於校驗數據完整性。它通常不用於安全性要求高的應用。</p>
</blockquote>
<h2 id="vue-uri-的問題解法" tabindex="-1">VUE URI 的問題解法 <a class="header-anchor" href="#vue-uri-的問題解法" aria-label="Permalink to &quot;VUE URI 的問題解法&quot;">&ZeroWidthSpace;</a></h2>
<p>其實很簡單可以透過 <code>vue-router</code>，取得目前 query 或是 params，在透過 JS 原生方法進行編碼及解碼，得到資料後透過 Reference 中的 URLSearchParams 反導取回資料~</p>
<h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://zh.wikipedia.org/zh-tw/Unicode" target="_blank" rel="noreferrer">Unicode-萬國碼</a></li>
<li><a href="https://www.redhat.com/sysadmin/base64-encoding" target="_blank" rel="noreferrer">Base64</a></li>
<li><a href="https://stackoverflow.com/questions/6916805/why-does-a-base64-encoded-string-have-an-sign-at-the-end" target="_blank" rel="noreferrer">Base64 encoded =</a></li>
<li><a href="https://mileschou.me/ironman/11th/authentication/day08/" target="_blank" rel="noreferrer">簡介編碼與加密</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc3986#section-2.1" target="_blank" rel="noreferrer">RFC 3986</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams" target="_blank" rel="noreferrer">URLSearchParams</a></li>
<li><a href="https://stackoverflow.com/questions/74230976/vue-js-using-urlsearchparams-is-showing-me-error" target="_blank" rel="noreferrer">vue-js-using-urlsearchparams</a></li>
<li><a href="https://zh.wikipedia.org/zh-tw/%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B8" target="_blank" rel="noreferrer">雜湊函數</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[自學的進程]]></title>
            <link>https://www.aaron-shih.com/smallTalk/self-learning-smalltalk</link>
            <guid>https://www.aaron-shih.com/smallTalk/self-learning-smalltalk</guid>
            <pubDate>Sat, 30 Sep 2023 16:16:10 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="自學的進程" tabindex="-1">自學的進程 <a class="header-anchor" href="#自學的進程" aria-label="Permalink to &quot;自學的進程&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/self-learning.webp" alt="self-learning" data-fancybox="gallery"></p>
<p>轉職後也快三年了，前端的進程不斷地推進，會的技術也慢慢堆疊，從本來的 js 到 ts， Vue 到 React，簡單的切版到現在的 3D 渲染，看了許多書、許多教學影片、許多場技術直播、現場的會議分享，深深體會到技術的脈絡是慢慢往前的，若不跟上或許就這樣落下腳步，停住不再前行了。或許人生也是這樣，有些人也就這樣停住了，不再前進，就在止步了。</p>
<h2 id="感謝" tabindex="-1">感謝 <a class="header-anchor" href="#感謝" aria-label="Permalink to &quot;感謝&quot;">&ZeroWidthSpace;</a></h2>
<p>2023 年也過了一半有餘，2022 年的回顧還歷歷在目，寫下要達成的目標也近乎完成了，還多做了幾項，真是佩服自己的無趣，可以心無雜念的做這些事情。2022 年換到的這間大公司，除了薪水不太行以外，其他都非常的好，有會與你討論技術的同事，下班後大家也還是會利用社群軟體，繼續精進自己，整體的氣氛相當的不錯，還有資深的同事不吝於分享的態度，才讓我知道需要前行的道路，會遇到哪些問題。</p>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>前端的大家真的是太棒了。</p>
</div>
<h2 id="反思" tabindex="-1">反思 <a class="header-anchor" href="#反思" aria-label="Permalink to &quot;反思&quot;">&ZeroWidthSpace;</a></h2>
<p>也許接近年底了，專案的安排上較為鬆散，加上自己開發的熟悉度上升，時間的掌握更好了噎，最近比較清閒了一點，有時間思考這半年有餘的回顧，在年初時偶爾還是會覺得自己會的還不夠多，跟社群上那些大放異彩的人們，相去甚遠，心態又有點急了起來，但隨著這半年來的調整，將自己的規劃一步步達成時，又放下了擔心。</p>
<p>這半年都在學習，如何節省自己的時間，學會過濾訊息，只接收跟自己目標相關的資訊，排除那些雜音，漸漸的進入了一個可以完全專心在目前事務的心態，或許自己真的不如那些強者，但也不用心急，蝸牛慢慢前行也是能爬上樓頂的。</p>
<p>反思學習的進程是不是有些可以更好的方向，不論是程式、英文還是人生，或許把太多事想的太多了，那些擔憂也許會發生、也許不會，無法預知未來，就裝備好自己，朝想要達成的目標邁進就好了，人生的結局也不是盡如人意，努力過愛過恨過，無愧於心也就好了。</p>
<h2 id="收斂" tabindex="-1">收斂 <a class="header-anchor" href="#收斂" aria-label="Permalink to &quot;收斂&quot;">&ZeroWidthSpace;</a></h2>
<p>現在的每天，我也忘記是何時開始了，我會定下每天欲達成的目標及項目，條例式的紀錄在 Notion 的日誌上，一是提醒自己還有代辦事項，二是為了建立達成目標的成就感。雖然每天只達成小量的目標，但現在我也完成了許多大項目，有其實自己在年初訂下的目標:</p>
<ul>
<li>three.js + react 3D 建模 <a href="https://attack-on-titan-suwareyo-raina.zeabur.app/" target="_blank" rel="noreferrer">3D-chair</a></li>
<li>react 文檔學習</li>
<li>blog 翻新</li>
<li>資料結構及演算法 ...etc</li>
</ul>
<p>現在還可以有時間去學習 Blender 建模的基礎，自己建構 3D 模型，真是佩服自己😇，最近還跟同事一起玩起了side-project，用react 寫功能等等，天天都很充實。</p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>這樣一回顧，日文系的我能走到這裡，我也是覺得自己運氣很好，這一路上遇到了許多帶來正向觀念的同事及前輩們，謝謝你們。</p>
</div>
<h2 id="期許" tabindex="-1">期許 <a class="header-anchor" href="#期許" aria-label="Permalink to &quot;期許&quot;">&ZeroWidthSpace;</a></h2>
<p>希望在 2023 年接近尾聲的時候，回顧這一整年的事物時，能更加的相信自己所選擇的道路是正確的，能走的更加有自信及篤定，並能將這股正向的循環傳遞給我所認識的人們，能持續的更新這個 blog,留下點自己曾經努力及存在的足跡。</p>
<h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://www.books.com.tw/products/0010822522" target="_blank" rel="noreferrer">原子習慣</a></li>
<li><a href="https://www.books.com.tw/products/0010948656?sloc=main" target="_blank" rel="noreferrer">第二大腦</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[瀏覽器是如何運作的?]]></title>
            <link>https://www.aaron-shih.com/frontend/how-browser-work</link>
            <guid>https://www.aaron-shih.com/frontend/how-browser-work</guid>
            <pubDate>Sun, 27 Aug 2023 19:13:47 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><h1 id="how-browser-work" tabindex="-1">How browser work? <a class="header-anchor" href="#how-browser-work" aria-label="Permalink to &quot;How browser work?&quot;">&ZeroWidthSpace;</a></h1>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>💡 Main Goal ：藉由理解此文章理解 morden browser 的底層運作</p>
</div>
<p>問題點:</p>
<ul>
<li>瀏覽器對於 HTML 撰寫的容錯度?</li>
<li>為什麼大家都說重排勢必重繪，要盡量避免?</li>
<li>CSS 的深度層級是怎麼被解讀的?為什麼都不會有抓不到的時候?</li>
<li>同一個區塊內依照順序 有 p⇒zindex :-1 與 p⇒zindex:13 的元素，哪一個會先被繪製呢?</li>
<li>重排(回流) 與重繪的差別 ?</li>
<li>CSS 的解析為什麼要影響 JS?</li>
<li>瀏覽器引擎跟解釋器是同一個嗎？</li>
</ul>
<h2 id="␦-目前瀏覽器的使用率佔比" tabindex="-1">␦ 目前瀏覽器的使用率佔比 <a class="header-anchor" href="#␦-目前瀏覽器的使用率佔比" aria-label="Permalink to &quot;␦ 目前瀏覽器的使用率佔比&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="/assets/images/browser/browser.png" alt="browser" data-fancybox="gallery"></p>
<h2 id="🀆-瀏覽器的主要功能-functionality" tabindex="-1">🀆 瀏覽器的主要功能( <strong>functionality</strong> ) <a class="header-anchor" href="#🀆-瀏覽器的主要功能-functionality" aria-label="Permalink to &quot;🀆 瀏覽器的主要功能( **functionality** )&quot;">&ZeroWidthSpace;</a></h2>
<p>透過解析使用者的統一資源識別符 URI (Uniform Resource Identifier) 將 需求的 request 顯示到頁面上.回傳頁面的規格則由 W3C 規定[<a href="https://zh.wikipedia.org/zh-tw/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A4%A7%E6%88%98" target="_blank" rel="noreferrer">瀏覽器戰爭</a>].</p>
<p>常規且共通的使用介面功能：</p>
<ol>
<li>URI 的地址輸入解釋器(上方的 input )</li>
<li>上下頁的按鈕</li>
<li>書籤選項</li>
<li>更新和停止按鈕</li>
<li>主頁按鈕</li>
</ol>
<details class="details custom-block"><summary>用戶界面</summary>
<p>瀏覽器的用戶界面沒有在任何正式規範中指定，它只是來自多年經驗和瀏覽器相互模仿形成的良好實踐。</p>
</details>
<h2 id="🀄︎瀏覽器的高階架構-structure" tabindex="-1">🀄︎瀏覽器的高階架構( <strong>structure</strong> ) <a class="header-anchor" href="#🀄︎瀏覽器的高階架構-structure" aria-label="Permalink to &quot;🀄︎瀏覽器的高階架構( **structure** )&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="/assets/images/browser/browser-structure.png" alt="browser-structure" data-fancybox="gallery"></p>
<ol>
<li>UI介面
<ol>
<li>除了 request page 之外的所有 UI 介面，</li>
</ol>
</li>
<li><a href="https://zh.wikipedia.org/zh-tw/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%95%E6%93%8E" target="_blank" rel="noreferrer">瀏覽器引擎</a>
<ol>
<li>將 UI 和渲染引擎之間的操作做連結.</li>
<li>Google ⇒ <strong>Blink</strong> Mozilla <strong>⇒ Gecko [1998年啟用 最久遠]</strong> Internet Explorer ⇒ <strong>Blink</strong> Safari <strong>⇒ Webkit 自有分支</strong></li>
</ol>
</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Glossary/Rendering_engine" target="_blank" rel="noreferrer">渲染引擎</a>
<ol>
<li>將需求的 HTML CSS 等渲染至瀏覽器頁面上</li>
</ol>
</li>
<li>網路工作
<ol>
<li>處理 network calls 像是 HTTP 需求等, <strong>獨立於平台接口,針對不同平台使用不同的實現！</strong></li>
<li>HTTP <strong><code>java.net</code></strong> (Java平台) <strong><code>HttpClient</code></strong> (C#/.NET平台) <strong><code>requests</code></strong> (Python平台) <strong><code>NSURLSession</code></strong> (iOS/macOS平台)</li>
</ol>
</li>
<li>UI 後端介面
<ol>
<li>用於繪製基本小工具（例如下拉框、視窗等）的後端。這個後端提供了一個通用的介面，並不依賴於特定平台。例如選擇框、輸入框、複選框和窗口。</li>
</ol>
</li>
<li>JavaScript 解釋器
<ol>
<li>是一個內建於瀏覽器的程式，用於解析並執行 JavaScript 代碼。</li>
<li><strong>V8 (Chrome 和其他 Chromium-based 瀏覽器)、SpiderMonkey (Firefox)、JavaScriptCore (Safari)</strong></li>
</ol>
</li>
<li>資料存儲
<ol>
<li>用於在本地保存各種數據</li>
<li>as cookie。瀏覽器還支持 localStorage、IndexedDB、WebSQL 和 FileSystem</li>
</ol>
</li>
</ol>
<blockquote>
<p>Chrome 等瀏覽器為<code>多進程架構</code>，以便運行渲染引擎的多個實例 ⇒ 每個選項卡 Tab 都在單獨的進程中運行。</p>
</blockquote>
<h2 id="🀪-渲染引擎-rendering-engines" tabindex="-1">🀪 渲染引擎 ( Rendering engines ) <a class="header-anchor" href="#🀪-渲染引擎-rendering-engines" aria-label="Permalink to &quot;🀪 渲染引擎 ( Rendering engines )&quot;">&ZeroWidthSpace;</a></h2>
<p>Chrome 使用 <a href="https://webkit.org/" target="_blank" rel="noreferrer">WebKit</a>， WebKit 是一個開源渲染引擎，最初是作為 Linux 平台的引擎，後來被 Apple 修改為支持 Mac 和 Windows。</p>
<h3 id="主要流程" tabindex="-1">主要流程 <a class="header-anchor" href="#主要流程" aria-label="Permalink to &quot;主要流程&quot;">&ZeroWidthSpace;</a></h3>
<p><img src="/assets/images/browser/basic-flow.png" alt="basic-flow" data-fancybox="gallery"></p>
<p>在 network 處理完下載的資源後，即會開始解析 HTML 並轉換成 DOM 樹，並解析 CSS 將 DOM 樹加上樣式信息組成 Render tree.</p>
<p>即為</p>
<p><img src="/assets/images/browser/render-tree.png" alt="render-tree" data-fancybox="gallery"></p>
<p>但在形成上方的樹狀結構前，還有幾個步驟，接下來會依序的介紹這過程並且各自展開。</p>
<blockquote>
<p>這是一個漸進式的過程，若在某一個步驟發生較大的計算，會造成頁面渲染較慢的問題。</p>
</blockquote>
<h3 id="詳細流程圖" tabindex="-1">詳細流程圖 <a class="header-anchor" href="#詳細流程圖" aria-label="Permalink to &quot;詳細流程圖&quot;">&ZeroWidthSpace;</a></h3>
<p><img src="/assets/images/browser/main-flow.png" alt="main-flow" data-fancybox="gallery"></p>
<p>Gecko 和 WebKit [現已轉移至 <strong>Blink</strong> ]是常用的引擎，它們在網頁渲染過程和術語上有細微差異。Gecko 使用 Frame Tree、Reflow；而 WebKit 使用Render Tree、Layout，還有 Attachment 連接 DOM 和視覺信息。但最後皆會相同地繪製到頁面上。</p>
<h2 id="🀇-解析器與節點-parsing" tabindex="-1">🀇 解析器與節點 ( <strong>Parsing )</strong> <a class="header-anchor" href="#🀇-解析器與節點-parsing" aria-label="Permalink to &quot;🀇 解析器與節點 ( **Parsing )**&quot;">&ZeroWidthSpace;</a></h2>
<p>解析是將輸入文本( HTML 與 CSS )按照語言規則轉換為結構化的樹狀結構( DOM 與 CSSOM )的過程。它包括詞法分析和語法分析，可以使用自上而下或自下而上兩種類型的解析器來實現。解析器可以通過自動生成工具來生成，幫助實現語言的解析過程。</p>
<p><strong>各大前端框架也有實作自己的解析器將語法糖進行轉換，皆是按照類似的模式進行解析。</strong></p>
<p>解析的結果通常是一個節點樹，表示文檔的結構，也被稱為解析樹或語法樹。</p>
<p><img src="/assets/images/browser/parsing.png" alt="parsing" data-fancybox="gallery"></p>
<blockquote>
<p>每個節點代表一個操作符或操作數，從而準確地表示原始表達式的結構。</p>
</blockquote>
<h3 id="確立語法" tabindex="-1">確立語法 <a class="header-anchor" href="#確立語法" aria-label="Permalink to &quot;確立語法&quot;">&ZeroWidthSpace;</a></h3>
<p>依照文檔規則，具有由詞彙和語法規則組成的確定性語法。它被稱為上下文無關語法(<strong>註3</strong>)。</p>
<h3 id="解析語法-⇒-解析器←→詞法分析器組合" tabindex="-1">解析語法 ⇒ 解析器←→詞法分析器組合 <a class="header-anchor" href="#解析語法-⇒-解析器←→詞法分析器組合" aria-label="Permalink to &quot;解析語法 ⇒ 解析器←→詞法分析器組合&quot;">&ZeroWidthSpace;</a></h3>
<p>詞法分析器將輸入拆分成詞彙單元（ tokens ），這些單元是語言的有效構建塊。</p>
<p>語法分析是根據語言的語法規則應用解析。</p>
<p>詞法分析器（有時稱為 tokenizer ）和負責根據語言的語法規則分析文檔結構並構建解析樹的解析器組件組成。詞法分析器知道如何去除不相關的字符，例如空格和換行符。</p>
<p>解析過程是迭代的，解析器請求詞法分析器提供詞彙單元，嘗試匹配語法規則，添加對應節點至解析樹；若無匹配，保存詞彙單元直至找到匹配規則，否則拋出異常表示文檔無效。</p>
<p><img src="/assets/images/browser/tokenize.png" alt="tokenize" data-fancybox="gallery"></p>
<h3 id="翻譯-translation-為機械語言" tabindex="-1">翻譯 ( Translation ) 為機械語言 <a class="header-anchor" href="#翻譯-translation-為機械語言" aria-label="Permalink to &quot;翻譯 ( Translation ) 為機械語言&quot;">&ZeroWidthSpace;</a></h3>
<p>souceCode → Parsing[語法確立及分析] → 翻譯成機器代碼[0101] 也就是下圖.</p>
<p><img src="/assets/images/browser/translation.png" alt="translation" data-fancybox="gallery"></p>
<h2 id="🀏-html-解析器-html-parser-⇒-dom" tabindex="-1">🀏 HTML 解析器 ( <strong>HTML Parser ) ⇒ DOM</strong> <a class="header-anchor" href="#🀏-html-解析器-html-parser-⇒-dom" aria-label="Permalink to &quot;🀏 HTML 解析器 ( **HTML Parser ) ⇒ DOM**&quot;">&ZeroWidthSpace;</a></h2>
<p>HTML 語法定義由 w3c 定義，不適合用傳統的上下文無關文法（context-free grammar）來定義，因為HTML具有寬容性，允許省略某些標籤或開始和結束標籤，這使得它難以使用正常的文法進行解析。HTML與XML相似，但其靈活寬容的語法與XML的嚴格語法有所不同，導致XML解析器無法直接解析HTML。</p>
<h3 id="html-定義-dtd" tabindex="-1"><strong>HTML</strong> 定義 <strong>(<a href="https://www.notion.so/algorithm-338534fc0b084397b4d53ab2b614c656?pvs=21" target="_blank" rel="noreferrer">DTD</a> )</strong> <a class="header-anchor" href="#html-定義-dtd" aria-label="Permalink to &quot;**HTML** 定義 **([DTD](https://www.notion.so/algorithm-338534fc0b084397b4d53ab2b614c656?pvs=21) )**&quot;">&ZeroWidthSpace;</a></h3>
<p>HTML的定義採用DTD（Document Type Definition）格式，這種格式用於定義SGML（Standard Generalized Markup Language）家族的語言。</p>
<p>DTD包含了所有允許的元素、屬性和層次結構的定義。</p>
<h3 id="dom樹" tabindex="-1"><strong>DOM樹</strong> <a class="header-anchor" href="#dom樹" aria-label="Permalink to &quot;**DOM樹**&quot;">&ZeroWidthSpace;</a></h3>
<p>DOM 是文檔對像模型的縮寫。它是HTML文檔的對象表示，是HTML元素與外界的接口，就像JavaScript一樣。須符合 W3C 規範。</p>
<p><img src="/assets/images/browser/dom-tree.png" alt="dom-tree" data-fancybox="gallery"></p>
<h3 id="解析算法-parsing-algorithm" tabindex="-1">解析算法 ( <strong>parsing algorithm )</strong> <a class="header-anchor" href="#解析算法-parsing-algorithm" aria-label="Permalink to &quot;解析算法 ( **parsing algorithm )**&quot;">&ZeroWidthSpace;</a></h3>
<p>由於 HTML 的特性，無法使用傳統的自上而下或自下而上解析器進行解析。為了處理 HTML，瀏覽器使用自定義的解析器。</p>
<p>解析 HTML 的算法由 HTML5 規範詳細描述，它包含兩個階段：詞法分析（tokenization）和樹構造（tree construction）。</p>
<p>tokenization 是詞法分析，將輸入解析成詞彙單元（tokens），包括開始標籤、結束標籤、屬性名稱和屬性值等。</p>
<p>tokenization 將詞彙單元傳遞給樹構造器，並逐個消耗輸入字符，直到輸入結束。</p>
<p>想像一下會如何解析並建構 DOM</p>
<div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>Hello world&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="/assets/images/browser/tag-algorithm.png" alt="tag-algorithm" data-fancybox="gallery"></p>
<p><img src="/assets/images/browser/tag-algorithm-2.png" alt="tag-algorithm-2" data-fancybox="gallery"></p>
<blockquote>
<p><strong>當解析完成後，會到文檔進行標記[完成]，並且執行那些應該在當前文檔解析後執行的文檔[加載]</strong></p>
</blockquote>
<h3 id="瀏覽器的容錯能力" tabindex="-1">瀏覽器的容錯能力 <a class="header-anchor" href="#瀏覽器的容錯能力" aria-label="Permalink to &quot;瀏覽器的容錯能力&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">mytag</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">mytag</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    Really lousy HTML</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>雖然使用了錯誤的閉合標籤，但不會跳出錯誤。</p>
<p>HTML 解析器會進行相應處理。解析器會將所有的標籤逐一關閉，直到達到禁止添加該元素的標籤為止。</p>
<p>主要負責:</p>
<ol>
<li>當前元素被明確禁止出現在某些外部標籤中，需要關閉這些標籤。</li>
<li>如果在當前元素之前忘記了某些標籤（或該標籤是可選的），需要逐一關閉直到達到該元素可以被添加的位置。</li>
<li>嘗試在行內元素中添加塊級元素時，需要先關閉所有行內元素，直到達到下一個更高級的塊級元素。</li>
<li>如果以上處理仍然無法添加元素，則會繼續關閉標籤，直到可以添加元素，或者忽略該標籤。</li>
</ol>
<h2 id="🀐-css-解析器-css-parsing-⇒-cssom" tabindex="-1">🀐 CSS 解析器 ( <strong>CSS parsing</strong> ) ⇒ CSSOM <a class="header-anchor" href="#🀐-css-解析器-css-parsing-⇒-cssom" aria-label="Permalink to &quot;🀐 CSS 解析器 ( **CSS parsing** ) ⇒ CSSOM&quot;">&ZeroWidthSpace;</a></h2>
<p>CSS物件模型（ CSSOM ）與 DOM 類似，它們都是樹狀結構，但它們是獨立的資料結構。瀏覽器將 CSS 規則轉換為一個可理解且可操作的樣式映射。瀏覽器會遍歷 CSS 中的每個規則集，根據 CSS 選擇器創建一個節點樹，這些節點之間具有父子和兄弟關係。CSS 是上下文無關語法，可以使用分享的<a href="https://www.notion.so/How-browser-work-397f244949f14440a1448a78166191e6?pvs=21" target="_blank" rel="noreferrer">解析器</a>進行解析。</p>
<p>1.詞彙語法會依照正則匹配</p>
<div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">comment</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">   \</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">\</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">^*</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">\</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*+</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">^</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/*][^*]*\*+)*\/</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">num       [0-9]+|[0-9]*"."[0-9]+</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">nonascii  [\200-\377]</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">nmstart   [_a-z]|{nonascii}|{escape}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">nmchar    [_a-z0-9-]|{nonascii}|{escape}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">name      {nmchar}+</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">ident     {nmstart}{nmchar}* &#x3C;= 標識符的縮寫</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>2.語法分析是用 BNF<strong>註4</strong>定義，用於描述各種 CSS 規則、選擇器、屬性和其他語法元素。</p>
<div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">ruleset</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  : </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">selector</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">','</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> S</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> selector</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ]</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">    '{'</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> S</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> declaration</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">';'</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> S</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> declaration</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ]</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> '}'</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> S</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  ;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">selector</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  : </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">simple_selector</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">combinator</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> selector</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> S</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">combinator</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> selector</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ]</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ]</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">?</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  ;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">simple_selector</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  :</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> element_name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">HASH</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> |</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">attrib</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">pseudo</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ]*</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  | [ </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">HASH</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">attrib</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">pseudo</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ]+</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  ;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">class</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  : '.' </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">IDENT</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  ;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">element_name</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  : </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">IDENT</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> | '*'</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  ;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">attrib</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  : '[' </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">S</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">* </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">IDENT</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> S</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">* [ [ '=' | </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">INCLUDES</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">DASHMATCH</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ] </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">S</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">*</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    [ </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">IDENT</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">STRING</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ] </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">S</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">* ] ']'</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  ;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">pseudo</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  : ':' [ </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">IDENT</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">FUNCTION</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> S</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">* [</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">IDENT</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> S</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">*] ')' ]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  ;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>範例 就會被配對到 selector</p>
<div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> a</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  color</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">red</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  font</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">weight</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">bold</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote>
<p>WebKit 使用 <a href="https://zhuanlan.zhihu.com/p/120812270" target="_blank" rel="noreferrer">Flex/Bison</a> 解析器生成器從 CSS 語法文件自動創建解析器。「<strong>一個自下而上的</strong>移位歸約解析器」<strong>(註5)</strong></p>
</blockquote>
<p>最終形成:</p>
<p><img src="/assets/images/browser/css-parsing.png" alt="css-parsing" data-fancybox="gallery"></p>
<blockquote>
<p>開發者工具中的&quot; Recalculate Style &quot;顯示的是解析 CSS、構建 CSSOM 樹和遞歸計算計算樣式所需的總時間。</p>
</blockquote>
<h2 id="🀘-style-樣式表-style-sheets-和處理腳本-scripts-的執行順序" tabindex="-1">🀘 Style 樣式表( <strong>Style sheets</strong> ) 和處理腳本( Scripts )的執行順序 <a class="header-anchor" href="#🀘-style-樣式表-style-sheets-和處理腳本-scripts-的執行順序" aria-label="Permalink to &quot;🀘 Style 樣式表( **Style sheets** ) 和處理腳本( Scripts )的執行順序&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="預加載掃描器" tabindex="-1">預加載掃描器 <a class="header-anchor" href="#預加載掃描器" aria-label="Permalink to &quot;預加載掃描器&quot;">&ZeroWidthSpace;</a></h3>
<p>預載掃描器會解析可用的內容並請求高優先級的資源，例如 CSS、JavaScript和網頁字型。得益於預載掃描器，我們不需要等到解析器找到外部資源的引用再請求它。它會在後台檢索資源，這樣當 HTML 解析器到達所請求的資源時，它們可能已經在傳輸中或已經下載完畢。</p>
<h3 id="script-載入順序" tabindex="-1">Script 載入順序 <a class="header-anchor" href="#script-載入順序" aria-label="Permalink to &quot;Script 載入順序&quot;">&ZeroWidthSpace;</a></h3>
<p>在網頁的同步模型中，當解析器遇到**<code>&lt;script&gt;</code>**標籤時，期望腳本會立即被解析和執行。文檔的解析過程將停止，直到腳本的執行完成。</p>
<ul>
<li>腳本是外部腳本，則必須同步從網絡上獲取資源，這會導致解析過程暫停，直到資源獲取完成。</li>
<li>**<code>defer</code><strong>屬性到</strong><code>&lt;script&gt;</code>**標籤，這樣腳本將在文檔解析完成後執行，不會阻止解析過程。</li>
<li>**<code>async</code>**屬性，可以將腳本標記為異步的。這意味著腳本將以非阻塞的方式加載和執行，不會影響文檔的解析過程，並且可以利用不同的線程進行解析和執行，從而更好地提高網頁性能。</li>
</ul>
<h3 id="script-推測性解析" tabindex="-1">Script 推測性解析 <a class="header-anchor" href="#script-推測性解析" aria-label="Permalink to &quot;Script 推測性解析&quot;">&ZeroWidthSpace;</a></h3>
<p>當 script 被解析時會由另一個線程解析文檔的其餘部分並找出需要從網絡加載的其他資源並加載它們。</p>
<blockquote>
<p>推測解析器僅解析對外部資源（如外部腳本、樣式表和圖像）的引用。不會進行修改 DOM 的動作[主線程負責]</p>
</blockquote>
<h3 id="樣式表-style-sheets-載入順序" tabindex="-1">樣式表 ( <strong>Style sheets</strong> ) 載入順序 <a class="header-anchor" href="#樣式表-style-sheets-載入順序" aria-label="Permalink to &quot;樣式表 ( **Style sheets** ) 載入順序&quot;">&ZeroWidthSpace;</a></h3>
<p>獲取 CSS 時不會阻止 HTML 解析或下載，且不會對 DOM 樹造成修改，但它會阻止 JavaScript 解析，並會造成錯誤。[因為 JavaScript 經常拿來查詢 CSS 屬性，並對元素造成影響]</p>
<blockquote>
<p>當樣式表仍在加載和解析時，Firefox 會阻止所有腳本。僅當腳本嘗試訪問可能受卸載樣式表影響的某些樣式屬性時，WebKit 才會阻止腳本。</p>
</blockquote>
<p>需注意</p>
<blockquote>
<p>HTML解析器和CSS解析器是並行執行的，它們在解析和構建文檔的過程中相互協調，以提高網頁的加載效率和性能。</p>
</blockquote>
<h2 id="🀙-渲染樹-render-tree-construction" tabindex="-1">🀙 <strong>渲染樹 ( Render tree construction )</strong> <a class="header-anchor" href="#🀙-渲染樹-render-tree-construction" aria-label="Permalink to &quot;🀙 **渲染樹 ( Render tree construction )**&quot;">&ZeroWidthSpace;</a></h2>
<p>瀏覽器在處理網頁內容時所建立的一種內部數據結構，用於描述網頁的可見部分。<strong>DOM + CSSOM ⇒ Render Tree</strong></p>
<p>並且按顯示順序排列的視覺元素，Firefox 將渲染樹中的元素稱為“框架”。 WebKit 使用術語渲染器或渲染對象。</p>
<p>以下為渲染樹中元素的實例，渲染器:</p>
<div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> RenderObject</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//每個渲染器代表一個矩形區域，通常對應於節點的 CSS 框 [node's CSS box]，如 CSS2 規範所述。它包括寬度、高度和位置等幾何信息。</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  virtual</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> layout</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  virtual</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> paint</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">PaintInfo</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  virtual</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> rect</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> repaintRect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  Node</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//the DOM node</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  RenderStyle</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> style</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// the computed style</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  RenderLayer</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> containgLayer</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//the containing z-index layer</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">RenderObject</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> RenderObject</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createObject</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Node</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> RenderStyle</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> style</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    Document</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> doc</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-></span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    RenderArena</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> arena</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> doc</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-></span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">renderArena</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">    ...</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    RenderObject</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> o</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    switch</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">style</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-></span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">display</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> NONE</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> INLINE</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">            o</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">arena</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">RenderInline</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> BLOCK</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">            o</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">arena</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">RenderBlock</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> INLINE_BLOCK</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">            o</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">arena</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">RenderBlock</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> LIST_ITEM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">            o</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">arena</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">RenderListItem</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">       ...</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> o</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="渲染樹與-dom-樹的關係" tabindex="-1">渲染樹與 DOM 樹的關係 <a class="header-anchor" href="#渲染樹與-dom-樹的關係" aria-label="Permalink to &quot;渲染樹與 DOM 樹的關係&quot;">&ZeroWidthSpace;</a></h3>
<p>渲染樹與 DOM 並非為對應關係，若有元素被屬性影響(非可視 DOM 元素不會插入渲染樹中)，也有些例外渲染是無法用單一表示的物件( mutiple line text or select )</p>
<blockquote>
<p>某些渲染對像對應於 DOM 節點，但不在樹中的同一位置。浮動( float )和絕對定位元素( absolute ) 則會脫離，放置在樹的不同部分，並映射到真實框架。</p>
</blockquote>
<p>⇒ 這也是為什麼我們開啟了某一個不可視的節點,會被插入在不同位置的理由。</p>
<p><img src="/assets/images/browser/render-tree-1.png" alt="render-tree-1" data-fancybox="gallery"></p>
<p><img src="/assets/images/browser/render-tree-2.png" alt="render-tree-2" data-fancybox="gallery"></p>
<h3 id="建構渲染樹的流程" tabindex="-1">建構渲染樹的流程 <a class="header-anchor" href="#建構渲染樹的流程" aria-label="Permalink to &quot;建構渲染樹的流程&quot;">&ZeroWidthSpace;</a></h3>
<p>在 WebKit 中，解析樣式和創建渲染器的過程稱為“ attachment ”。處理 HTML 和 BODY 標籤時，會構建渲染樹的根節點。</p>
<p>這個根渲染對象對應到 CSS 規範中所謂的包含塊（Containing Block）：它是包含所有其他塊的最上層塊。它的尺寸就是瀏覽器窗口的顯示區域尺寸（viewport）。</p>
<p>這個根渲染對象形成了瀏覽器的渲染範圍，並作為渲染樹的開始。然後遍歷<code>深度優先遍歷</code>(<strong>註6</strong>)整個 DOM 樹和 CSSOM 樹，將它們合併並建立一個描述網頁內容和外觀的渲染樹。</p>
<h3 id="樣式計算" tabindex="-1">樣式計算 <a class="header-anchor" href="#樣式計算" aria-label="Permalink to &quot;樣式計算&quot;">&ZeroWidthSpace;</a></h3>
<p>構建渲染樹需要計算每個渲染對象的視覺屬性。</p>
<p>難點:</p>
<p>1.樣式數據是一個非常大的構造，包含大量樣式屬性，這可能會導致內存問題。</p>
<p>2.查找每個元素的匹配規則可能會導致性能問題。例如:div div div div{ } 要如何找到此元素。</p>
<p>3.如何將涉及相當複雜的層疊規則，套用到各元素上。</p>
<p>解決:</p>
<p>1.共享風格數據: WebKit 節點引用樣式對象 ( RenderStyle )。<a href="https://web.dev/howbrowserswork/#sharing-style-data" target="_blank" rel="noreferrer">在某些情況下</a>，這些對象可以被節點共享。</p>
<p>2.規則樹圖: firefox 使用 rule tree and style context tree，以正確的順序應用所有匹配規則並執行將它們從邏輯值轉換為具體值來操作計算。</p>
<p><strong>存儲規則是惰性完成的</strong>。樹不會在開始時計算每個節點，但每當需要計算節點樣式時，計算出的路徑就會添加到樹中。</p>
<p>雙樹結構在 react 中也有實作 應用於將 jsx 還原成 Dom node 節點時。</p>
<blockquote>
<p>在 WebKit 中，沒有規則樹的情況下，匹配的聲明將被遍歷四次。多次出現的屬性將按照正確的層疊順序解析，最後出現的規則將覆蓋之前的規則。</p>
</blockquote>
<p><img src="/assets/images/browser/context-tree.png" alt="context-tree" data-fancybox="gallery"></p>
<p>3.緩存樣式信息結構體：**結構中的所有屬性都可以是繼承的或非繼承的。繼承的屬性是指，如果元素沒有定義這些屬性，則它們將從其父元素繼承。非繼承的屬性（稱為&quot;重置&quot;屬性）在未定義時使用默認值。**有助於加快訪問和查找。如果底層節點沒有為某個結構提供定義，則可以使用上層節點中的緩存結構，這樣可以節省計算時間。這種方式也確保了整個文檔中的樣式信息的一致性和有效性。(如 邊框 或 顏色 或 字型大小)</p>
<p>4.選擇器的哈希映射:根據選擇器將規則添加到多個 hash map (按 id、按類名稱、按標籤名稱的映射，以及針對不屬於這些類別的任何內容的通用映射)。</p>
<p>5.<a href="https://web.dev/howbrowserswork/#style-sheet-cascade-order" target="_blank" rel="noreferrer">樣式表級聯順序</a>:定義應用規則的順序，也就是優先級。最後會對這些優先級進行排序，來解決難點2。</p>
<p>按照 CSS2 規範，選擇器的特殊性由以下方式定義：</p>
<ol>
<li>如果聲明來自'style'屬性而不是帶有選擇器的規則，則計為1，否則為0 (= a)。</li>
<li>計算選擇器中 ID 屬性的數量 (= b)。</li>
<li>計算選擇器中其他屬性和偽類的數量 (= c)。</li>
<li>計算選擇器中元素名稱和偽元素的數量 (= d)。</li>
<li>連接這四個數字 a-b-c-d（在一個大數字系統中）得到特殊性。</li>
</ol>
<div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">             {}  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* a=0 b=0 c=0 d=0 -> specificity = 0,0,0,0 */</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> li</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">            {}  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* a=0 b=0 c=0 d=1 -> specificity = 0,0,0,1 */</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> li</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">first</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">line</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {}  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* a=0 b=0 c=0 d=2 -> specificity = 0,0,0,2 */</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> ul</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> li</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">         {}  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* a=0 b=0 c=0 d=2 -> specificity = 0,0,0,2 */</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> ul</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> ol</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">li</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      {}  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* a=0 b=0 c=0 d=3 -> specificity = 0,0,0,3 */</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> h1</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">rel</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">up</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]{}  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* a=0 b=0 c=1 d=1 -> specificity = 0,0,1,1 */</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> ul</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> ol</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> li</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">red</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  {}  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* a=0 b=0 c=1 d=3 -> specificity = 0,0,1,3 */</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> li</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">red</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">level</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  {}  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* a=0 b=0 c=2 d=1 -> specificity = 0,0,2,1 */</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> #</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x34y</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">         {}  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* a=0 b=1 c=0 d=0 -> specificity = 0,1,0,0 */</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> style</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">""</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">          /* a=1 b=0 c=0 d=0 -> specificity = 1,0,0,0 */</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="🀡-佈局-layout" tabindex="-1">🀡 佈局 ( <strong>Layout )</strong> <a class="header-anchor" href="#🀡-佈局-layout" aria-label="Permalink to &quot;🀡 佈局 ( **Layout )**&quot;">&ZeroWidthSpace;</a></h2>
<p>一旦渲染樹建立完成，佈局開始進行。渲染樹確定了哪些節點要顯示（即使是不可見的），以及它們的計算樣式，但還不包括每個節點的尺寸或位置。
⇒ 佈局為計算位置與大小，HTML 使用基於流的佈局模型，<strong>是一個遞歸過程</strong>。</p>
<p>所有渲染器都有一個“佈局”或“重新排列”方法，每個渲染器都會調用其需要佈局的子級的佈局方法。 ⇒ 第一次確定每個節點的尺寸和位置稱為佈局。對於後續的重新計算，則稱為重新排列。</p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>根渲染器的位置是 0,0，其尺寸是視口 - 瀏覽器窗口的可見部分。</p>
</div>
<h3 id="髒位註記-dirty-bit-頁面重寫標誌位" tabindex="-1">髒位註記 (Dirty bit 頁面重寫標誌位) <a class="header-anchor" href="#髒位註記-dirty-bit-頁面重寫標誌位" aria-label="Permalink to &quot;髒位註記 (Dirty bit 頁面重寫標誌位)&quot;">&ZeroWidthSpace;</a></h3>
<p>為了不對每一個小變化都進行完整的佈局，瀏覽器使用“髒位”系統。有兩種標籤 &quot;dirty&quot;, and &quot;children are dirty” 區分本身及子級</p>
<h3 id="全局佈局和增量佈局-global-and-incremental-layout" tabindex="-1">全局佈局和增量佈局 (<strong>Global and incremental layout</strong>) <a class="header-anchor" href="#全局佈局和增量佈局-global-and-incremental-layout" aria-label="Permalink to &quot;全局佈局和增量佈局 (**Global and incremental layout**)&quot;">&ZeroWidthSpace;</a></h3>
<p>整個渲染樹上觸發全局計算:</p>
<ul>
<li>影響所有渲染器的全局樣式更改，例如字體大小更改。</li>
<li>屏幕大小被調整</li>
</ul>
<p>被標記為髒位渲染器的才會被佈局</p>
<p>增量佈局計算: (異步)</p>
<ul>
<li>額外的內容從網絡並添加 DOM 樹</li>
</ul>
<h3 id="異步-和-同步佈局" tabindex="-1">異步 和 同步佈局 <a class="header-anchor" href="#異步-和-同步佈局" aria-label="Permalink to &quot;異步 和 同步佈局&quot;">&ZeroWidthSpace;</a></h3>
<p>在 Firefox 和 WebKit 中，增量布局 ( incremental layout)是異步進行的。它們都使用一個排程器來觸發批量執行&quot;reflow commands&quot;（重新排版命令）。增量布局將重新布局被標記為&quot;dirty&quot;(需要重新排版)的渲染器。這使得布局更新可以在一個獨立的時間片中完成，不會立即中斷網頁渲染的進程。</p>
<h3 id="佈局最佳化" tabindex="-1">佈局最佳化 <a class="header-anchor" href="#佈局最佳化" aria-label="Permalink to &quot;佈局最佳化&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="https://juejin.cn/post/6983190159646801927" target="_blank" rel="noreferrer">在某些情況下</a>，當觸發佈局（layout）時，例如&quot;resize&quot;（調整大小）或渲染器位置的更改（而不是大小），渲染器的大小會從緩存中取出，而不是重新計算。</p>
<p>有時只有子樹被修改，佈局不會從根節點開始。這種情況可能發生在只有局部更改且不影響周圍環境的情況下，例如向文本字段插入文本（否則每次按鍵都會從根節點觸發佈局）。</p>
<h3 id="佈局過程模式" tabindex="-1">佈局過程模式 <a class="header-anchor" href="#佈局過程模式" aria-label="Permalink to &quot;佈局過程模式&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>父渲染器確定自己的寬度。</li>
<li>父渲染器遍歷子渲染器，並進行以下操作：
<ul>
<li>放置子渲染器（設置其x和y位置）。</li>
<li>如果需要，調用子渲染器的佈局過程 - 這可能是因為子渲染器的內容發生了變化，或者在進行全局佈局時，或者其他一些原因。</li>
<li>計算子渲染器的高度。</li>
</ul>
</li>
<li>父渲染器使用子渲染器的累積高度以及邊距和內邊距的高度，來設置自己的高度 - 這將被父渲染器的父渲染器使用。</li>
<li>將父渲染器的&quot;dirty&quot;標誌設置為false，表示佈局已經完成。</li>
</ol>
<p>另外有 寬度計算 與 佈局中斷 則不在此分享範圍內。</p>
<h2 id="🀀-繪畫-painting" tabindex="-1">🀀 繪畫 ( Painting ) <a class="header-anchor" href="#🀀-繪畫-painting" aria-label="Permalink to &quot;🀀 繪畫 ( Painting )&quot;">&ZeroWidthSpace;</a></h2>
<p>繪製（Painting）可以將佈局樹中的元素分割成不同的層。將內容提升為 GPU 上的層（而不是 CPU上 的主線程）可以改善繪製和重繪性能。有特定的屬性和元素會產生一個層，包括 video 和 canvas 元素，以及任何具有不透明度、3D 變形、will-change 等 CSS 屬性的元素，還有其他幾個原因。這些節點將被繪製到自己的層中，包括其後代，除非後代由於上述原因之一（或多個原因）需要自己的層。</p>
<p>在繪畫階段( FMP )，遍歷渲染樹並調用渲染器的“paint()”方法將內容顯示在屏幕上。</p>
<p>繪製可以是全局的，也可以是增量的。增量繪製只重繪發生變化的部分，而全局繪製則重繪整個渲染樹。</p>
<blockquote>
<p>為了確保平滑的滾動和動畫，所有佔用主線程的事情，包括計算樣式、回流和繪製，都必須讓瀏覽器在 16.67 毫秒以內完成。</p>
</blockquote>
<h3 id="繪製順序-與-顯示列表" tabindex="-1">繪製順序 與 顯示列表 <a class="header-anchor" href="#繪製順序-與-顯示列表" aria-label="Permalink to &quot;繪製順序 與 顯示列表&quot;">&ZeroWidthSpace;</a></h3>
<p>由 CSS2 定義，它影響了元素在堆疊上下文中的堆疊順序，並且影響著繪製的順序。Firefox 使用顯示列表來優化繪製過程，只遍歷一次渲染樹來繪製相關的元素。</p>
<p>Firefox 遍歷渲染樹並為繪製的矩形構建顯示列表。它包含與矩形相關的渲染器，按正確的繪製順序（渲染器的背景，然後是邊框等）。</p>
<ol>
<li>background color</li>
<li>background image</li>
<li>border</li>
<li>children</li>
<li>outline</li>
</ol>
<h3 id="動態變化" tabindex="-1">動態變化 <a class="header-anchor" href="#動態變化" aria-label="Permalink to &quot;動態變化&quot;">&ZeroWidthSpace;</a></h3>
<p>渲染引擎嘗試在響應變更時進行最小可能的動作。例如，更改元素的顏色只會重新繪製該元素本身，而更改元素的位置則可能會觸發重新佈局和繪製該元素、其子元素和可能的兄弟元素。對 DOM 節點進行添加將導致節點的佈局和繪製。較大的變更，如增加&quot;html&quot;元素的字體大小，將導致緩存失效、重新佈局和繪製整個渲染樹</p>
<h3 id="渲染引擎的線程" tabindex="-1">渲染引擎的線程 <a class="header-anchor" href="#渲染引擎的線程" aria-label="Permalink to &quot;渲染引擎的線程&quot;">&ZeroWidthSpace;</a></h3>
<p>渲染引擎是單線程的，除了網絡操作外，幾乎所有操作都在單一線程中進行。主線程是一個事件循環，等待並處理事件（如佈局和繪製事件）。</p>
<p>繪製引擎的執行緒數量可能有限，而網絡操作可以由多個平行線程執行。</p>
<h3 id="事件循環" tabindex="-1">事件循環 <a class="header-anchor" href="#事件循環" aria-label="Permalink to &quot;事件循環&quot;">&ZeroWidthSpace;</a></h3>
<p>這是一個無限循環，使進程保持活動狀態。它等待事件（如佈局和繪製事件）並處理它們。</p>
<h2 id="🀁-合成-compositing" tabindex="-1">🀁 合成( <strong><a href="https://developer.mozilla.org/en-US/docs/Web/Performance/How_browsers_work#compositing" target="_blank" rel="noreferrer">Compositing</a> ）</strong> <a class="header-anchor" href="#🀁-合成-compositing" aria-label="Permalink to &quot;🀁 合成( **[Compositing](https://developer.mozilla.org/en-US/docs/Web/Performance/How_browsers_work#compositing) ）**&quot;">&ZeroWidthSpace;</a></h2>
<p>當文檔的不同部分被繪製在不同的層中，並且彼此重疊時，必須使用合成（compositing）來確保它們以正確的順序顯示在屏幕上，並且內容正確地呈現出來。</p>
<p>隨著頁面繼續加載資源，可能會發生回流（reflow）（回想我們的例子中那張晚到的圖片）。回流將觸發重繪（repaint）和重新合成（re-composite）。如果我們提前定義了圖片的尺寸，就不需要回流，只有需要重繪的層會進行更新，並且如果需要，會重新合成。但是，我們沒有包含圖片的尺寸！當從服務器獲取圖片時，渲染過程會返回佈局步驟，並從那裡重新開始。</p>
<h2 id="🀂-視覺顯示-display" tabindex="-1">🀂 視覺顯示 ( Display ) <a class="header-anchor" href="#🀂-視覺顯示-display" aria-label="Permalink to &quot;🀂 視覺顯示 ( Display )&quot;">&ZeroWidthSpace;</a></h2>
<p>當前面的步驟都處理完成後，就是將頁面顯示的階段。此階段會按照以下<a href="https://www.w3.org/TR/CSS21/intro.html#processing-model" target="_blank" rel="noreferrer">步驟</a>:</p>
<ol>
<li>解析 source code 並創建一個 DOM Tree。</li>
<li>確定目前媒體類型
<img src="/assets/images/browser/media.png" alt="media" data-fancybox="gallery"></li>
<li>取回與當前媒體類型關聯的所有樣式表</li>
<li>透過適合目前媒體類型的機制，為 DOM Tree 的元素分配屬性（依照樣式計算的規則進行分配）</li>
<li>各屬性的計算部分取決於適用於目標媒體類型的格式化算法。例如，如果目標媒體是屏幕，使用者代理將應用<a href="https://www.w3.org/TR/CSS21/visuren.html" target="_blank" rel="noreferrer">視覺格式化模型</a></li>
<li>將格式化結構轉移到目標媒體（例如打印結果、在屏幕上顯示、轉為語音等），於是我們可以看見頁面內容。</li>
</ol>
<blockquote>
<p>DOM Tree 會生成 格式化結構[ formatting structure ]，格式化結構不一定為樹狀結構，且包含更多或更少的內容（因為之前提過的display屬性，可能會關閉某部分的結構生成），List 可以在格式化結構中生成更多資訊：列表元素的內容和列表樣式資訊 等等</p>
</blockquote>
<p>接下來介紹一些常見的屬性描述:</p>
<h3 id="canvas" tabindex="-1">Canvas <a class="header-anchor" href="#canvas" aria-label="Permalink to &quot;Canvas&quot;">&ZeroWidthSpace;</a></h3>
<p>&quot;canvas&quot;一詞描述了&quot;格式化結構被渲染的空間&quot;。每個空間維度的canvas是無限的，但渲染通常發生在canvas的有限區域內，該區域由使用者代理(<strong>註1</strong>)根據目標媒體來設置。</p>
<h3 id="css-box-model" tabindex="-1"><a href="https://www.w3.org/TR/CSS2/box.html" target="_blank" rel="noreferrer">CSS Box Model</a> <a class="header-anchor" href="#css-box-model" aria-label="Permalink to &quot;[CSS Box Model](https://www.w3.org/TR/CSS2/box.html)&quot;">&ZeroWidthSpace;</a></h3>
<p>描述為 Dom 樹中的元素生成並根據視覺格式化模型進行佈局的矩形框。</p>
<p><a href="https://www.w3.org/TR/CSS2/sample.html" target="_blank" rel="noreferrer">HTML 4 各屬性的 Default</a></p>
<p><img src="/assets/images/browser/box-model.png" alt="box-model" data-fancybox="gallery"></p>
<blockquote>
<p>每個盒子都有一個內容區域以及可選的周圍填充、邊框和邊距區域。所有元素都有一個“display”屬性，該屬性確定將生成的框的類型。</p>
</blockquote>
<h3 id="positioning-scheme" tabindex="-1"><strong>Positioning scheme</strong> <a class="header-anchor" href="#positioning-scheme" aria-label="Permalink to &quot;**Positioning scheme**&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>正常( normal )：對像根據其在文檔中的位置進行定位。這意味著它在渲染樹中的位置就像它在 DOM 樹中的位置一樣，並根據其盒子類型和尺寸進行佈局</li>
<li>浮動( float )：對象首先像正常流一樣佈局，然後儘可能向左或向右移動</li>
<li>絕對( absolute )：對象放置在渲染樹中與 DOM 樹中不同的位置</li>
</ol>
<h3 id="box-types-positioning-以下略" tabindex="-1"><strong>Box types Positioning  (以下略)</strong> <a class="header-anchor" href="#box-types-positioning-以下略" aria-label="Permalink to &quot;**Box types Positioning  (以下略)**&quot;">&ZeroWidthSpace;</a></h3>
<h3 id="分層表示-layered-representation" tabindex="-1"><strong>分層表示 (Layered representation)</strong> <a class="header-anchor" href="#分層表示-layered-representation" aria-label="Permalink to &quot;**分層表示 (Layered representation)**&quot;">&ZeroWidthSpace;</a></h3>
<p><strong><code>z-index</code></strong> 是 CSS 屬性，用來指定元素在堆疊上下文中的顯示順序，即在堆疊的第三維度，也稱為&quot;z軸&quot;。這個屬性影響元素在疊加時的顯示順序。</p>
<p>元素被分成多個堆疊（稱為堆疊上下文）<strong>註2</strong>。</p>
<blockquote>
<p>在每個堆疊中，位於後方的元素會先被繪製，而位於前方、靠近使用者的元素會繪製在頂部。如果元素之間有重疊，前面的元素會遮擋住後面的元素。</p>
</blockquote>
<h2 id="🀃-結論" tabindex="-1">🀃 結論 <a class="header-anchor" href="#🀃-結論" aria-label="Permalink to &quot;🀃 結論&quot;">&ZeroWidthSpace;</a></h2>
<p>瀏覽器是一個複雜的軟體系統，它負責將網頁上的 HTML、CSS 和 JavaScript 代碼轉換為可供使用者理解的內容。瀏覽器的工作原理可以總結為以下幾點：</p>
<ol>
<li>繪製順序：瀏覽器會按照 HTML 和 CSS 的規則進行網頁的繪製，從上到下、從左到右進行佈局和渲染。在繪製過程中，瀏覽器會考慮到元素的層級、大小、位置、邊框、填充等因素，以確保網頁的外觀和布局符合設計要求。</li>
<li>動態變化：渲染引擎會在響應網頁變化時進行最小可能的動作，例如更改元素的顏色只會重新繪製該元素本身。這樣可以最大限度地減少繪製的開銷，提高網頁的性能和響應速度。</li>
<li>渲染引擎的線程：渲染引擎是單線程的，除了網絡操作外，幾乎所有操作都在單一線程中進行。這意味著瀏覽器可以更好地控制繪製的過程，減少不必要的繪製和響應延遲。</li>
<li>事件循環：事件循環是一個無限循環，使進程保持活動狀態。它等待事件並處理它們。事件循環是瀏覽器中一個非常重要的機制，它負責處理用戶交互、動畫、計時器等等各種事件，保證網頁的正常運作。</li>
<li>合成：當文檔的不同部分被繪製在不同的層中，必須使用合成來確保它們以正確的順序顯示在屏幕上。合成是瀏覽器中一個非常複雜的過程，它涉及到多個層的合併、位移和透明度等計算，以確保網頁的呈現效果符合預期。</li>
<li>視覺顯示：瀏覽器會解析 HTML，創建 DOM Tree，確定媒體類型，取回並分配樣式，最終將格式化結構轉移到目標媒體，呈現頁面內容。在這個過程中，瀏覽器會考慮到許多因素，例如屏幕大小、解析度、顯示模式、字體大小等等，以確保網頁的內容和佈局符合使用者的期望。</li>
</ol>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>🔑 除此之外，本文還介紹了一些相關的名詞，包括使用者代理、堆疊上下文和上下文無關語法等。這些名詞對理解瀏覽器的工作原理和優化網頁性能都非常重要。</p>
<p>總而言之，瀏覽器是一個非常複雜的系統，它從不同的角度解析和繪製網頁上的HTML、CSS和JavaScript代碼，最終呈現給使用者的是一個具有良好外觀和性能的網頁。</p>
<p>了解瀏覽器的工作原理和相關名詞，可以幫助我們更好地開發和優化網頁，提高使用者體驗。</p>
</div>
<h2 id="🀅-名詞補充" tabindex="-1">🀅 名詞補充 <a class="header-anchor" href="#🀅-名詞補充" aria-label="Permalink to &quot;🀅 名詞補充&quot;">&ZeroWidthSpace;</a></h2>
<p><code>使用者代理(User Agent)</code>:是指在網際網路環境下，代表使用者與網站或網絡服務進行交互的軟體應用程式或程式碼。它是一種能夠向伺服器發出請求並解析響應的客戶端。瀏覽器是最常見的使用者代理，但其他應用程式或程式碼，如網絡爬蟲、機器人和自動化腳本等，也可以充當使用者代理。</p>
<p>使用者代理負責處理和呈現網站的內容，將網站的HTML、CSS和JavaScript等資源解析並呈現給使用者。它還在每次發出網頁請求時，向伺服器傳遞關於使用者代理自身的信息，例如使用的瀏覽器類型、版本、作業系統等，這些信息通常被用來優化網站的呈現和提供更好的使用者體驗。</p>
<p>使用者代理在網際網路中起著重要的角色，因為它使得使用者能夠以友好的方式與網站和網絡服務進行互動，同時也能夠提供有關使用者訊息的重要資料，幫助網站優化其內容和功能。</p>
<p><code>堆疊上下文( stacking contexts )</code>:指一種處理元素疊加顯示的機制。當元素發生重疊時，它們的顯示順序是由堆疊上下文來決定的，而不僅僅是它們在 DOM 中的位置或文檔流的順序。</p>
<p><code>上下文無關語法（Context-Free Grammar）</code>:是一種形式文法，用於描述自然語言或程式語言的結構。它是一種無記憶的文法，意味著每個規則的應用都獨立於其他規則的應用，不依賴於詞彙或句子的上下文。</p>
<p><code>BNF</code>:（Backus-Naur Form）是一種用於描述程式語言語法的符號表示法。</p>
<p><code>移位歸約解析器（Shift-Reduce Parser）</code>:是一種用於語法分析（Parsing）的技術，通常用於解析編程語言、標記語言等的語法結構。它是一種自頂向下的語法分析方法，用於將輸入的序列（如代碼或文本）轉換為語法樹（Parse Tree）或抽象語法樹（Abstract Syntax Tree）。</p>
<p><code>深度優先遍歷（Depth-First Traversal）</code>：一種常見的遍歷方式，它從根節點開始，依次遍歷每個節點的子節點，直到達到樹的最深處，然後返回並繼續遍歷其他分支。</p>
<h3 id="來源" tabindex="-1">來源 <a class="header-anchor" href="#來源" aria-label="Permalink to &quot;來源&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/Performance/How_browsers_work" target="_blank" rel="noreferrer">Populating the page: how browsers work - Web performance | MDN</a></p>
<p><a href="https://juejin.cn/post/6844903587525427214" target="_blank" rel="noreferrer">浏览器渲染引擎 - 掘金</a></p>
<p><a href="https://web.dev/howbrowserswork/" target="_blank" rel="noreferrer">howbrowserswork</a></p>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[React-007 自定義鉤子 useHooks]]></title>
            <link>https://www.aaron-shih.com/frontend/react/react-007</link>
            <guid>https://www.aaron-shih.com/frontend/react/react-007</guid>
            <pubDate>Thu, 03 Aug 2023 21:40:00 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="學習-react-框架-007-自定義鉤子-usehooks" tabindex="-1">學習 React 框架 - 007 自定義鉤子 useHooks <a class="header-anchor" href="#學習-react-框架-007-自定義鉤子-usehooks" aria-label="Permalink to &quot;學習 React 框架 - 007 自定義鉤子 useHooks&quot;">&ZeroWidthSpace;</a></h1>
<p>React 實作了許多可以以依賴驅動的 Hooks 函式，在不同的需求及邊界處理上，我們能搭配之前所學的 Hooks 做一些妥善的處理，
接下來就是最有趣的自己動手封裝了，React　所提供的 Hooks 就像工具箱，現在就由我們來動手封裝並日常開發好用的 useHooks 吧~</p>
<h2 id="封裝自己的-hooks-有何好處" tabindex="-1">封裝自己的 Hooks 有何好處? <a class="header-anchor" href="#封裝自己的-hooks-有何好處" aria-label="Permalink to &quot;封裝自己的 Hooks 有何好處?&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li><strong>重用性 ( Reusability )</strong> ： 封裝 Hooks 讓邏輯和狀態切割開，在不同的組件中重用。可以大幅減少重複的程式碼，提高維護性。</li>
<li><strong>組織性 ( Organization)</strong>： Hooks 可以更好地組織程式碼，將相關邏輯放在一起，使代碼更清晰、更易理解。</li>
<li><strong>邏輯解耦 ( Decoupling Logic)</strong>： Hooks 可以將邏輯與組件的實現解耦。可以專注在開發邏輯的細節上與 UI 解藕。</li>
<li><strong>測試性 ( Testability )</strong> ： 透過封裝 Hooks，更容易地進行單元測試，只需針對抽出的邏輯做測試，而不用擔心觸發頁面的 sideEffect。</li>
<li><strong>避免命名衝突 ( Avoiding Naming Conflicts )</strong> ： Hooks 可避免在組件之間出現命名衝突，因為程式碼本身只存在各自的區塊之中。</li>
<li><strong>代碼重構 ( Code Refactoring)</strong>: 有了 Hooks 針對某一部分的程式碼重構，相較之前容易許多，也不用擔層層相疊的邏輯本身。</li>
<li><strong>共享( Sharing )</strong>: 當我們封裝出一個好用的自定義函式後，我們可以分享到社群，分享供其他人使用，相對地我們也能坐享齊人之福~</li>
</ol>
<h2 id="要注意甚麼" tabindex="-1">要注意甚麼? <a class="header-anchor" href="#要注意甚麼" aria-label="Permalink to &quot;要注意甚麼?&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>自定義 Hook 允許您共享狀態邏輯，但不能共享狀態本身。對 Hook 的每次調用完全獨立於對同一 Hook 的所有其他調用。
<ul>
<li>也就是說要小心共用記憶體位址的問題，不要把原先的資料給改壞了。</li>
</ul>
</li>
<li>邏輯以及輸出的一致性，在 React Hooks 中，我們可以輕易地發現，絕大多數的 Hooks 的使用方式是相同的，有關測的依賴及固定的返回值，我們的自定義 Hooks 也應該是如此的，擁有一致性及清晰的命名，不會對使用者本身造成過多的記憶及使用負擔。</li>
<li>不要甚麼邏輯都進行封裝，要知道封裝是有代價的，要知道必須做才做，而不是<code>手上拿著鐵鎚就看甚麼都是釘子</code>。
<ul>
<li>任何操作都是有其代價的</li>
</ul>
</li>
<li>每次組件重新渲染時，所有 Hooks 都將重新執行。</li>
<li>自定義 Hooks 的代碼應該是純粹的，一個封裝只專注在一個邏輯上，不要將 sideEffect 給搞混了。</li>
</ol>
<div class="danger custom-block"><p class="custom-block-title">DANGER</p>
<p>永遠都要用 use 當開頭，這是一個約定俗成的方式，讓我們看到函式名稱就能馬上知道這個是封裝的 Hooks。</p>
</div>
<h2 id="實際場景" tabindex="-1">實際場景 <a class="header-anchor" href="#實際場景" aria-label="Permalink to &quot;實際場景&quot;">&ZeroWidthSpace;</a></h2>
<details>
<summary> useDebounce 封裝節流閥 </summary>
<div class="language-javaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useDebounce</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> delay</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">debouncedValue</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> setDebouncedValue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> React</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">useState</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  React</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">useEffect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> handler</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> setTimeout</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">      setDebouncedValue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> delay</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">      clearTimeout</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">handler</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> delay</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> debouncedValue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></details>
<details>
<summary> useFetch 封裝 get Api </summary>
<div class="language-javaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useFetch</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">method</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "POST"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> url</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> propsData</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> setData</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useState</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  useEffect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> res</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> await</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> fetch</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      cache</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "no-cache"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // *default, no-cache, reload, force-cache, only-if-cached</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      headers</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">        "user-agent"</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Mozilla/4.0 MDN Example"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">        "content-type"</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "application/json"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      method</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // *GET, POST, PUT, DELETE, etc.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> resData</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> await</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> res</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">json</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    setData</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">resData</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> setData</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">method</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> url</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> data</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">};</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></details>
<h2 id="參考資料" tabindex="-1">參考資料 <a class="header-anchor" href="#參考資料" aria-label="Permalink to &quot;參考資料&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://usehooks.com/" target="_blank" rel="noreferrer">useHooks</a></li>
<li><a href="https://github.com/streamich/react-use" target="_blank" rel="noreferrer">React-use</a></li>
<li><a href="https://react.dev/reference/react/forwardRef" target="_blank" rel="noreferrer">forwardRef</a></li>
<li><a href="https://react.dev/learn/reusing-logic-with-custom-hooks" target="_blank" rel="noreferrer">custom-hooks</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[React-006 進階鉤子與渲染控制]]></title>
            <link>https://www.aaron-shih.com/frontend/react/react-006</link>
            <guid>https://www.aaron-shih.com/frontend/react/react-006</guid>
            <pubDate>Sat, 01 Jul 2023 21:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="學習-react-框架-006-進階鉤子與渲染控制" tabindex="-1">學習 React 框架 - 006 進階鉤子與渲染控制 <a class="header-anchor" href="#學習-react-框架-006-進階鉤子與渲染控制" aria-label="Permalink to &quot;學習 React 框架 - 006 進階鉤子與渲染控制&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="本頁前言" tabindex="-1">本頁前言 <a class="header-anchor" href="#本頁前言" aria-label="Permalink to &quot;本頁前言&quot;">&ZeroWidthSpace;</a></h2>
<p>在前篇的基礎操作中，了解 React 的操作模型，每次的更新中，React 會觀測依賴屬性的差異及變動，若有差異則重新 Rerender，單向且直觀的操作模式。
單靠 useState 及 useEffect ，其實就能做出簡易的應用，但開發需求往往更為複雜且有條件性，不能只單單因依賴變動就馬上渲染組件，我們需有時間性、操作性、整體性的規劃，而 React 也提出了更進階的控制函式，讓開發者做出更豐富及細膩的操作。</p>
<h2 id="advanced-hooks" tabindex="-1">Advanced Hooks <a class="header-anchor" href="#advanced-hooks" aria-label="Permalink to &quot;Advanced Hooks&quot;">&ZeroWidthSpace;</a></h2>
<h2 id="usereducer" tabindex="-1">useReducer <a class="header-anchor" href="#usereducer" aria-label="Permalink to &quot;useReducer&quot;">&ZeroWidthSpace;</a></h2>
<p>相較於 useState 更易於操作複雜的物件結構，且可依照條件更新狀態。</p>
<div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">state</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> dispatch</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useReducer</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">reducer</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> initialArg</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> init</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul>
<li>
<p>reducer ：reducer 函數，指定狀態如何更新。它必須是純粹的，應該以狀態和操作作為參數，並且應返回下一個狀態。狀態和動作可以是任何類型。</p>
</li>
<li>
<p>initialArg ：計算初始狀態的值。它可以是任何類型的值。如何根據它計算初始狀態取決於下一個 init 參數。</p>
</li>
<li>
<p>optional init : 應返回初始狀態的初始化函數。如果未指定，則初始狀態設置為 initialArg 。否則，初始狀態將設置為調用 init(initialArg) 的結果。可避免重新創建初始狀態，即 lazy initialization 惰性初始化。</p>
</li>
<li>
<p>state : 目前的狀態</p>
</li>
<li>
<p>dispatch : 函數可將狀態更新為不同的值<strong>並觸發重新渲染</strong>。</p>
</li>
</ul>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>在嚴格模式下，React 將調用reducer和初始化兩次，以幫助您發現意外的雜質。這只是開發行為，不會影響生產。</p>
</div>
<details>
<summary>在pokemon範例中使用的useReducer</summary>
<div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> actionTypes</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  init</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'init'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  pending</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'pending'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  resolved</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'resolved'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  reset</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'reset'</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> usePokemonReducer</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">state</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> action</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  switch</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">action</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    case</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> actionTypes</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">init</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: { </span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">        pokemonList</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> []</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">        allPokemonNumber</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> action</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">allPokemonNumber</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">        maxPageNum</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> action</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">maxPageNum</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">        status</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> ''</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    case</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> actionTypes</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">pending</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: { </span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">        ...</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">state</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">        status</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> action</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">status</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    case</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> actionTypes</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">resolved</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">        ...</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">state</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">        status</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> action</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">status</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">        pokemonList</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">          action</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">pageNum</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            ?</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> action</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">pokemonList</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            :</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">state</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">pokemonList</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> ...</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">action</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">pokemonList</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    case</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> actionTypes</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">reset</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">pokemonList</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> []</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> allPokemonNumber</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> maxPageNum</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> ''</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    default</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      throw</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`Unsupported type: </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">action</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//如果您的狀態意外變為 undefined ，則您可能在其中一種情況下忘記了 return 狀態</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">state</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> dispatch</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> React</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">useReducer</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">usePokemonReducer</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  pokemonList</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> []</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  allPokemonNumber</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  maxPageNum</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  status</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> ''</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">})</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div></details>
<p>將其分為 actionType 、 reducer 封裝，讓我們可以去執行更複雜的物件操作，且透過 IDE 的提示能夠快速地找到相對應的操作方法。
須注意官網中多次提到需提供<a href="https://react.dev/learn/keeping-components-pure" target="_blank" rel="noreferrer">純粹的操作</a>，以避免副作用造成非預期的組件變更及渲染。</p>
<h2 id="usecallback" tabindex="-1">useCallback <a class="header-anchor" href="#usecallback" aria-label="Permalink to &quot;useCallback&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>優化函式回調，但使用上是否有必要仍需自我判斷，可能會沒優化到反而變更慢QQ</p>
</blockquote>
<div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> cachedFn</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useCallback</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">fn</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> dependencies</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>第一個參數是緩存的函數值，第二個參數為一個依賴數組，類似於 <code>useEffect</code> 。
當一個依賴項在渲染之間發生變化時，在第一個參數中傳遞的回調將是從 <code>useCallback</code> 返回的回調。如果它們沒有改變，將獲得上一次返回的回調（因此回調在渲染之間保持相同）。
透過 useCallback 可以記住 function 的記憶體位置，就可以避免 React.memo 在比較 props 值時因為<strong>物件型別記憶體位置不同但值相同</strong>而重新渲染的狀況。</p>
<p>但因此Hook使用了緩存的模式，若非有特定必要，否則會增加記憶體的負擔。</p>
<details>
<summary>在官網中提到的優化案例</summary>
<div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> ChatRoom</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">roomId</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> }) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">message</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> setMessage</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useState</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">''</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> createOptions</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useCallback</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      serverUrl</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'https://localhost:1234'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      roomId</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> roomId</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">roomId</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// ✅ Only changes when roomId changes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  useEffect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> options</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> createOptions</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> connection</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> createConnection</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    connection</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">connect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> connection</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">disconnect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">createOptions</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// ✅ Only changes when createOptions changes</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>透過這樣的組合調用，我們可以做出更細微的依賴操作，避免每次的re-render。</p>
</details>
<h2 id="usecontext" tabindex="-1">useContext <a class="header-anchor" href="#usecontext" aria-label="Permalink to &quot;useContext&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>這個Hook十分有趣，透過函式封裝自己的上下文環境，更簡單的說，React提供了一個全域的狀態傳遞方式。在應用層級複雜且巢狀時，能有效的傳遞狀態。</p>
</blockquote>
<div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">useContext</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'react'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> value</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useContext</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">SomeContext</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> MyPage</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ThemeContext.Provider</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"dark"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Button</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> /></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;/</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ThemeContext.Provider</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  );</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Button</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> theme</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useContext</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">ThemeContext</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//可以取到dark</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> className</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'button-'</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> theme</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> className</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">className</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      Hello</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  );</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ul>
<li>SomeContext：使用 createContext 創建的上下文。上下文本身不保存信息，它僅表示您可以提供或從組件中讀取的信息類型</li>
<li>value: useContext 返回調用組件的上下文值。它被確定為傳遞給樹中調用組件上方最近的 SomeContext.Provider 的值。</li>
</ul>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<p>React 會自動重新渲染所有使用特定上下文的子級，從接收不同 value 的提供者開始。前一個值和後一個值通過 Object.is 進行比較。使用 memo 跳過重新渲染不會阻止子級接收新的上下文值。</p>
</div>
<details>
<summary>在官網中提到的優化案例</summary>
<div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">useCallback</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> useMemo</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'react'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> MyApp</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">currentUser</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> setCurrentUser</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useState</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> login</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useCallback</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    storeCredentials</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">credentials</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    setCurrentUser</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">response</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">user</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> []);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> contextValue</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useMemo</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ({</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    currentUser</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    login</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  })</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">currentUser</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> login</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">AuthContext.Provider</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">contextValue</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Page</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> /></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;/</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">AuthContext.Provider</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  );</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></details>
<details>
<summary> useContext 可與 useReducer 搭配成一個註冊在巢狀組件中的狀態管理方式</summary>
<div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> PokemonContext</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> React</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createContext</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">PokemonContext</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">displayName</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'PokemonContext'</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //在devtools上可以看到明確命名</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// app inject the provider</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> PokemonProvider</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ({ </span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">children</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> }) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">state</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> dispatch</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> React</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">useReducer</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">usePokemonReducer</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    pokemonList</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> []</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    allPokemonNumber</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    maxPageNum</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    status</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> ''</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  })</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> value</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">state</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> dispatch</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">PokemonContext.Provider</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">children</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;/</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">PokemonContext.Provider</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  )</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> usePokemonContext</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> context</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> React</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">useContext</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">PokemonContext</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">context</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> undefined</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    throw</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">` usePokemon must be used within a PokemonProvider`</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> context</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> App</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">PokemonProvider</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">> //在此之下的所有組件都可以方便的拿到 context 中的 reducer</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Pokemon</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>&#x3C;/</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Pokemon</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ScrollDirection</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>&#x3C;/</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ScrollDirection</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;/</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">PokemonProvider</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  )</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> App</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div></details>
<h2 id="uselayouteffect" tabindex="-1">useLayoutEffect <a class="header-anchor" href="#uselayouteffect" aria-label="Permalink to &quot;useLayoutEffect&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>useLayoutEffect 是 useEffect 的一個版本，<strong>在瀏覽器重新繪製屏幕之前觸發</strong>。當開發需求中有需要一開始時拿到某些資料或狀態，就可以使用。</p>
</blockquote>
<ul>
<li>before any other effects are called.</li>
<li>if the side effect that you are performing makes an observable change to the dom, that will require the browser to paint the update that you made.</li>
</ul>
<div class="danger custom-block"><p class="custom-block-title">DANGER</p>
<p>僅在客戶端上運行。它們在服務器渲染期間不會運行。useLayoutEffect中的代碼以及從中安排的所有狀態更新都會阻止瀏覽器重新繪製屏幕。當過度使用時，這會讓應用程序變慢QQ</p>
</div>
<h2 id="usememo" tabindex="-1">usememo <a class="header-anchor" href="#usememo" aria-label="Permalink to &quot;usememo&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>可在重新渲染之間緩存計算結果。</p>
</blockquote>
<div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> cachedValue</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useMemo</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">calculateValue</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> dependencies</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">範例</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> allItems</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> React</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">useMemo</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> getItems</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">inputValue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">inputValue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">])</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul>
<li>calculateValue ：計算要緩存的值的函數。應該是純粹的，<strong>不應有任何入參，並且應有返回值(任意類型)</strong>。 React 將在初始渲染期間調用此函數。在下一次渲染時，如果 dependencies 自上次渲染以來沒有更改，React 將再次返回相同的值。否則，它將調用 calculateValue ，返回其結果並存儲它以便以後可以重用。</li>
<li>dependencies ： calculateValue 代碼內部引用的所有反應值的列表。反應性值包括 props、state 以及直接在組件體內聲明的所有變量和函數。</li>
</ul>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<p>僅依賴 useMemo 作為性能優化。不要廣泛地使用他。<br>雖然與 useCallback 很像，但使用上仍有些<a href="https://react.dev/reference/react/useMemo#memoizing-a-function" target="_blank" rel="noreferrer">情境上的差別</a>。</p>
</div>
<h2 id="參考資料" tabindex="-1">參考資料 <a class="header-anchor" href="#參考資料" aria-label="Permalink to &quot;參考資料&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://react.dev/reference/react/useReducer" target="_blank" rel="noreferrer">useReducer</a></li>
<li><a href="https://react.dev/reference/react/useCallback" target="_blank" rel="noreferrer">useCallback</a></li>
<li><a href="https://react.dev/reference/react/useContext" target="_blank" rel="noreferrer">useContext</a></li>
<li><a href="https://react.dev/reference/react/useLayoutEffect" target="_blank" rel="noreferrer">useLayoutEffect</a></li>
<li><a href="https://kentcdodds.com/blog/should-i-usestate-or-usereducer" target="_blank" rel="noreferrer">should-i-usestate-or-usereducer</a></li>
<li><a href="https://kentcdodds.com/blog/usememo-and-usecallback" target="_blank" rel="noreferrer">usememo-and-usecallback</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[React-005 函式鉤子與狀態驅動]]></title>
            <link>https://www.aaron-shih.com/frontend/react/react-005</link>
            <guid>https://www.aaron-shih.com/frontend/react/react-005</guid>
            <pubDate>Sat, 10 Jun 2023 17:35:00 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="學習-react-框架-005-函式鉤子與狀態驅動" tabindex="-1">學習 React 框架 - 005 函式鉤子與狀態驅動 <a class="header-anchor" href="#學習-react-框架-005-函式鉤子與狀態驅動" aria-label="Permalink to &quot;學習 React 框架 - 005 函式鉤子與狀態驅動&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="react為何要實作hooks" tabindex="-1">React為何要實作<a href="https://react.dev/reference/react" target="_blank" rel="noreferrer">Hooks</a>? <a class="header-anchor" href="#react為何要實作hooks" aria-label="Permalink to &quot;React為何要實作[Hooks](https://react.dev/reference/react)?&quot;">&ZeroWidthSpace;</a></h2>
<p>React Hooks 是在版本 16.8.0 中引入的。它們與類組件生命週期事件完全不同。
簡單來說，在日益複雜的開發需求的提出下,我們需要觀測某些依賴值的變動，在不同的時間點上，在瀏覽器上顯示這個變動.驅動副作用、管理副作用、副作用最佳化等等...
Hooks即是這些方式的實現。</p>
<p>根據Hooks的功能不同，所能做到的事務也大不相同。
接下來，會依照基礎即進階Hooks分享與探討~</p>
<h2 id="basic-hooks" tabindex="-1">Basic Hooks <a class="header-anchor" href="#basic-hooks" aria-label="Permalink to &quot;Basic Hooks&quot;">&ZeroWidthSpace;</a></h2>
<h2 id="usestate" tabindex="-1"><a href="https://react.dev/reference/react/useState" target="_blank" rel="noreferrer">useState</a> <a class="header-anchor" href="#usestate" aria-label="Permalink to &quot;[useState](https://react.dev/reference/react/useState)&quot;">&ZeroWidthSpace;</a></h2>
<p>狀態 讓組件<strong>記住</strong>用戶輸入等信息。組件可以使用狀態來存儲輸入值，或任何你想保存且依照你設定邏輯更改的變量。</p>
<h2 id="useeffect" tabindex="-1"><a href="https://react.dev/reference/react/useEffect" target="_blank" rel="noreferrer">useEffect</a> <a class="header-anchor" href="#useeffect" aria-label="Permalink to &quot;[useEffect](https://react.dev/reference/react/useEffect)&quot;">&ZeroWidthSpace;</a></h2>
<p>渲染及重新渲染時觸發的hook</p>
<ul>
<li>惰性初始化 <em>lazy state initial first frame evoked =&gt; computed extra expensive</em></li>
<li>只在必要時(觀測值變化時觸發) <em>shallow comparison attention with what you consent</em></li>
<li>可抽出變成客製化function</li>
</ul>
<h3 id="hooks-flow" tabindex="-1">hooks <a href="https://github.com/donavon/hook-flow/blob/master/hook-flow.pdf" target="_blank" rel="noreferrer">flow</a> <a class="header-anchor" href="#hooks-flow" aria-label="Permalink to &quot;hooks [flow](https://github.com/donavon/hook-flow/blob/master/hook-flow.pdf)&quot;">&ZeroWidthSpace;</a></h3>
<p>此流程圖簡述了Hooks在 mount、update、unmount 時的流程.</p>
<h3 id="codepen-模擬hooks掛載順序" tabindex="-1">codepen <a href="https://codepen.io/eepson123tw/pen/poxmxeQ?editors=1111" target="_blank" rel="noreferrer">模擬hooks掛載順序</a> <a class="header-anchor" href="#codepen-模擬hooks掛載順序" aria-label="Permalink to &quot;codepen [模擬hooks掛載順序](https://codepen.io/eepson123tw/pen/poxmxeQ?editors=1111)&quot;">&ZeroWidthSpace;</a></h3>
<p>依照上方的流程圖，我們可以清晰地區分</p>
<h3 id="當組件被掛載時" tabindex="-1">當組件被掛載時 <a class="header-anchor" href="#當組件被掛載時" aria-label="Permalink to &quot;當組件被掛載時&quot;">&ZeroWidthSpace;</a></h3>
<p>render start ⇒ lazy initiallizers ⇒ render end ⇒ LayoutEffects ⇒  dom update(Painting/User  see change) ⇒ some state change ⇒ render start⇒ render end⇒ layoutEffects run again ⇒ cleanLayout ⇒ dom update ⇒  cleanEffect⇒Run Effect</p>
<h3 id="當組件被卸載時" tabindex="-1">當組件被卸載時 <a class="header-anchor" href="#當組件被卸載時" aria-label="Permalink to &quot;當組件被卸載時&quot;">&ZeroWidthSpace;</a></h3>
<p>render start ⇒ render end ⇒ child component cleanup ⇒ parent component cleanup ⇒ parent component  run effect</p>
<ul>
<li>子組件觸發更新時，只會觸發子組件的flow</li>
</ul>
<p>注意若為子組件時，可能會覺得在父組件渲染完成時，子組件先行渲染，但並非如此，因為底層都是會直接調用react.createElement，react 會在父組件掛載完成時，才會依序渲染並執行子組件effect.</p>
<p>空陣列會⇒觀測所有⇒也即是告訴React目前並不取決於應用程序的狀態⇒指觸發render時的那一次</p>
<h3 id="需注意-lifting-state" tabindex="-1">需注意 lifting state <a class="header-anchor" href="#需注意-lifting-state" aria-label="Permalink to &quot;需注意 lifting state&quot;">&ZeroWidthSpace;</a></h3>
<p>將組件狀態提升至頂層，並由頂層下放更新函式到各組件管理</p>
<p>react state 盡量將state封裝在真正需要他的地方 co locate the state to where it needs to be.</p>
<h2 id="react實作-pokemon" tabindex="-1"><a href="https://pokemon.zeabur.app/" target="_blank" rel="noreferrer">React實作 Pokemon</a> <a class="header-anchor" href="#react實作-pokemon" aria-label="Permalink to &quot;[React實作 Pokemon](https://pokemon.zeabur.app/)&quot;">&ZeroWidthSpace;</a></h2>
<p>嘗試使用react basic hooks實作一個可以無限滾動 且 RWD 的 神奇寶貝卡片列表(原來神奇寶北這麼多隻了 = = )</p>
<h2 id="參考資料" tabindex="-1">參考資料 <a class="header-anchor" href="#參考資料" aria-label="Permalink to &quot;參考資料&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://kentcdodds.com/blog/use-state-lazy-initialization-and-function-updates" target="_blank" rel="noreferrer">useState lazy initialization and function updates</a></p>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[categories]]></title>
            <link>https://www.aaron-shih.com/categories</link>
            <guid>https://www.aaron-shih.com/categories</guid>
            <pubDate>Tue, 23 May 2023 22:13:30 GMT</pubDate>
            <content:encoded><![CDATA[<Categories/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[React-004 渲染切片與底層纖維]]></title>
            <link>https://www.aaron-shih.com/frontend/react/react-004</link>
            <guid>https://www.aaron-shih.com/frontend/react/react-004</guid>
            <pubDate>Tue, 16 May 2023 21:50:00 GMT</pubDate>
            <description><![CDATA[<h1 id="學習-react-框架-004-渲染切片與底層fiber" tabindex="-1">學習 React 框架 - 004 渲染切片與底層fiber <a class="header-anchor" href="#學習-react-框架-004-渲染切片與底層fiber" aria-label="Permalink to &quot;學習 React 框架 - 004 渲染切片與底層fiber&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="react怎麼render組件" tabindex="-1">React怎麼render組件? <a class="header-anchor" href="#react怎麼render組件" aria-label="Permalink to &quot;React怎麼render組件?&quot;">&ZeroWidthSpace;</a></h2>
<p>只要更改組件中的狀態，React都能立刻將變動顯示在UI上，在這幾天的學習下，我們理解React透過Render將組件渲染至頁面上，並透過觀測狀態更新重新渲染頁面。
但並不清楚React在渲染上為開發者做了那些優化，接下來，讓我們來淺嚐React在Render上付出的心力，以及Render被觸發後，React又透過哪些方法比對狀態間的差異以及其依據的底層實作為何?</p>
<h3 id="狀態快照" tabindex="-1">狀態快照 <a class="header-anchor" href="#狀態快照" aria-label="Permalink to &quot;狀態快照&quot;">&ZeroWidthSpace;</a></h3>
<p>React 會創建組件的快照，捕獲 React 在特定時刻更新視圖所需的一切。狀態、事件處理程序和 UI 的描述。</p>
<h3 id="react16-以前的渲染模式" tabindex="-1">React16 以前的渲染模式 <a class="header-anchor" href="#react16-以前的渲染模式" aria-label="Permalink to &quot;React16 以前的渲染模式&quot;">&ZeroWidthSpace;</a></h3>
<p>React16前更新需透過reconciler(判斷哪先元件需要更新，可中斷)調度後送到renderer，執行後會進行<strong>同步的渲染</strong>，當頁面複雜時，巢狀的組件結構下，若改一個值，需要等待較為長久的時間更新。<strong>而且更動父組件狀態，將會一起使得在其之下的子元件重新的渲染。</strong></p>
<h3 id="react16-之後的渲染模式" tabindex="-1">React16 之後的渲染模式 <a class="header-anchor" href="#react16-之後的渲染模式" aria-label="Permalink to &quot;React16 之後的渲染模式&quot;">&ZeroWidthSpace;</a></h3>
<p>透過fiber的結構，將同步渲染的方式更改為<strong>非同步渲染</strong>與任務片段技術，將各組件依virtual dom tree =&gt; fiber tree，實做出一個可以非同步更新的結構。使得渲染過程可以被中斷、暫停和恢復，從而更好地控制渲染的優先級，提高應用程式的響應性能，並避免等待渲染的時間以及JavaScript線程占用等待的問題。</p>
<h2 id="fiber" tabindex="-1"><a href="https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/react-reconciler/src/ReactFiber.js#L414" target="_blank" rel="noreferrer">Fiber</a> <a class="header-anchor" href="#fiber" aria-label="Permalink to &quot;[Fiber](https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/react-reconciler/src/ReactFiber.js#L414)&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.youtube.com/watch?v=0ympFIwQFJw&amp;t=5s&amp;ab_channel=PhilipFabianek" target="_blank" rel="noreferrer">Reference</a></p>
<p><img src="/assets/images/react/fiberInfo.png" alt="fiberInfo" data-fancybox="gallery"></p>
<details>
<summary>FiberNode包含的屬性</summary>
<p><a href="https://xiaochen1024.com/article_item/600aca0cecf02e002e6db56c" target="_blank" rel="noreferrer">取自</a></p>
<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> FiberNode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">  tag</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> WorkTag</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">  pendingProps</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> mixed</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">  key</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#ABB2BF"> null</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">  mode</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> TypeOfMode</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //保存节点的信息</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>]]></description>
            <content:encoded><![CDATA[<h1 id="學習-react-框架-004-渲染切片與底層fiber" tabindex="-1">學習 React 框架 - 004 渲染切片與底層fiber <a class="header-anchor" href="#學習-react-框架-004-渲染切片與底層fiber" aria-label="Permalink to &quot;學習 React 框架 - 004 渲染切片與底層fiber&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="react怎麼render組件" tabindex="-1">React怎麼render組件? <a class="header-anchor" href="#react怎麼render組件" aria-label="Permalink to &quot;React怎麼render組件?&quot;">&ZeroWidthSpace;</a></h2>
<p>只要更改組件中的狀態，React都能立刻將變動顯示在UI上，在這幾天的學習下，我們理解React透過Render將組件渲染至頁面上，並透過觀測狀態更新重新渲染頁面。
但並不清楚React在渲染上為開發者做了那些優化，接下來，讓我們來淺嚐React在Render上付出的心力，以及Render被觸發後，React又透過哪些方法比對狀態間的差異以及其依據的底層實作為何?</p>
<h3 id="狀態快照" tabindex="-1">狀態快照 <a class="header-anchor" href="#狀態快照" aria-label="Permalink to &quot;狀態快照&quot;">&ZeroWidthSpace;</a></h3>
<p>React 會創建組件的快照，捕獲 React 在特定時刻更新視圖所需的一切。狀態、事件處理程序和 UI 的描述。</p>
<h3 id="react16-以前的渲染模式" tabindex="-1">React16 以前的渲染模式 <a class="header-anchor" href="#react16-以前的渲染模式" aria-label="Permalink to &quot;React16 以前的渲染模式&quot;">&ZeroWidthSpace;</a></h3>
<p>React16前更新需透過reconciler(判斷哪先元件需要更新，可中斷)調度後送到renderer，執行後會進行<strong>同步的渲染</strong>，當頁面複雜時，巢狀的組件結構下，若改一個值，需要等待較為長久的時間更新。<strong>而且更動父組件狀態，將會一起使得在其之下的子元件重新的渲染。</strong></p>
<h3 id="react16-之後的渲染模式" tabindex="-1">React16 之後的渲染模式 <a class="header-anchor" href="#react16-之後的渲染模式" aria-label="Permalink to &quot;React16 之後的渲染模式&quot;">&ZeroWidthSpace;</a></h3>
<p>透過fiber的結構，將同步渲染的方式更改為<strong>非同步渲染</strong>與任務片段技術，將各組件依virtual dom tree =&gt; fiber tree，實做出一個可以非同步更新的結構。使得渲染過程可以被中斷、暫停和恢復，從而更好地控制渲染的優先級，提高應用程式的響應性能，並避免等待渲染的時間以及JavaScript線程占用等待的問題。</p>
<h2 id="fiber" tabindex="-1"><a href="https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/react-reconciler/src/ReactFiber.js#L414" target="_blank" rel="noreferrer">Fiber</a> <a class="header-anchor" href="#fiber" aria-label="Permalink to &quot;[Fiber](https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/react-reconciler/src/ReactFiber.js#L414)&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://www.youtube.com/watch?v=0ympFIwQFJw&amp;t=5s&amp;ab_channel=PhilipFabianek" target="_blank" rel="noreferrer">Reference</a></p>
<p><img src="/assets/images/react/fiberInfo.png" alt="fiberInfo" data-fancybox="gallery"></p>
<details>
<summary>FiberNode包含的屬性</summary>
<p><a href="https://xiaochen1024.com/article_item/600aca0cecf02e002e6db56c" target="_blank" rel="noreferrer">取自</a></p>
<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> FiberNode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">  tag</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> WorkTag</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">  pendingProps</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> mixed</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">  key</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#ABB2BF"> null</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">  mode</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> TypeOfMode</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //保存节点的信息---</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">tag</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> tag</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//对应组件的类型</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">key</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> key</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//key属性</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //(帶有一組孩子的唯一標識符，以幫助 React 確定哪些項目已更改，已添加或從列表中刪除。它與此處描述的 React 的“列表和鍵”功能有關。)</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">elementType</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//元素类型</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//func或者class</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">stateNode</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//真实dom节点</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //连接成fiber树---</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">return</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//指向父节点</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">child</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//指向child</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">sibling</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//指向兄弟节点</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">index</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">ref</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 用来计算state---</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">pendingProps</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> pendingProps</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 已從 React 元素中的新數據更新並需要應用於子組件或 DOM 元素的道具。</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">memoizedProps</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 在上一次渲染期間用於創建輸出的fiber的道具。</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">updateQueue</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 狀態更新、回調和 DOM 更新隊列。</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">memoizedState</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 用於創建輸出的fiber的狀態。在處理更新時，它會反映當前在頁面上呈現的狀態。</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">mode</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> mode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // effect相关---</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">effectTag</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> NoEffect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">nextEffect</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">firstEffect</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">lastEffect</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 优先级相关的属性---</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">lanes</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> NoLanes</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">childLanes</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> NoLanes</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // current和workInProgress的指针---</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">alternate</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div></details>
<p>可以視為一種數據結構，保存了組件節點的屬性、類型、dom，並透過指向 child、sibling、return来形成並連接Fiber樹，此數據結構將渲染過程劃分為可中斷的單元，以支持增量渲染和更好的使用者互動，區分元件樹的不同層級和渲染優先級。</p>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<p>在瀏覽器閒置時配合 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestIdleCallback" target="_blank" rel="noreferrer">requestIdleCallback API</a>的調用, 以實現任務拆分、中斷與恢復。</p>
</div>
<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> ClickCounter</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (){</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//... 以上略</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"1"</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> onClick</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">onClick</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>Update counter&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"2"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">state</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">count</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">> </span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>會轉換成</p>
<p><img src="/assets/images/react/fiber.png" alt="fiber" data-fancybox="gallery"></p>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<p>每個 React 元素都有一個對應的 fiber 節點。與 React 元素不同， fiber不會在每次渲染時重新創建。這些是可變數據結構，用於保存組件狀態和 DOM。</p>
</div>
<p>第一次渲染後，React 得到一個 fiber 樹，它反映了用於渲染 UI 的應用程序的狀態。這棵樹通常被稱為當前樹(Current Fiber tree)。</p>
<p>當 React 開始處理更新時，它會構建一個所謂的 workInProgress 樹，它反映了要刷新到頁面的未來狀態。</p>
<p>一旦處理完更新並完成所有相關工作，React 將準備好的 workInProgress樹以刷新到頁面上。一旦這棵 workInProgress 樹被渲染到頁面上，它就變成了 current 樹。</p>
<p>我們可以理解成React存放了二顆樹形的對照表，互相對照，已分析出那些結點及狀態需要變動，觸發重新渲染。也被稱為雙緩衝技術 (double buffering)。</p>
<div class="danger custom-block"><p class="custom-block-title">DANGER</p>
<p>React 總是一次性更新 DOM——它不會顯示部分結果。</p>
</div>
<p><img src="/assets/images/react/fiberTree.png" alt="fiberTree" data-fancybox="gallery"></p>
<h2 id="side-effects" tabindex="-1">Side-effects <a class="header-anchor" href="#side-effects" aria-label="Permalink to &quot;Side-effects&quot;">&ZeroWidthSpace;</a></h2>
<p>將 React 中的組件視為使用狀態和 props 來計算 UI 表示的函數。任何會觸發計算的函數，如改變 DOM 或調用生命週期方法，都應被視為副作用，或者簡稱為效果。</p>
<p>因此fiber節點是一種除了更新之外還可以跟踪side-effects的便捷機制。每個fiber節點都可以有與之關聯的effect。它們在 effectTag 屬性中被表明。</p>
<h2 id="effect-list" tabindex="-1">Effect List <a class="header-anchor" href="#effect-list" aria-label="Permalink to &quot;Effect List&quot;">&ZeroWidthSpace;</a></h2>
<p>在頁面組件的狀態發生更新時，需要紀錄那些組件在生命週期或函式中發生變動，觸發了副作用，而Effect List 則是使用一個可追溯的線性列表紀錄這些流程，
順序由子到父層(深層到淺層紀錄)去執行，由fiberNode中不同的標籤(firstEffect、lastEffect、nextEffect)標記Effect順序，最後傳遞到Root，建構出列表。</p>
<h2 id="render-and-commit-phases" tabindex="-1">Render and Commit Phases <a class="header-anchor" href="#render-and-commit-phases" aria-label="Permalink to &quot;Render and Commit Phases&quot;">&ZeroWidthSpace;</a></h2>
<p>React在兩個階段中執行 Virtual Dom 轉換 Fiber tree，及比對節點差異，執行副作用，最後顯示加載到頁面上等動作，分別為</p>
<ul>
<li>Render(可以異步執行，可中斷) =&gt; 主要是創建Fiber Tree和生成EffectList。</li>
</ul>
<blockquote>
<p>React 元素的中 fiber 絕大多數都會被重新使用和更新，而不是重新生成，已降低記憶體消耗。</p>
</blockquote>
<ul>
<li>Commit(同步執行，無法中斷) =&gt; 將Render生成的effectList遍歷，觀測effectList上的Fiber節點中保存着對應的props變化及狀態。最後<strong>進行Dom操作和生命周期的執行</strong>、執行hooks中的操作或銷毀未使用的函数。</li>
</ul>
<blockquote>
<p>此階段將單線程的執行，而使用者會看到畫面的變動，所以無法暫停。</p>
</blockquote>
<h2 id="work-loop" tabindex="-1">Work loop <a class="header-anchor" href="#work-loop" aria-label="Permalink to &quot;Work loop&quot;">&ZeroWidthSpace;</a></h2>
<p>所有fiber節點工作的查找都在工作循環(Work loop)中處理，nextUnitOfWork 擁有來自 workInProgress 樹的 fiber 節點的引用。
在這個while迴圈中，將會不斷的遞迴節點，尋找是否有未完成的工作。<strong>直到子節點開始的所有工作都完成後，才會完成父節點和回溯的工作。</strong></p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>completeUnitOfWork 和 completeUnitOfWork 主要用於迭代目的，而主要活動發生在 beginWork 和 completeWork 函數中。</p>
</div>
<p>實現：</p>
<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> workLoop</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">isYieldy</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">isYieldy</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Flush work without yielding</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">nextUnitOfWork</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      nextUnitOfWork</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> performUnitOfWork</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">nextUnitOfWork</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Flush asynchronous work until the deadline runs out of time.</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">nextUnitOfWork</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x26;&#x26;</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">shouldYield</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      nextUnitOfWork</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> performUnitOfWork</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">nextUnitOfWork</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> performUnitOfWork</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">workInProgress</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> beginWork</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">workInProgress</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">        next</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> completeUnitOfWork</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">workInProgress</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> beginWork</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">workInProgress</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'work performed for '</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> workInProgress</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> workInProgress</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">child</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> completeWork</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">workInProgress</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'work completed for '</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> workInProgress</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> completeUnitOfWork</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">workInProgress</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> returnFiber</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> workInProgress</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> siblingFiber</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> workInProgress</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">sibling</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">        nextUnitOfWork</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> completeWork</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">workInProgress</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">siblingFiber</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // If there is a sibling, return it</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // to perform work for this sibling</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> siblingFiber</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">returnFiber</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // If there's no more work in this returnFiber,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // continue the loop to complete the parent.</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">            workInProgress</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> returnFiber</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            continue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We've reached the root.</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><h2 id="參考資料" tabindex="-1">參考資料 <a class="header-anchor" href="#參考資料" aria-label="Permalink to &quot;參考資料&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://react.dev/learn/state-as-a-snapshot" target="_blank" rel="noreferrer">State as a Snapshot</a></li>
<li><a href="https://twitter.com/acdlite/status/977291318324948992" target="_blank" rel="noreferrer">async rendering and synchronous rendering</a></li>
<li><a href="https://xiaochen1024.com/article_item/600aca0cecf02e002e6db56c" target="_blank" rel="noreferrer">Fiber</a></li>
<li><a href="https://indepth.dev/posts/1008/inside-fiber-in-depth-overview-of-the-new-reconciliation-algorithm-in-react" target="_blank" rel="noreferrer">Inside Fiber: in-depth overview of the new reconciliation algorithm in React</a></li>
<li><a href="https://www.youtube.com/watch?v=ZCuYPiUIONs&amp;t=1040s&amp;ab_channel=MetaDevelopers" target="_blank" rel="noreferrer">A Cartoon Intro to Fiber</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[React-003 組件狀態與副作用更新]]></title>
            <link>https://www.aaron-shih.com/frontend/react/react-003</link>
            <guid>https://www.aaron-shih.com/frontend/react/react-003</guid>
            <pubDate>Sat, 06 May 2023 19:00:20 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="學習-react-框架-003-組件狀態與副作用更新" tabindex="-1">學習 React 框架 - 003 組件狀態與副作用更新 <a class="header-anchor" href="#學習-react-框架-003-組件狀態與副作用更新" aria-label="Permalink to &quot;學習 React 框架 - 003 組件狀態與副作用更新&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="狀態的抽象" tabindex="-1">狀態的抽象 <a class="header-anchor" href="#狀態的抽象" aria-label="Permalink to &quot;狀態的抽象&quot;">&ZeroWidthSpace;</a></h2>
<p>在實際的開發場景中,前端會接收到很多的資料,不論是頁面初始的預設資料,還是由後端傳遞而來的 api 資料,需要一個能保存的方法,
而狀態是一個 React 實作出來的函示.</p>
<p>根據 React 的基本概念理論一文中描述,UI 被 State (狀態)所影響變更出不同的樣態,更希望每個 UI 能保存自有的狀態,並透過我們設計好的函式,<strong>單向的更新狀態</strong>.</p>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-dnLWi" id="tab-5FIqg_I" checked="checked"><label for="tab-5FIqg_I">引用自基本概念</label></div><div class="blocks">
<div class="language-javascript vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/*將狀態的管理結合 UI 的邏輯抽象,就像是組件一樣,我們定義props進來的參數,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  並依照副作用函示更新,傳遞下來的狀態.</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  可以發現,抽象的組件中並沒有其餘觸發副作用的函式,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  也是為了保持資料狀態的不可變性,資料只能依照我們的設計,單向的變更.</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">*/</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> FancyNameBox</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">user</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> likes</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> onClick</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> FancyBox</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">([</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">    "Name: "</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    NameBox</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">user</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">firstName</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> " "</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> user</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">lastName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">    "Likes: "</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    LikeBox</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">likes</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    LikeButton</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">onClick</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  ]);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Implementation Details(設置狀態的初始值,及使狀態更新的副作用函式)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> likes</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> addOneMoreLike</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  likes</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  rerender</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//非常重要 當狀態更新時，我們需要觸發頁面的更新</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Init 資料狀態初始化</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">FancyNameBox</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">firstName</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Sebastian"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> lastName</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Markbåge"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  likes</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  addOneMoreLike</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div></div></div>
<h2 id="usestate" tabindex="-1">useState <a class="header-anchor" href="#usestate" aria-label="Permalink to &quot;useState&quot;">&ZeroWidthSpace;</a></h2>
<p>組件在 React 中只是一個函式的封裝,當函式被執行,記憶體中的指向就會被排出,我們希望狀態能依照頁面邏輯的使用,保存在我們的組件中,React 實作了一個能讓狀態持續存在的 hook（可以視為官方提供的工具函式）useState.<a href="https://codepen.io/eepson123tw/pen/NWOyNYP?editors=1010" target="_blank" rel="noreferrer">範例</a></p>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>從範例中我們可以觀察我們在組件中調用 useState,並設置初始值,依照我們定義的方式更改 state,並且 state 變更後,頁面 rerender 後發現狀態已被更新.</p>
</div>
<h2 id="usestate-內部的作用" tabindex="-1">useState 內部的作用 <a class="header-anchor" href="#usestate-內部的作用" aria-label="Permalink to &quot;useState 內部的作用&quot;">&ZeroWidthSpace;</a></h2>
<p>簡單來說 useState 幫我們做到了兩件事,</p>
<ul>
<li>1.讓原先會在 rerender 後不能保存的狀態值,繼續存在.</li>
<li>2.狀態更新後再次觸發了 rerender.</li>
</ul>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<p>useState 是一個封裝後的閉包空間,就是狀態抽象的實作.</p>
</div>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//簡易的抽象</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> useState</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">state</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> setState</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">action</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    action</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">state</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    React</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">root</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">reRender</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(&#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">App</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> />); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//rerender</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  };</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">state</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> setState</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">};</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>當每次調用 useState 時,我們都會從函式收到 state,及觸發的副作用函式,再來就是更新頁面.
此抽象只是非常簡單的一個描述,實際的實作更爲複雜,初始值的觀測,搭配節點的切片等等...<strong>真的是非常有趣 😇😇</strong></p>
<h2 id="狀態管理-array-object" tabindex="-1">狀態管理 Array Object <a class="header-anchor" href="#狀態管理-array-object" aria-label="Permalink to &quot;狀態管理 Array Object&quot;">&ZeroWidthSpace;</a></h2>
<div class="danger custom-block"><p class="custom-block-title">DANGER</p>
<p>React 狀態管理中,必須將任何型別的資料視為不可變的,不應直接改變在 React 狀態下的對象。相反，當你想更新一個對象(or 陣列)時，需要<strong>創建一個新對象（或複制一個現有對象</strong>），然後設置狀態使用該 copy.</p>
</div>
<p>將物件資料交由 state 管理時我們可以使用解構的方式去更動 state 狀態,<a href="https://codepen.io/eepson123tw/pen/NWOyNYP?editors=1011" target="_blank" rel="noreferrer">範例</a></p>
<p>而陣列資料的狀態管理,就如物件一般,我們不應去直接改變陣列中的值,而是需要創建或是回傳新對象.</p>
<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">setAry</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // Replace the state</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  [</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // with a new array</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">    ...</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">ary</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> nextId</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  ]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>另外再變更複雜的物件型態時,必須留意是否變更<strong>記憶體的共同指向</strong>,不然容易出現非預期的錯誤歐.</p>
<h2 id="重置狀態-with-key" tabindex="-1">重置狀態 with key <a class="header-anchor" href="#重置狀態-with-key" aria-label="Permalink to &quot;重置狀態 with key&quot;">&ZeroWidthSpace;</a></h2>
<p>Key 是一個辨明節點的屬性,常常使用在渲染列表時,可以讓 react 辨識節點的獨特性.
但在管理狀態時也可以透過 Key 來實現重置狀態.主要是利用 key 值改變則重新渲染的特性.</p>
<p><a href="https://codepen.io/eepson123tw/pen/NWOyNYP?editors=0011" target="_blank" rel="noreferrer">範例</a></p>
<h2 id="參考資料" tabindex="-1">參考資料 <a class="header-anchor" href="#參考資料" aria-label="Permalink to &quot;參考資料&quot;">&ZeroWidthSpace;</a></h2>
<p>若想了解為何狀態是不可變的,<a href="https://react.dev/learn/updating-objects-in-state#why-is-mutating-state-not-recommended-in-react" target="_blank" rel="noreferrer">可以前往</a></p>
<ul>
<li><a href="https://react.gg/visualized#history-of-the-web" target="_blank" rel="noreferrer">可視化的理解 React</a></li>
<li><a href="https://react.dev/" target="_blank" rel="noreferrer">React 官方文件</a></li>
<li><a href="https://github.com/reactjs/react-basic" target="_blank" rel="noreferrer">React Basic</a></li>
<li><a href="https://pomb.us/build-your-own-react/" target="_blank" rel="noreferrer">Build your own React</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[Algolia]]></title>
            <link>https://www.aaron-shih.com/frontend/agolia</link>
            <guid>https://www.aaron-shih.com/frontend/agolia</guid>
            <pubDate>Fri, 28 Apr 2023 23:45:03 GMT</pubDate>
            <content:encoded><![CDATA[<p>待施工</p>
<!-- https://ouch1978.github.io/docs/docusaurus/configuration/automatically-run-docsearch-scraper-from-github-action -->
<!-- https://github.com/signcl/docsearch-scraper-action -->
<!-- https://chodocs.cn/program/vitepress-algolia-solved/ -->
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[React-002 組件生成與傳參]]></title>
            <link>https://www.aaron-shih.com/frontend/react/react-002</link>
            <guid>https://www.aaron-shih.com/frontend/react/react-002</guid>
            <pubDate>Tue, 18 Apr 2023 23:31:13 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="學習react框架-002-day-組件生成與參數傳遞" tabindex="-1">學習React框架 - 002 Day 組件生成與參數傳遞 <a class="header-anchor" href="#學習react框架-002-day-組件生成與參數傳遞" aria-label="Permalink to &quot;學習React框架 - 002 Day 組件生成與參數傳遞&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="組件" tabindex="-1">組件 <a class="header-anchor" href="#組件" aria-label="Permalink to &quot;組件&quot;">&ZeroWidthSpace;</a></h2>
<p>組件這個詞彙，在前端以往的開發歷程中，通常以頁面區分，但不同的頁面上有相同的功能或顯示區塊時，我們可能會重複的寫著相同的程式碼，或是直接copy &amp; past.</p>
<blockquote>
<p>隨著框架思維的日益成熟，「組件」這個想法出現，在React Basic一文中，希望React具有可變性、抽象性、組合性、及狀態保持，以幫助開發者分攤日益複雜的需求及邏輯。</p>
</blockquote>
<p>希望有一個思維模型能包含這些概念，而在歷史中，Js的代碼遷移由傳統的OOP開發模型，轉換到了Fn的函式開發架構，React組件也經歷過這些過程，Version16以前由oop的模式為主，Version18後，受到了函式的洗禮，所以組件也的型態也簡化成了Fn的樣態。也就是前一天的範例，我們宣告了一個function，讓React透過編譯器babel生成我們想要的頁面區塊。</p>
<p>那React跟Babel又是透過那些方式將這些組件，注入到頁面上呢?</p>
<h2 id="組件組合及生成" tabindex="-1">組件組合及生成 <a class="header-anchor" href="#組件組合及生成" aria-label="Permalink to &quot;組件組合及生成&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-App.js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">App.js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span>function Profile() {</span></span>
<span class="line"><span>  return (</span></span>
<span class="line"><span>    &#x3C;img</span></span>
<span class="line"><span>      src="https://i.imgur.com/MK3eW3As.jpg"</span></span>
<span class="line"><span>      alt="Katherine Johnson"</span></span>
<span class="line"><span>    /></span></span>
<span class="line"><span>  );</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>export default function Gallery() {</span></span>
<span class="line"><span>  return (</span></span>
<span class="line"><span>    &#x3C;section></span></span>
<span class="line"><span>      &#x3C;h1>Amazing scientists&#x3C;/h1></span></span>
<span class="line"><span>      &#x3C;Profile /></span></span>
<span class="line"><span>      &#x3C;Profile /></span></span>
<span class="line"><span>      &#x3C;Profile /></span></span>
<span class="line"><span>    &#x3C;/section></span></span>
<span class="line"><span>  );</span></span>
<span class="line"><span>}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<p>組件的名稱必須以大寫字母開頭</p>
</div>
<p>可以看到我們定義了兩個函式組件，Gallery中又調用了Profile，來形成頁面架構。
React組件經<a href="https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&amp;build=&amp;builtIns=false&amp;corejs=3.21&amp;spec=false&amp;loose=false&amp;code_lz=GYVwdgxgLglg9mABABQE52DANgUwBQCUiA3gFCKKo5QipJ7kWIA8MAtgOaNOIDOqEALwAiABZQoAB14AuAPRyYAOnYdaSiHDZyAsgGkAzDgDqBgIK8lAK0kdh3JgEMsUEXsdRROVDDA5EAFJwomC8CPY8cgB8jAQA3KQAvqSkOAAeknCoUIgAJjjAjiAuiKCQsAiIAOLOuKgAnoQkjFQ0dIgMPMy8ONDwYDE8FMyiAIxRZmyOAF6-HHwQMDhgsLxQvMxyY4NDzGgY2P7RDsP7mLiIx0MsZ4eXO8NyPX0IO_FJQA&amp;debug=false&amp;forceAllTransforms=false&amp;modules=false&amp;shippedProposals=false&amp;circleciRepo=&amp;evaluate=false&amp;fileSize=false&amp;timeTravel=false&amp;sourceType=module&amp;lineWrap=false&amp;presets=env%2Creact%2Cstage-0%2Cflow&amp;prettier=true&amp;targets=&amp;version=7.21.4&amp;externalPlugins=&amp;assumptions=%7B%7D" target="_blank" rel="noreferrer">編譯</a>，最後會轉換成下方代碼注入到頁面上。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">section</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>Amazing scientists&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">img</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> src</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"https://i.imgur.com/MK3eW3As.jpg"</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> alt</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Katherine Johnson"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> /></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">img</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> src</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"https://i.imgur.com/MK3eW3As.jpg"</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> alt</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Katherine Johnson"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> /></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">img</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> src</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"https://i.imgur.com/MK3eW3As.jpg"</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> alt</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"Katherine Johnson"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> /></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">section</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="react-createelement" tabindex="-1">React.createElement <a class="header-anchor" href="#react-createelement" aria-label="Permalink to &quot;React.createElement&quot;">&ZeroWidthSpace;</a></h3>
<p>JSX組件在編譯的過程中透過createElement methods，創建出了<a href="https://codepen.io/eepson123tw/pen/XWxjXGj?editors=1111" target="_blank" rel="noreferrer"><strong>虛擬DOM</strong>抽象</a>。
簡單來說就是每個組件函式都是一層封裝，其實底層還是js的型態。我們會透過Render轉換成真正的Dom並注入<a href="/frontend/dom.html">DOM樹</a>中。</p>
<h3 id="react-render" tabindex="-1">React.Render <a class="header-anchor" href="#react-render" aria-label="Permalink to &quot;React.Render&quot;">&ZeroWidthSpace;</a></h3>
<p>用於將虛擬 DOM 渲染到實際的 DOM 上。</p>
<p>ReactDOM.render() 方法有兩個參數：</p>
<p>第一個參數是需要渲染的虛擬 DOM 元素。
第二個參數是一個 DOM 元素，表示要將虛擬 DOM 渲染到哪個容器中。
例如，以下代碼將一個包含文本「Hello, world!」的 h1 元素渲染到具有 id 屬性為 root 的 DOM 元素中：</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//element只是抽象結構</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> element</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  type</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "h1"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  props</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    title</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "foo"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    children</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Hello"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ReactDOM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">render</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">element</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getElementById</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"root"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">));</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>當代碼執行到 ReactDOM.render() 方法時，React 會將虛擬 DOM 轉換為實際的 DOM，並將其插入到 root 元素中。
參考<a href="https://codepen.io/eepson123tw/pen/XWxjXGj?editors=1111" target="_blank" rel="noreferrer">hello2</a></p>
<blockquote>
<p><strong>render簡化版本如下</strong></p>
</blockquote>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> render</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">element</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> container</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 我們將createElement 的 虛擬dom object結構傳下來,若為非文本結構就創造節點</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> dom</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "TEXT_ELEMENT"</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    ?</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createTextNode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">""</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    :</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 將虛擬dom屬性重現</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> isProperty</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> =></span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> key</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "children"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  Object</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">keys</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">props</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    .</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">filter</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">isProperty</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    .</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> =></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      dom</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">props</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 輸入點(root)創建出節點</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  container</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">appendChild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">dom</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //若還有虛擬DOM上還有下一層子結構，則遞迴的調用Render本身，達到層級渲染的DOM</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">props</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">children</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">props</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">children</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">child</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> =></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">      render</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">child</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> dom</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 再封裝一層抽象 將 root 隱式的封裝在 render中</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> ReactDOMRender</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">element</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> container</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> root</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    dom</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> container</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    children</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> []</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  };</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  render</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">element</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> container</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ReactDOM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">render</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> ReactDOMRender</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="虛擬dom" tabindex="-1">虛擬DOM <a class="header-anchor" href="#虛擬dom" aria-label="Permalink to &quot;虛擬DOM&quot;">&ZeroWidthSpace;</a></h3>
<p>虛擬 DOM（Virtual DOM）是一個程式概念，它將整個網頁以樹狀結構的物件表示，每個節點對應著網頁上的一個 DOM 元素。React 廣泛地使用虛擬 DOM，它可以快速計算出需要更新的部分，只更新這些部分，而不需要重新渲染整個頁面，從而提高性能和效率。</p>
<h2 id="參數傳遞-props" tabindex="-1">參數傳遞 Props <a class="header-anchor" href="#參數傳遞-props" aria-label="Permalink to &quot;參數傳遞 Props&quot;">&ZeroWidthSpace;</a></h2>
<p>就如我們可以傳遞參數進入函式一般，組件也接受參數傳遞至內部，但必須透過嚴謹的方式傳遞，每個父組件都可以通過 props 將一些信息傳遞給它的子組件。 Props 可傳遞任何 JavaScript 值，包括物件、數組和函數。</p>
<p><a href="https://codepen.io/eepson123tw/pen/JjmNPvR" target="_blank" rel="noreferrer">範例</a></p>
<p>範例中我們可以透過解構將傳遞的props物件中的屬性給全部解構出來。但必須注意這種使用方式，這會傳遞所有的值。</p>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<ul>
<li>Props.children 是一個特殊的屬性，並非我們定義的由父層傳遞下來的屬性，可視為具有可由其父組件填充的佔位符.</li>
<li>當組件需要更改其 props 時，必須傳遞新的值，因為必須維持不可變性!不要在組件中改變props，以免發生不可預期的錯誤!!</li>
</ul>
</div>
<h2 id="結論" tabindex="-1">結論 <a class="header-anchor" href="#結論" aria-label="Permalink to &quot;結論&quot;">&ZeroWidthSpace;</a></h2>
<p>我們理解了組件是如何生成，並且透過那些方法實現並渲染在頁面上，如何傳遞參數給下一層的組件，<strong>我們必須維持參數的不可變性</strong>，以免發生錯誤。
發現還有children屬性，可以更方便的建構出頁面，並且能使用解構的方式，將複雜的物件結構傳遞至下方組件，但必須清楚的明白為何使用，而不是單方面的為了偷懶...</p>
<h2 id="參考資料" tabindex="-1">參考資料 <a class="header-anchor" href="#參考資料" aria-label="Permalink to &quot;參考資料&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://react.gg/visualized#history-of-the-web" target="_blank" rel="noreferrer">可視化的理解React</a></li>
<li><a href="https://react.dev/" target="_blank" rel="noreferrer">React官方文件</a></li>
<li><a href="https://github.com/reactjs/react-basic" target="_blank" rel="noreferrer">React Basic</a></li>
<li><a href="https://pomb.us/build-your-own-react/" target="_blank" rel="noreferrer">Build your own React</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[React-001 啟程]]></title>
            <link>https://www.aaron-shih.com/frontend/react/react-001</link>
            <guid>https://www.aaron-shih.com/frontend/react/react-001</guid>
            <pubDate>Mon, 17 Apr 2023 22:54:13 GMT</pubDate>
            <description><![CDATA[<h1 id="學習react框架-001-day-啟程" tabindex="-1">學習React框架 - 001 Day 啟程 <a class="header-anchor" href="#學習react框架-001-day-啟程" aria-label="Permalink to &quot;學習React框架 - 001 Day 啟程&quot;">&ZeroWidthSpace;</a></h1>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>大部分資料擷取至網路及筆者參加的一些現下聚會的節錄,將透過Vue的一些共通框架理念去理解React框架,若有理解錯誤的點,請盡量指點我XD</p>
</div>
<h2 id="react-為何而生" tabindex="-1">React 為何而生 <a class="header-anchor" href="#react-為何而生" aria-label="Permalink to &quot;React 為何而生&quot;">&ZeroWidthSpace;</a></h2>
<p>前端的歷史進程,不斷膨脹的web服務及複雜的業務邏輯,若使用jQuery及原生js開發,將使得工程師們不堪重負,維護到後面往往都在寫世界奇觀,我們需要更簡化的方式,降低心智負擔及程式撰寫複雜度,而React就是在這個環境下誕生。</p>
<h2 id="react核心思考" tabindex="-1">React核心思考 <a class="header-anchor" href="#react核心思考" aria-label="Permalink to &quot;React核心思考&quot;">&ZeroWidthSpace;</a></h2>
<p>藉由資料來描述狀態,將視圖成為應用程序狀態的函數。(React 的核心前提是 UI 只是將數據投影為不同形式的數據。<strong>相同的輸入給出相同的輸出</strong>。一個簡單的純函數。)</p>
<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> f</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>開發者們只需注意狀態的變化,而其他交給React處理.</p>
<h2 id="關注點的分離" tabindex="-1">關注點的分離 <a class="header-anchor" href="#關注點的分離" aria-label="Permalink to &quot;關注點的分離&quot;">&ZeroWidthSpace;</a></h2>
<p>傳統開發上,開發者將HTML+CSS+JS 組合並開發出網頁服務,但每個部分都是個別獨立的,有可能有些人會說,HTML會引入CSS及JS,怎麼能說他們獨立呢?</p>
<blockquote>
<p>但你總不會在CSS裡面寫JS語法吧@@</p>
</blockquote>
<p>而在React中,任何對渲染視圖有關的事情——無論是狀態、UI,在某些情況下,甚至是樣式,都是它關注的一部分。所以React的組件中,常常可以看見,一個文檔中有HTML+JS的組合,因為關注點不同。但該如何去實現這種多樣的類型組合呢?</p>
<h2 id="用jsx-來建構組件" tabindex="-1">用JSX 來建構組件 <a class="header-anchor" href="#用jsx-來建構組件" aria-label="Permalink to &quot;用JSX 來建構組件&quot;">&ZeroWidthSpace;</a></h2>
<p>React使用了一種有趣的實現,通過編譯器來將一個文檔結合HTML+JS,將業務邏輯(JS)及頁面骨架(HTML)組合起來。</p>
<div class="language-app.jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">app.jsx</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span></span></span>
<span class="line"><span>import React from "https://esm.sh/react@18";</span></span>
<span class="line"><span>import ReactDOM from "https://esm.sh/react-dom@18";</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const App = () => {</span></span>
<span class="line"><span>  return (</span></span>
<span class="line"><span>    &#x3C;div className="box"></span></span>
<span class="line"><span>      &#x3C;h1>The React 001&#x3C;/h1></span></span>
<span class="line"><span>    &#x3C;/div></span></span>
<span class="line"><span>  );</span></span>
<span class="line"><span>};</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ReactDOM.render(&#x3C;App />, document.getElementById("app"));</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><a href="https://codepen.io/eepson123tw/pen/VwEjMrR" target="_blank" rel="noreferrer">React 001 範例</a></p>
<p>範例中可以簡單了解到,我們在HTML中只提供了進入點,而React卻能透過函式長出我們需要的其餘部分。</p>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>JSX 是 JavaScript 的語法擴展,可在 JavaScript 文件中編寫類似 HTML 的標記。儘管還有其他方式來編寫組件,但大多數 React 開發人員更喜歡 JSX 的簡潔性,並且大多數代碼庫都使用它。</p>
</div>
]]></description>
            <content:encoded><![CDATA[<h1 id="學習react框架-001-day-啟程" tabindex="-1">學習React框架 - 001 Day 啟程 <a class="header-anchor" href="#學習react框架-001-day-啟程" aria-label="Permalink to &quot;學習React框架 - 001 Day 啟程&quot;">&ZeroWidthSpace;</a></h1>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>大部分資料擷取至網路及筆者參加的一些現下聚會的節錄,將透過Vue的一些共通框架理念去理解React框架,若有理解錯誤的點,請盡量指點我XD</p>
</div>
<h2 id="react-為何而生" tabindex="-1">React 為何而生 <a class="header-anchor" href="#react-為何而生" aria-label="Permalink to &quot;React 為何而生&quot;">&ZeroWidthSpace;</a></h2>
<p>前端的歷史進程,不斷膨脹的web服務及複雜的業務邏輯,若使用jQuery及原生js開發,將使得工程師們不堪重負,維護到後面往往都在寫世界奇觀,我們需要更簡化的方式,降低心智負擔及程式撰寫複雜度,而React就是在這個環境下誕生。</p>
<h2 id="react核心思考" tabindex="-1">React核心思考 <a class="header-anchor" href="#react核心思考" aria-label="Permalink to &quot;React核心思考&quot;">&ZeroWidthSpace;</a></h2>
<p>藉由資料來描述狀態,將視圖成為應用程序狀態的函數。(React 的核心前提是 UI 只是將數據投影為不同形式的數據。<strong>相同的輸入給出相同的輸出</strong>。一個簡單的純函數。)</p>
<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> f</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>開發者們只需注意狀態的變化,而其他交給React處理.</p>
<h2 id="關注點的分離" tabindex="-1">關注點的分離 <a class="header-anchor" href="#關注點的分離" aria-label="Permalink to &quot;關注點的分離&quot;">&ZeroWidthSpace;</a></h2>
<p>傳統開發上,開發者將HTML+CSS+JS 組合並開發出網頁服務,但每個部分都是個別獨立的,有可能有些人會說,HTML會引入CSS及JS,怎麼能說他們獨立呢?</p>
<blockquote>
<p>但你總不會在CSS裡面寫JS語法吧@@</p>
</blockquote>
<p>而在React中,任何對渲染視圖有關的事情——無論是狀態、UI,在某些情況下,甚至是樣式,都是它關注的一部分。所以React的組件中,常常可以看見,一個文檔中有HTML+JS的組合,因為關注點不同。但該如何去實現這種多樣的類型組合呢?</p>
<h2 id="用jsx-來建構組件" tabindex="-1">用JSX 來建構組件 <a class="header-anchor" href="#用jsx-來建構組件" aria-label="Permalink to &quot;用JSX 來建構組件&quot;">&ZeroWidthSpace;</a></h2>
<p>React使用了一種有趣的實現,通過編譯器來將一個文檔結合HTML+JS,將業務邏輯(JS)及頁面骨架(HTML)組合起來。</p>
<div class="language-app.jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">app.jsx</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span></span></span>
<span class="line"><span>import React from "https://esm.sh/react@18";</span></span>
<span class="line"><span>import ReactDOM from "https://esm.sh/react-dom@18";</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const App = () => {</span></span>
<span class="line"><span>  return (</span></span>
<span class="line"><span>    &#x3C;div className="box"></span></span>
<span class="line"><span>      &#x3C;h1>The React 001&#x3C;/h1></span></span>
<span class="line"><span>    &#x3C;/div></span></span>
<span class="line"><span>  );</span></span>
<span class="line"><span>};</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ReactDOM.render(&#x3C;App />, document.getElementById("app"));</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><a href="https://codepen.io/eepson123tw/pen/VwEjMrR" target="_blank" rel="noreferrer">React 001 範例</a></p>
<p>範例中可以簡單了解到,我們在HTML中只提供了進入點,而React卻能透過函式長出我們需要的其餘部分。</p>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>JSX 是 JavaScript 的語法擴展,可在 JavaScript 文件中編寫類似 HTML 的標記。儘管還有其他方式來編寫組件,但大多數 React 開發人員更喜歡 JSX 的簡潔性,並且大多數代碼庫都使用它。
--- 擷取至官網</p>
<p>而這樣子的組件是React應用程序的基本構建塊,可以看作是一個獨立的代碼單元,具有特定的功能和表現形式。而小塊的組件之間可以相互嵌套,形成複雜的UI結構。</p>
</div>
<h2 id="babel-react背後的好夥伴" tabindex="-1">Babel(React背後的好夥伴) <a class="header-anchor" href="#babel-react背後的好夥伴" aria-label="Permalink to &quot;Babel(React背後的好夥伴)&quot;">&ZeroWidthSpace;</a></h2>
<p>為什麼React可以透過一個jsx就能長出我們想要的頁面格式呢?Babel就是幕後的大大了~</p>
<p>Babel作為一個JavaScript編譯器,可以將新版本的JavaScript代碼轉換並向後兼容舊版本的語法,以確保代碼可以在不同環境下(瀏覽器的實現進程不同,你可能會遇到神奇的錯誤XD)可以順利運行。</p>
<blockquote>
<p><span style="color:red"> React的JSX語法,正是透過Babel將JSX轉為普通JavaScript的方式。通過Babel的plugin,React可使用最新的JavaScript語法,同時確保這些代碼可以在不同環境中正常工作。</span></p>
</blockquote>
<p>可以看到透過Babel,我們的<a href="https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&amp;build=&amp;builtIns=false&amp;corejs=3.21&amp;spec=false&amp;loose=false&amp;code_lz=MYewdgzgLgBAggBwTAvDAFASlQPhgbwCgYYAnAUygFdSwNiSYAeAEwEsA3GYAGwEMIEAHJ8AtuRQAiAEYgAHpJwNGzABYBGHABVV5GACVyfYLAAMp9UwD0GpSuvsOdmJgDchAL6ugA&amp;debug=false&amp;forceAllTransforms=false&amp;modules=false&amp;shippedProposals=false&amp;circleciRepo=&amp;evaluate=false&amp;fileSize=false&amp;timeTravel=false&amp;sourceType=module&amp;lineWrap=true&amp;presets=env%2Creact%2Cstage-0%2Cstage-2&amp;prettier=false&amp;targets=&amp;version=7.21.4&amp;externalPlugins=&amp;assumptions=%7B%7D" target="_blank" rel="noreferrer">React JSX</a>被編譯成了一個JS文件。</p>
<h2 id="結論" tabindex="-1">結論 <a class="header-anchor" href="#結論" aria-label="Permalink to &quot;結論&quot;">&ZeroWidthSpace;</a></h2>
<p>第一天了解React框架的背景、核心思想、JSX語法與Babel編譯器的協作關係後,我們將更深入地了解React框架的一些關鍵概念。React 是一個基於組件的框架,組件是應用程序的基本構建塊。在 React 中,我們需要了解組件之間如何傳遞參數以及如何實例化組件。參數傳遞通常使用 props（屬性）進行,實例化可以使用 React.createElement() 函數或 JSX 語法。掌握這些基本概念可以讓我們更好地開發高質量、高效的 React 應用程序。</p>
<h2 id="參考資料" tabindex="-1">參考資料 <a class="header-anchor" href="#參考資料" aria-label="Permalink to &quot;參考資料&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://react.gg/visualized#history-of-the-web" target="_blank" rel="noreferrer">可視化的理解React</a></li>
<li><a href="https://react.dev/" target="_blank" rel="noreferrer">React官方文件</a></li>
<li><a href="https://github.com/reactjs/react-basic" target="_blank" rel="noreferrer">React Basic</a></li>
<li><a href="https://pomb.us/build-your-own-react/" target="_blank" rel="noreferrer">Build your own React</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[Nginx是甚麼?]]></title>
            <link>https://www.aaron-shih.com/backend/nginx</link>
            <guid>https://www.aaron-shih.com/backend/nginx</guid>
            <pubDate>Sat, 15 Apr 2023 23:55:24 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="nginx是甚麼" tabindex="-1">Nginx是甚麼? <a class="header-anchor" href="#nginx是甚麼" aria-label="Permalink to &quot;Nginx是甚麼?&quot;">&ZeroWidthSpace;</a></h1>
<p>Nginx是一款高性能的Web服務器和反向代理服務器.最初由Igor Sysoev編寫,可以作為HTTP SERVER使用,也可以作為負載均衡器、HTTP緩存和反向代理服務器使用.Nginx採事件驅動的異步架構,可以支持高併發和大規模的Web流量.</p>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>底層為 linux 異步非阻塞網路I/O模型.(高併發),支持gzip壓縮.
=&gt;Web服務器,WWW服務器,HTTP服務器,web信息展示,被動式的接收到請求後,才會回應當前請求內容.</p>
<ul>
<li>3萬個tcp/ip連結下,消耗內存不到150兆</li>
</ul>
</div>
<h2 id="企業或服務拿nginx來幹嗎" tabindex="-1">企業或服務拿Nginx來幹嗎? <a class="header-anchor" href="#企業或服務拿nginx來幹嗎" aria-label="Permalink to &quot;企業或服務拿Nginx來幹嗎?&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>網頁展示</li>
<li>提供多個域名的網頁服務</li>
<li>提供反向代理服務</li>
<li>提供簡單資源下載服務 (FTP)</li>
<li>用戶行為分析</li>
</ul>
<h2 id="nginx的運行架構" tabindex="-1">Nginx的運行架構 <a class="header-anchor" href="#nginx的運行架構" aria-label="Permalink to &quot;Nginx的運行架構&quot;">&ZeroWidthSpace;</a></h2>
<p>多進程,調用多個cpu解析用戶請求.可針對進程數量去設置cpu數量.</p>
<p>默認使用root用戶創建master進程,透過master再創建多個worker進程.</p>
<ul>
<li><strong>master進程</strong></li>
</ul>
<p>監聽 ip.port 0.0.0.0:80 被動等待用戶發來連接請求,nginx的主進程工作狀態.</p>
<p>用於管理資源.</p>
<ul>
<li><strong>worker進程</strong></li>
</ul>
<p>1.實際處理用戶發來請求</p>
<p>2.master根據nginx.conf裡的配置參數有幾個worker</p>
<p>3.用戶請求來時,worker之間會有一個競爭狀態,勝利者可以與客戶端建立連線.</p>
<p>4.當worker接受到用戶請求後,如需向後反向代理給後端,會經過一層層分析後返回給用戶.</p>
<h2 id="nginx的有用指令" tabindex="-1">Nginx的有用指令 <a class="header-anchor" href="#nginx的有用指令" aria-label="Permalink to &quot;Nginx的有用指令&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">nginx -V 可以看到詳細訊息</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">nginx -t 檢測nginx.conf語法</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">nginx -s reload 重新加載nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">nginx -s stop 停止  === kill -15 nginx</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">nginx #直接運行nginx,前提是當前機器沒運行nginx</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">ps -ef|grep nginx 命令及输出字段解析</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">rpm -ql nginx</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="nginx語法規則" tabindex="-1">Nginx語法規則 <a class="header-anchor" href="#nginx語法規則" aria-label="Permalink to &quot;Nginx語法規則&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>配置文件由指令與指令塊構成；</li>
<li>每條指令以 ; 分號結尾，指令與參數間以空格符號分隔；</li>
<li>指令塊以 {} 大括號將多條指令組織在一起；</li>
<li>include 語句允許組合多個配置文件以提升可維護性；</li>
<li>使用 # 符號添加注釋，提高可讀性；</li>
<li>使用 $ 符號使用變量；</li>
<li>部分指令的參數支援正則表達式；</li>
</ul>
<div class="warning custom-block"><p class="custom-block-title">WARNING</p>
<ul>
<li>大多數指令都有預設值，如果沒有明確設定，將使用預設值。</li>
<li>Nginx 的配置文件是順序讀取的，即後面的指令會覆蓋前面的指令。</li>
<li>指令可以使用變量，這些變量可以是預定義的變量，也可以是自定義的變量。</li>
<li>指令參數支援一些特殊字符，如 $、@、#、/、~ 等。這些字符在配置文件中有特殊的含義。</li>
<li>使用 include 指令可以將其他配置文件中的指令包含到當前配置文件中，以便提高可維護性。</li>
<li>注釋可以使用 # 或 // 符號添加。注釋可以位於行的開頭或指令的末尾，但不能位於指令的中間。</li>
<li>部分指令的參數支援正則表達式，如 location 指令中的正則表達式用於匹配 URL 路徑。正則表達式的語法和用法與其他語言中的正則表達式相同。</li>
</ul>
</div>
<h2 id="nginx的配置文件詳解" tabindex="-1">Nginx的配置文件詳解 <a class="header-anchor" href="#nginx的配置文件詳解" aria-label="Permalink to &quot;Nginx的配置文件詳解&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span></span></span>
<span class="line"><span>#user  nobody;                         # 指定用户使用nginx</span></span>
<span class="line"><span>worker_processes  1;                   # nginx工作程序數量，一般與cpu核數相同</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#全域設置</span></span>
<span class="line"><span>#error_log  logs/error.log;            # 錯誤日誌目錄</span></span>
<span class="line"><span>#error_log  logs/error.log  notice;</span></span>
<span class="line"><span>#error_log  logs/error.log  info;</span></span>
<span class="line"><span>#pid        logs/nginx.pid;            # nginx的pid存放目錄</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>#全域設置</span></span>
<span class="line"><span>events {</span></span>
<span class="line"><span>    use epoll;     # 使用epoll的I/O模型(如果你未定義Nginx如何使用，會自動分配最合適的)</span></span>
<span class="line"><span>    worker_connections 1024;   # 每個程序允許的最大併發數量</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>#核心HTTP部屬功能 </span></span>
<span class="line"><span>http {</span></span>
<span class="line"><span>    # 配置使用最多最頻繁的部分</span></span>
<span class="line"><span>    # 設置日誌</span></span>
<span class="line"><span>    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span></span>
<span class="line"><span>                      '$status $body_bytes_sent "$http_referer" '</span></span>
<span class="line"><span>                      '"$http_user_agent" "$http_x_forwarded_for"';</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    access_log  /var/log/nginx/access.log  main;   # Nginx訪問日誌位置</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    sendfile            on;   # 开启高效傳輸模式</span></span>
<span class="line"><span>    tcp_nopush          on;   # 減少網路報文數量</span></span>
<span class="line"><span>    tcp_nodelay         on;</span></span>
<span class="line"><span>    keepalive_timeout   65;   # 保持連接的時間，單位秒</span></span>
<span class="line"><span>    types_hash_max_size 2048;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    include             /etc/nginx/mime.types;      # 文件拓展名與類型映射表</span></span>
<span class="line"><span>    default_type        application/octet-stream;   # 默認文件類型</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    include /etc/nginx/conf.d/*.conf;   # 加載子配置項</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    server {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    listen       80;       # 配置監聽的端口</span></span>
<span class="line"><span>    charset      utf-8; #支持中文參數</span></span>
<span class="line"><span>    server_name  localhost;    # 配置的域名</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    location / {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      root   /usr/share/nginx/html;  # 網站根目錄</span></span>
<span class="line"><span>      index  index.html index.htm;   # 默認首頁</span></span>
<span class="line"><span>      deny 172.168.22.11;   # 禁止訪問的ip地址，可以為all</span></span>
<span class="line"><span>      allow 172.168.33.44； # 允许訪問的ip地址，可以為all</span></span>
<span class="line"><span>      </span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    error_page 500 502 503 504 /50x.html;  # 默認50x對應的訪問頁面</span></span>
<span class="line"><span>    error_page 400 404 error.html;   # 同上</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 第二個虛擬主機</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>server { </span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><h2 id="使用上遇到的問題" tabindex="-1">使用上遇到的問題 <a class="header-anchor" href="#使用上遇到的問題" aria-label="Permalink to &quot;使用上遇到的問題&quot;">&ZeroWidthSpace;</a></h2>
<p>部屬此部落格時,因為較不熟悉Nginx的部屬配置,發現reload網頁時就會發生框架啟動失敗的問題,原本以為是自己的Docker進入點寫錯,後來詢問後端朋友,表示設定並未出錯,詢問了網站部屬方的工程師後,發現只是一個location刷新空白的導頁錯誤= =,差點沒把自己氣歪XD</p>
<p>以下是Vue的範本,擷取至<strong>Nginx常用的基礎配置</strong>一文</p>
<div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span></span></span>
<span class="line"><span>server {</span></span>
<span class="line"><span>  # 項目啟動port</span></span>
<span class="line"><span>  listen            80;</span></span>
<span class="line"><span>  # 域名（localhost）</span></span>
<span class="line"><span>  server_name       _;</span></span>
<span class="line"><span>  # 禁止 iframe 嵌套</span></span>
<span class="line"><span>  add_header        X-Frame-Options SAMEORIGIN;</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  # 根路徑</span></span>
<span class="line"><span>  location / {</span></span>
<span class="line"><span>    # 項目目錄</span></span>
<span class="line"><span>    root /xxx;</span></span>
<span class="line"><span>    # 默認讀取文件</span></span>
<span class="line"><span>    index           index.html;</span></span>
<span class="line"><span>    # 配置 history 模式的刷新空白</span></span>
<span class="line"><span>    try_files       $uri $uri/ /index.html; =>導頁會錯誤，因匹配到前方路由時，便會停止匹配(QQ)</span></span>
<span class="line"><span>    try_files $uri $uri.html $uri/index.html /404.html; =>正確</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  # 後墜解决靜態資源找不到问题</span></span>
<span class="line"><span>  location ~* \.(gif|jpg|jpeg|png|css|js|ico)$ { </span></span>
<span class="line"><span>    root           html/static/; =>記得要用時要修正成自己的目錄結構</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  # 圖片防盜</span></span>
<span class="line"><span>  location ~/static/.*\.(jpg|jpeg|png|gif|webp)$ {</span></span>
<span class="line"><span>    root              html;</span></span>
<span class="line"><span>    valid_referers    *.deeruby.com;</span></span>
<span class="line"><span>    if ($invalid_referer) {</span></span>
<span class="line"><span>      return          403;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  # 訪問限制</span></span>
<span class="line"><span>  location /static {</span></span>
<span class="line"><span>    root               html;</span></span>
<span class="line"><span>    # allow 允许</span></span>
<span class="line"><span>    allow              39.xxx.xxx.xxx;</span></span>
<span class="line"><span>    # deny  拒绝</span></span>
<span class="line"><span>    deny               all;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h2 id="參考資料" tabindex="-1">參考資料 <a class="header-anchor" href="#參考資料" aria-label="Permalink to &quot;參考資料&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://www.digitalocean.com/community/tools/nginx?domains.0.php.php=false&amp;domains.0.routing.index=index.html&amp;domains.0.routing.fallbackHtml=true&amp;global.app.lang=zhTW" target="_blank" rel="noreferrer">可自行配置Nginx網站設定</a></li>
<li><a href="https://juejin.cn/post/7196859948554715195" target="_blank" rel="noreferrer">Nginx常用的基礎配置</a></li>
<li><a href="https://www.jianshu.com/p/7de961138421" target="_blank" rel="noreferrer">Nginx配置 try_files</a></li>
<li><a href="https://blog.csdn.net/crazymakercircle/article/details/128684641" target="_blank" rel="noreferrer">更進一步了解Nginx</a></li>
</ul>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[JWT機制(JSON Web Tokens)]]></title>
            <link>https://www.aaron-shih.com/backend/jwt</link>
            <guid>https://www.aaron-shih.com/backend/jwt</guid>
            <pubDate>Sat, 25 Mar 2023 11:14:47 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><h1 id="什麼是jwt" tabindex="-1">什麼是JWT? <a class="header-anchor" href="#什麼是jwt" aria-label="Permalink to &quot;什麼是JWT?&quot;">&ZeroWidthSpace;</a></h1>
<p>是一種開放標準Requests for comments(RFC)<a href="https://www.rfc-editor.org/rfc/rfc7519" target="_blank" rel="noreferrer">7519</a>，為了在各種端口安全傳輸JSON。JWT可以被驗證和信任，因為經過數位簽章及金鑰加密的過程(非對稱加密RSA、金鑰雜湊訊息鑑別碼 HMAC、橢圓曲線數位簽章算法 ECDSA)。旨在描述一組token(令牌)，可用於識別當前使用者身分。</p>
<h2 id="對稱加密與不對稱加密" tabindex="-1">對稱加密與不對稱加密 <a class="header-anchor" href="#對稱加密與不對稱加密" aria-label="Permalink to &quot;對稱加密與不對稱加密&quot;">&ZeroWidthSpace;</a></h2>
<p>屬於密碼學(cryptography)的兩種加密方式(安全機制)，防禦來自現實網路世界的攻擊者，都有加密(encryption)與解密(decryption)兩種動作，但實作上有些許的不同。透過密鑰交換讓兩台電腦在密鑰上達到共識(確認收發者的身分)的算法。</p>
<ul>
<li>對稱加密(symmetric encryption):雙方用一樣的密鑰加密和解密，並共享一個密鑰。</li>
<li>不對稱加密(asymmetric encryption):有一組公開密鑰及私有的密鑰，用公鑰加密後，只有有私鑰的人能解密。相反，用私鑰加密後也只有公鑰的擁有者能解密。避免有心人士，還會先行交換公鑰，並在加密數據中加上數位簽章，先用公鑰確認來源數據後，再進行解密。</li>
</ul>
<h2 id="jwt是為了解決甚麼問題-有哪些應用呢" tabindex="-1">JWT是為了解決甚麼問題?有哪些應用呢? <a class="header-anchor" href="#jwt是為了解決甚麼問題-有哪些應用呢" aria-label="Permalink to &quot;JWT是為了解決甚麼問題?有哪些應用呢?&quot;">&ZeroWidthSpace;</a></h2>
<p>解決了資訊傳遞上及認證使用者身分上的問題，當你登入了一個購物網站，絕對不希望任何有關你的機敏資訊暴露在登入端口上，這時我們的JWT就派上了用場，端口記憶的只會是一組進行過加密的token(內含使用者的身分訊息)，不會有其他多餘訊息，驗證上則會交給後端，確保安全性。加上其回傳的token令牌可以被程式語言解碼(映射)成json物件，此便利性使大多數的開發者願意使用此技術。</p>
<blockquote>
<p>JWT廣泛的被應用在Single Sign On(單點登錄)上，以及網頁的資料交換上。</p>
</blockquote>
<h2 id="jwt的結構" tabindex="-1">JWT的結構 <a class="header-anchor" href="#jwt的結構" aria-label="Permalink to &quot;JWT的結構&quot;">&ZeroWidthSpace;</a></h2>
<p>此令牌(token)由三個結構組成，Header、Payload、Signature，</p>
<div class="language-md vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">xxxxx.yyyyy.zzzzz</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="header" tabindex="-1">Header <a class="header-anchor" href="#header" aria-label="Permalink to &quot;Header&quot;">&ZeroWidthSpace;</a></h3>
<p>通常由兩部分組成：令牌的類型，即 JWT，以及所使用的簽名算法，例如 HMAC SHA256 或 RSA。</p>
<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  "alg"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"HS256"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  "typ"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"JWT"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>然後會被 Base64Url 編碼，形成 JWT 的第一部分。</p>
<h3 id="payload" tabindex="-1">Payload <a class="header-anchor" href="#payload" aria-label="Permalink to &quot;Payload&quot;">&ZeroWidthSpace;</a></h3>
<p>聲明(Claim)內容，有三種:</p>
<ol>
<li>registered 7種訊息建議: iss (issuer), exp (expiration time), sub (subject), aud (audience), and others,</li>
<li>public: 可以由使用 JWT 的人隨意定義。但是為了避免衝突，它們應該在 IANA JSON Web 令牌註冊表中定義，或者定義為包含抗衝突命名空間的 URI。</li>
<li>private claims: 自定義的欄位,可能會是使用者的一些信息描述。</li>
</ol>
<div class="language-md vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">"sub": "1234567890",</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">"name": "John Doe",</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">"admin": true</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>然後會被 Base64Url 編碼，形成 JWT 的第二部分。</p>
<h3 id="signature" tabindex="-1">Signature <a class="header-anchor" href="#signature" aria-label="Permalink to &quot;Signature&quot;">&ZeroWidthSpace;</a></h3>
<p>針對描述的編碼表頭(header)、編碼聲明(payload)、秘密(secret)、表頭中指定的算法，然後對其進行簽名。
secret==&gt;為伺服器端的密鑰，還記得JWT可以使用非對稱加密方式嗎XD</p>
<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">HMACSHA256</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  base64UrlEncode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">header</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "."</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  base64UrlEncode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">payload</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  secret</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">hearder</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkFsbGVuIiwiaWQiOjI3ODUwNjN9</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">payload</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">NVSX8vVwjcw3oXbOsZv7hp9AzdAAU3gQR8htriPD9sQ</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">secret</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>合起來就會產生<a href="https://jwt.io/#debugger-io?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkFsbGVuIiwiaWQiOjI3ODUwNjN9.NVSX8vVwjcw3oXbOsZv7hp9AzdAAU3gQR8htriPD9sQ" target="_blank" rel="noreferrer">令牌</a></p>
<h2 id="還有哪些加密概念" tabindex="-1">還有哪些加密概念? <a class="header-anchor" href="#還有哪些加密概念" aria-label="Permalink to &quot;還有哪些加密概念?&quot;">&ZeroWidthSpace;</a></h2>
<p>硬件加密</p>
<ul>
<li>替換加密:將輸入的文字按照規律替換後輸出。</li>
<li>列移位加密:將輸入的文字按造不規則排列後輸出。</li>
<li>英格瑪加密:替換加密的複雜應用，透過A-&gt;B-&gt;C(但都是不同的替換方式)，每次輸入後，替換方式就會改變，輸出也就不一致。(對稱加密)</li>
</ul>
<p>軟件加密:</p>
<ul>
<li>數據加密標準(1977年) DES (對稱加密)</li>
<li>高級加密標準(2001年) AES 128/192/256位密鑰 =&gt; 把輸入數據切塊每16字節，用替換和移位加密。(重複進行至少10次or以上，在安全性及性能上找到平衡) (對稱加密)</li>
<li>狄菲赫曼密鑰交換(DIFFIE-HELLMAN KEY EXCHANGE) =&gt; 模幕運算</li>
<li>RSA(非對稱加密)</li>
</ul>
<h3 id="來源" tabindex="-1">來源 <a class="header-anchor" href="#來源" aria-label="Permalink to &quot;來源&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="https://jwt.io/introduction" target="_blank" rel="noreferrer">JWT</a>
<a href="https://medium.com/@RiverChan/%E5%9F%BA%E7%A4%8E%E5%AF%86%E7%A2%BC%E5%AD%B8-%E5%B0%8D%E7%A8%B1%E5%BC%8F%E8%88%87%E9%9D%9E%E5%B0%8D%E7%A8%B1%E5%BC%8F%E5%8A%A0%E5%AF%86%E6%8A%80%E8%A1%93-de25fd5fa537" target="_blank" rel="noreferrer">對稱加密與不對稱加密</a>
<a href="https://zh.wikipedia.org/zh-tw/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95" target="_blank" rel="noreferrer">RSA</a>
<a href="https://zhuanlan.zhihu.com/p/97953640" target="_blank" rel="noreferrer">ECDSA</a></p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[ChatGPT 橫空出世，工程師該如何看待這現象?]]></title>
            <link>https://www.aaron-shih.com/smallTalk/chatgpt-smalltalk</link>
            <guid>https://www.aaron-shih.com/smallTalk/chatgpt-smalltalk</guid>
            <pubDate>Wed, 08 Mar 2023 22:14:47 GMT</pubDate>
            <description><![CDATA[<h1 id="chatgpt-橫空出世-工程師該如何看待這現象" tabindex="-1">ChatGPT 橫空出世，工程師該如何看待這現象? <a class="header-anchor" href="#chatgpt-橫空出世-工程師該如何看待這現象" aria-label="Permalink to &quot;ChatGPT 橫空出世，工程師該如何看待這現象?&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/chatgpt-smalltalk.webp" alt="chatgpt-smalltalk" data-fancybox="gallery"></p>
<p>最近幾周跟風，與同事一起玩ChatGPT並提問，越用越覺得強大，快速的回復速度加上極高的準確率，讓人不禁感嘆科技的躍進，也看到許多擔心自己會被AI取代的貼文，不禁思考起工程師這個職業真的這麼簡單會被AI取代嗎?</p>
<p>於是做了以下幾點，去分析ChatGPT，並展開這個議題</p>
<ul>
<li>ChatGPT是怎麼演化來的?</li>
<li>龐大的資料究竟怎麼收集?</li>
<li>他到底是使用甚麼模型?基於甚麼模式回答問題?</li>
<li>目前的瓶頸或是限制?</li>
<li>要以甚麼心態去看目前AI的趨勢?</li>
<li>要如何使用這項工具?</li>
</ul>
<h2 id="chatgpt是怎麼演化來的" tabindex="-1">ChatGPT是怎麼演化來的? <a class="header-anchor" href="#chatgpt是怎麼演化來的" aria-label="Permalink to &quot;ChatGPT是怎麼演化來的?&quot;">&ZeroWidthSpace;</a></h2>
<p>ChatGPT 是甚麼呢?</p>
<blockquote>
<p>ChatGPT是一個大型的自然語言(英文、日文、中文)處理模型，由OpenAI(微軟投資公司)開發和訓練。GPT代表&quot;Generative Pre-trained Transformer&quot;，它是一種基於Transformer架構的語言模型，可以根據先前的輸入文本預測下一個可能的文本。ChatGPT是一個特定版本的GPT模型，專門用於對話生成，它可以與人類進行自然而流暢的對話。</p>
</blockquote>
<p>它是為了解決甚麼而誕生的?</p>
<blockquote>
<p>為了解決對話中的自然語言理解、生成和流暢度等問題。基於大量文本數據訓練而成，並經過迭代演進，並非是2023年的新技術。2020年6月時就已經投入商業化，11月30日發佈。屬於AIGC(人工智能技術)的一部分，目前使用AI模型已迭代至GPT-3。</p>
</blockquote>
<p>GPT基於<strong>大規模化</strong>(電腦的硬體提升、龐大的訓練資料1750億筆資料)、<strong>Transformer架構</strong>(自注意力機制的神經網絡架構，用於處理序列數據)、<strong>轉移學習</strong>(將已經學習到的知識、技術、能力，轉移至另外的一個新模型上，並應用)，分析輸入資料並使用<strong>InstructGPT</strong>(新型態的大型語言模型，旨在通過給出明確的指令或提示來生成自然語言文本)，來實現人類的意圖。</p>
<ul>
<li>
<p>GPT-1：</p>
<p>1.發佈於2018年，是第一個使用Transformer架構的大型通用語言模型。2.以無監督方式在大量文本數據上訓練，能夠生成流暢的自然語言文本。3.使用12個Transformer編碼器層，共計110M個參數。4.在多種自然語言處理任務上取得了良好的表現。5.在發布當時被認為是目前最先進的語言模型之一。</p>
</li>
</ul>
]]></description>
            <content:encoded><![CDATA[<h1 id="chatgpt-橫空出世-工程師該如何看待這現象" tabindex="-1">ChatGPT 橫空出世，工程師該如何看待這現象? <a class="header-anchor" href="#chatgpt-橫空出世-工程師該如何看待這現象" aria-label="Permalink to &quot;ChatGPT 橫空出世，工程師該如何看待這現象?&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/chatgpt-smalltalk.webp" alt="chatgpt-smalltalk" data-fancybox="gallery"></p>
<p>最近幾周跟風，與同事一起玩ChatGPT並提問，越用越覺得強大，快速的回復速度加上極高的準確率，讓人不禁感嘆科技的躍進，也看到許多擔心自己會被AI取代的貼文，不禁思考起工程師這個職業真的這麼簡單會被AI取代嗎?</p>
<p>於是做了以下幾點，去分析ChatGPT，並展開這個議題</p>
<ul>
<li>ChatGPT是怎麼演化來的?</li>
<li>龐大的資料究竟怎麼收集?</li>
<li>他到底是使用甚麼模型?基於甚麼模式回答問題?</li>
<li>目前的瓶頸或是限制?</li>
<li>要以甚麼心態去看目前AI的趨勢?</li>
<li>要如何使用這項工具?</li>
</ul>
<h2 id="chatgpt是怎麼演化來的" tabindex="-1">ChatGPT是怎麼演化來的? <a class="header-anchor" href="#chatgpt是怎麼演化來的" aria-label="Permalink to &quot;ChatGPT是怎麼演化來的?&quot;">&ZeroWidthSpace;</a></h2>
<p>ChatGPT 是甚麼呢?</p>
<blockquote>
<p>ChatGPT是一個大型的自然語言(英文、日文、中文)處理模型，由OpenAI(微軟投資公司)開發和訓練。GPT代表&quot;Generative Pre-trained Transformer&quot;，它是一種基於Transformer架構的語言模型，可以根據先前的輸入文本預測下一個可能的文本。ChatGPT是一個特定版本的GPT模型，專門用於對話生成，它可以與人類進行自然而流暢的對話。</p>
</blockquote>
<p>它是為了解決甚麼而誕生的?</p>
<blockquote>
<p>為了解決對話中的自然語言理解、生成和流暢度等問題。基於大量文本數據訓練而成，並經過迭代演進，並非是2023年的新技術。2020年6月時就已經投入商業化，11月30日發佈。屬於AIGC(人工智能技術)的一部分，目前使用AI模型已迭代至GPT-3。</p>
</blockquote>
<p>GPT基於<strong>大規模化</strong>(電腦的硬體提升、龐大的訓練資料1750億筆資料)、<strong>Transformer架構</strong>(自注意力機制的神經網絡架構，用於處理序列數據)、<strong>轉移學習</strong>(將已經學習到的知識、技術、能力，轉移至另外的一個新模型上，並應用)，分析輸入資料並使用<strong>InstructGPT</strong>(新型態的大型語言模型，旨在通過給出明確的指令或提示來生成自然語言文本)，來實現人類的意圖。</p>
<ul>
<li>
<p>GPT-1：</p>
<p>1.發佈於2018年，是第一個使用Transformer架構的大型通用語言模型。2.以無監督方式在大量文本數據上訓練，能夠生成流暢的自然語言文本。3.使用12個Transformer編碼器層，共計110M個參數。4.在多種自然語言處理任務上取得了良好的表現。5.在發布當時被認為是目前最先進的語言模型之一。</p>
</li>
</ul>
<hr>
<ul>
<li>GPT-2：1.發佈於2019年，是GPT-1的升級版本，增加了模型大小和訓練數據量。2.使用了更多的Transformer編碼器層，共計1.5B個參數，是當時最大的語言模型之一。3.在多種自然語言處理任務上表現優異，能夠生成更長、更複雜、更具有邏輯性的文本。4.因為能夠生成高度可信的假新聞和惡意內容，所以引起了一些擔憂和爭議。5.需要更大的訓練數據和更強的正則化來解決生成有爭議文本的問題。</li>
</ul>
<hr>
<ul>
<li>GPT-3：1.發佈於2020年，是迄今為止最大的通用語言模型，擁有175B個參數。2.使用了更多的Transformer編碼器層和更大的訓練數據，能夠生成更自然、更真實、更多樣化的文本。3.在多種自然語言處理任務上取得了令人驚訝的表現，並且從未見過的應用也出現了。4.能夠快速進行零樣本、一樣本和少樣本學習，並且有能力進行多種語言的翻譯。5.然而，由於巨大的參數量和計算資源需求，GPT-3也面臨著可解釋性、隱私保護和環境影響等問題。</li>
</ul>
<hr>
<p>以上是GPT自行統正出的要點。</p>
<h2 id="龐大的資料究竟怎麼收集" tabindex="-1">龐大的資料究竟怎麼收集? <a class="header-anchor" href="#龐大的資料究竟怎麼收集" aria-label="Permalink to &quot;龐大的資料究竟怎麼收集?&quot;">&ZeroWidthSpace;</a></h2>
<p>OpenAI 開發了一個自動化的資料擷取程式，可以從各種網站上擷取文字資料，例如維基百科、新聞網站、社群媒體和書籍等等。擷取的資料包括了大量的自然語言文字，例如文章、評論、留言、社交媒體帖子等等。為了確保資料的品質，OpenAI 還使用了多種檢查和篩選機制，例如過濾掉低質量的網站、檢查資料的可信度和準確性等等。GPT-3還使用了多種公開的資料集和語言資源，例如Wikipedia、Common Crawl、BookCorpus等等，這些資料集包含大量的文本資料，可用於訓練模型並進行測試和驗證。</p>
<blockquote>
<p>但仍需 人工標注的指令 和 提示資料集</p>
</blockquote>
<h2 id="到底是使用甚麼模型-基於甚麼模式回答問題" tabindex="-1">到底是使用甚麼模型?基於甚麼模式回答問題? <a class="header-anchor" href="#到底是使用甚麼模型-基於甚麼模式回答問題" aria-label="Permalink to &quot;到底是使用甚麼模型?基於甚麼模式回答問題?&quot;">&ZeroWidthSpace;</a></h2>
<p>ChatGPT基於GPT-3模型，無須監督學習，從大量的文本資料中回答詢問問題，透過輸入的資料(提問)與資料(175B參數)算出一個向量參數，也就是算目前的問題與這個資料的距離，若找到最近距離的資料，則有可能是解答，在極大量的資料下，這個距離可以縮短至相當近的距離，即正解。</p>
<blockquote>
<p>可透過使用詞嵌入技術（Word Embedding）來實現，將每個單詞映射到一個高維向量空間中的一個向量，再將這些單詞向量結合起來，得到一個表示整個文本的向量。</p>
</blockquote>
<h2 id="目前的瓶頸或是限制" tabindex="-1">目前的瓶頸或是限制? <a class="header-anchor" href="#目前的瓶頸或是限制" aria-label="Permalink to &quot;目前的瓶頸或是限制?&quot;">&ZeroWidthSpace;</a></h2>
<p>1.回答的解答是否會違反知識產權? 2.回答的解答(來源)究竟是否有經過產出者的合意? 3.虛假訊息是否能高效的過濾，要用甚麼技術過濾?有誰能夠背書? 4.來源資料庫只到2021年，2022年後的趨勢及知識，無法提出回答。5.專業領域無法保證正確率，使用英文與中文提問，存在偏差。6.若非該領域熟悉者，無法分析此問題是否為該領域正確回答。</p>
<hr>
<blockquote>
<p>若指出錯誤，會馬上道歉，並給出建議，但建議有些是錯誤的(經過程式碼實測，例如請它做出輪播圖，卻有些參數漏了沒有給XD)</p>
</blockquote>
<h2 id="要以甚麼心態去看目前ai的趨勢" tabindex="-1">要以甚麼心態去看目前AI的趨勢? <a class="header-anchor" href="#要以甚麼心態去看目前ai的趨勢" aria-label="Permalink to &quot;要以甚麼心態去看目前AI的趨勢?&quot;">&ZeroWidthSpace;</a></h2>
<p>不需用悲觀的角度去看目前的趨勢發展，有句俗語說 打不贏就加入，若已形成趨勢，趨勢就不易改變，生為工程師，我們可以觀測這些AI是否可以對我們的工作提出貢獻，對它產出的解答進行優化，加快我們的工作效率。工程師除了要寫程式碼有產出之外，雙向溝通(與User、PM、SA)、時程規劃、通靈(判斷需求是否可行)，都非一朝一夕，AI可以取代的，身為一個技術職位，我們豈能跟新技術保持距離呢?說不定還能用AI寫個專案，發個大財呢~(開玩笑XD)，保持警覺吸取產業新知，並觀察是否有順風車可以搭乘，提升自己的技術力與薪資(出來混還是要討口飯吃的)</p>
<h2 id="要如何使用這項工具" tabindex="-1">要如何使用這項工具? <a class="header-anchor" href="#要如何使用這項工具" aria-label="Permalink to &quot;要如何使用這項工具?&quot;">&ZeroWidthSpace;</a></h2>
<p>基於觀察及體驗的角度，以下是個人一些提問上的統整。</p>
<p>1.若提問領域英文為主，就盡量用英文提問。2.提問可以層層提問，先由一個基礎問題，再慢慢發展，可以有更全面的認知。3.若是一個廣泛的問題，可以先以問題的核心開始提問。4.若回答相當的大量，可以設定角色回答。(我是一個高中生，請以我能聽懂的程度回答......) 5.縮減回答至關鍵要點(統整出簡單要點，10點每點50字內，等等...) 6.若是專業問題，可以改為專有名詞回答(使用XXX模型回答，導入某某格式，參考XXX名言等等...) 7.可以複製文章請它找出重點並由重點延伸回答。</p>
<hr>
<p>提供幾個好用的英文單句</p>
<div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span>Topics about X for the future ⇒ 用於未來式</span></span>
<span class="line"><span>Please elaborate more on XXX ⇒ 更加細化的分享某領域(展開)</span></span>
<span class="line"><span>Please recommend some methods or books ⇒ 推薦該領域實際書籍或方法</span></span>
<span class="line"><span>term project ,portfolio(學習歷程) ⇒ 可以設計出一段時間的學習歷程</span></span>
<span class="line"><span>Summary 最基礎的摘要</span></span>
<span class="line"><span>Plot 基本的情節</span></span>
<span class="line"><span>Detailed synopsis 概要(synopsis)</span></span>
<span class="line"><span>Quotes 直接抓出最值得參考的</span></span>
<span class="line"><span>With example 與範例一起顯示 ⇒ discussion questions for XXX with example answers</span></span>
<span class="line"><span>Table Topics ⇒ 表格話題</span></span>
<span class="line"><span>similar plots ⇒ 類似情節</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>若有更好的使用模式，也請提供給我喔~~</p>
<ul>
<li><a href="https://zh.wikipedia.org/zh-tw/OpenAI" target="_blank" rel="noreferrer">OpenAI wiki</a></li>
<li><a href="https://www.slidestalk.com/ai_algorithms/ChatGPT20232023277231656" target="_blank" rel="noreferrer">ChatGPT研究框架2023</a></li>
<li><a href="https://www.entrepreneur.com/science-technology/chatgpt-what-is-it-and-how-does-it-work/445014" target="_blank" rel="noreferrer">What Is It and How Does It Work?</a></li>
<li><a href="https://shop.wordup.com.tw/product/1022" target="_blank" rel="noreferrer">ChatGPT 未來式：從語言學習延伸到日常工作的高效 AI 工具</a></li>
</ul>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[面對複雜的需求時，應該...?]]></title>
            <link>https://www.aaron-shih.com/smallTalk/complexible-requirement-smalltalk</link>
            <guid>https://www.aaron-shih.com/smallTalk/complexible-requirement-smalltalk</guid>
            <pubDate>Sat, 11 Feb 2023 23:08:24 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="面對複雜的需求時-應該" tabindex="-1">面對複雜的需求時，應該...? <a class="header-anchor" href="#面對複雜的需求時-應該" aria-label="Permalink to &quot;面對複雜的需求時，應該...?&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/complexible-requirement-smalltalk.webp" alt="complexible-requirement-smalltalk" data-fancybox="gallery"></p>
<p>最近，寫了快大半年的公司系統，終於進入了最後的階段，幾經波折，在開發過程中，也遇到了許多的難點，趁記憶猶新時紀錄下來，統合思考一下，希望下次能少走點彎路。</p>
<h2 id="第一步-確認需求-功能-規模" tabindex="-1">第一步，確認需求(功能)規模 <a class="header-anchor" href="#第一步-確認需求-功能-規模" aria-label="Permalink to &quot;第一步，確認需求(功能)規模&quot;">&ZeroWidthSpace;</a></h2>
<p>由於這是轉換公司後的第一個多人協作的大專案，加上上頭時間給的蠻充裕，沒做太多想法，就草草的開工了，並沒有仔細的確認每個功能的關聯性，
開發到後面才發現原來有幾個功能是會互相影響的!!真的是麻煩大了，發現時也已經逼近收尾，真的是自己挖坑給自己跳...
應該在收到設計稿時，就要仔細的與設計師確認功能的規模及關連性，免得自己又要開夜車補救及重構QQ</p>
<h2 id="第二步-避免重複造輪子" tabindex="-1">第二步，避免重複造輪子 <a class="header-anchor" href="#第二步-避免重複造輪子" aria-label="Permalink to &quot;第二步，避免重複造輪子&quot;">&ZeroWidthSpace;</a></h2>
<p>由於專案的頁面眾多，且為多人協作的專案，難免有些重複的邏輯功能，例如搜尋、正逆向排序等，常常A與B同事有重複的邏輯，但大家都寫了一遍，
後來經過小組會議溝通後，將邏輯抽出共用，這樣若有需要維護並修改時，才不會要維護多個重複的程式片段，省時又省力。</p>
<h2 id="第三步-切頁面刻化邏輯時-多想一些邊緣案例" tabindex="-1">第三步，切頁面刻化邏輯時，多想一些邊緣案例 <a class="header-anchor" href="#第三步-切頁面刻化邏輯時-多想一些邊緣案例" aria-label="Permalink to &quot;第三步，切頁面刻化邏輯時，多想一些邊緣案例&quot;">&ZeroWidthSpace;</a></h2>
<p>由於專案有一個前後版號文本比對的功能，需要由前端建構出相關聯的巢狀邏輯，比對各項欄位是否有變化，且切換文本時，更新的文本內容不能變動，換回當文本時仍需保留暫存，
屬於相當複雜的一個大功能，當初在設計架構時，並沒有構思太多異常案例(覺得使用者提出的需求，自己應該清楚如何使用)，但寫的越深入，發現有許多邏輯會互相地衝突，且有些邊緣案例真的是會出現的，使用者體驗並不好，身為一個設計者，真的無法忍受，也是不斷地重構，但若在當初，能由使用者的角度出發，而不是設計者的角度出發，是不是就可以避免一些時間的消耗呢?
經歷過這次的經驗，程式寫的快，不如構思的仔細來的好，當然沒有程式是一開始就完美的，但我們應該以更多不同的角度或是投射在不同的角色去解決及思考。</p>
<h2 id="第四步-遇到卡關的地方-也許是真的需要休息一下了" tabindex="-1">第四步，遇到卡關的地方，也許是真的需要休息一下了 <a class="header-anchor" href="#第四步-遇到卡關的地方-也許是真的需要休息一下了" aria-label="Permalink to &quot;第四步，遇到卡關的地方，也許是真的需要休息一下了&quot;">&ZeroWidthSpace;</a></h2>
<p>在開發過程中，真的是遇到許多的關卡，很多思考上的盲點，常常苦思卻還是無法繞出迴路，同事提醒我，不用浪費時間在已經卡住的問題上，明天問題就解決了。
一開始並不是很了解這句話的意思，經歷過幾次後，發現其實不是自己不會寫，是腦袋累了跳不出那個迴圈，離開座位走個幾步，回家休息個一晚，過陣子再來看時，就發現了解決問題的方法(佛系coding也是很重要的)。硬想要寫，還是錯的那種感覺，真的是很痛苦XD，或是跟組員討論自己遇到的難點，在討論的過程中，也常常有靈光一閃的解決辦法。</p>
<h2 id="第五步-溝通比甚麼都重要" tabindex="-1">第五步，溝通比甚麼都重要 <a class="header-anchor" href="#第五步-溝通比甚麼都重要" aria-label="Permalink to &quot;第五步，溝通比甚麼都重要&quot;">&ZeroWidthSpace;</a></h2>
<p>有時候想說開發這個東西，應該對使用者體驗有所幫助，但提交給sa檢查時，卻被問說為什麼要多想這個東西呢?這不是與某一部分衝突了嗎?會不會反而造成困擾呢?
我才發現多做不一定是好的，應該先與設計師及架構師溝通，這究竟是不是feature，是不是在這個時間點應該實作的功能?還是可以在下一階段再開發呢?
多些溝通避免自己白做工，還沒有好果子吃QQ</p>
<h2 id="第六步-不要偷懶-不要偷應該要付出的時間" tabindex="-1">第六步，不要偷懶，不要偷應該要付出的時間 <a class="header-anchor" href="#第六步-不要偷懶-不要偷應該要付出的時間" aria-label="Permalink to &quot;第六步，不要偷懶，不要偷應該要付出的時間&quot;">&ZeroWidthSpace;</a></h2>
<p>在開發某部分功能時，擅自的想說這個地方可以省一點邏輯判斷的邏輯，就偷了一層的組件抽象實作，還沾沾自喜的想說，省了兩三天的開發時間，開心得很XD
但在一次的會談中，設計師改變了flow的走向，變得需要實作抽象了，真的是欲哭無淚，加上功能及接口都開好了，像是被打了一巴掌般，心裡有種熱辣辣個港覺，真的是不要偷懶，該開的就是要開XD</p>
<h2 id="第七步-重新過濾每個功能及邏輯" tabindex="-1">第七步，重新過濾每個功能及邏輯 <a class="header-anchor" href="#第七步-重新過濾每個功能及邏輯" aria-label="Permalink to &quot;第七步，重新過濾每個功能及邏輯&quot;">&ZeroWidthSpace;</a></h2>
<p>常常隨著開發時間的進行，程式碼庫越長越大，在不經意的情況下會許會使用一些不需要的變數及函式，刪刪減減，有些東西就這樣被遺忘了，但這並不是一個好現象，
程式庫應該是要時常回顧及改寫優化的，在每一次的優化及減化下，不論是時間複雜度或是程式碼的decode時間也會有所減少，且對自己的邏輯也會更有把握，透過不斷地重複去精煉自己的思考模式~</p>
<h2 id="結語" tabindex="-1">結語 <a class="header-anchor" href="#結語" aria-label="Permalink to &quot;結語&quot;">&ZeroWidthSpace;</a></h2>
<p>透過這次的開發，也是對程式開發有了新的認知，多思考多溝通，多方嘗試，不要先預設使用情境，畢竟程式設計師是以另一個視角去開發的，我們很難一次就勾勒出真實的使用情境!
不要害怕溝通，說不定會有意想不到的收穫~</p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[2022年度回顧]]></title>
            <link>https://www.aaron-shih.com/frontend/review2022</link>
            <guid>https://www.aaron-shih.com/frontend/review2022</guid>
            <pubDate>Fri, 30 Dec 2022 10:46:20 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><p>主要是想藉由回顧整年度發生的種種歷程，分析自己的學習歷程及評估是否繼續投資時間等等...
期望能在回顧的過程中，能獲的新的展望及想法!並規劃明年要達成得目標及展望!!
分成 技術學習、人生規劃、理財規劃、閱讀書籍 等大項探討~</p>
<h2 id="技術學習" tabindex="-1">技術學習 <a class="header-anchor" href="#技術學習" aria-label="Permalink to &quot;技術學習&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>前端
React 18
<ul>
<li>F2E 專案練習(檔案上傳及動態 landing page)。</li>
<li>學習 hooks 調用 useState 實作等。</li>
<li>useEffect 與 useLayoutEffect 差異性等新知理解。
Vue3</li>
<li>重新再看了一次文件。</li>
<li>reactive ref 等 核心實作理解。
Ts</li>
<li>針對聯集、和集等概念，理解集合應用在 ts 上的實作方式。</li>
<li>與 Vue3 專案的實際操作。
Tailwind</li>
<li>學習 tailwind 開發模式，並在 F2E 專案中使用。
CSS</li>
<li>學習新的屬性，並觀摩實作大量範例(CodePen)。
hexo blog</li>
<li>自行架設 blog，並維持每月更新的習慣。</li>
<li>應用 google 的 search console 與 Analytic 分析。
Story Book</li>
<li>文件導讀並在小組會議中分享</li>
<li>實作 Vue3+Story Book 的應用組件專案</li>
</ul>
</li>
<li>Devops<br>
Docker
<ul>
<li>udemy 課程學習</li>
<li>實際在 AMS 中操作 Docker container，並上架前後台應用的網站。
Jenkins / CI/CD</li>
<li>在公司專案中研究並撰寫流水線，修改各階段流程及最佳化部屬應用。</li>
<li>在自己的部落格中也使用gitHub CI/CD 達成自動化部屬。</li>
</ul>
</li>
<li>程式碼
<ul>
<li>學習函式設計調用並寫出一個diff json插件，並在公司專案上實際應用，比對物件間的差異性。</li>
<li>精煉自己的程式碼邏輯並減少通用宣告</li>
<li>爬了dom相關Api,釐清繼承與原型鏈的瀏覽器關聯，實際查找event api中的區別。</li>
<li>使用函式設計及閉包調用實作Array Api。</li>
<li>理解微任務與宏任務的相關差異，及瀏覽器實作方式。</li>
<li>五種Observer(瀏覽器)的使用方式及差異性</li>
<li>coData的學習及應用</li>
</ul>
</li>
</ul>
<h3 id="技術回顧總結" tabindex="-1">技術回顧總結 <a class="header-anchor" href="#技術回顧總結" aria-label="Permalink to &quot;技術回顧總結&quot;">&ZeroWidthSpace;</a></h3>
<p>一回顧下來，今年也是做了蠻多東西的，還接協助了一個Nuxt3的外部案件，學習到了很多專案經驗，
明年會針對Vue3+Ts有更深度的學習，深入理解底層的應用差異，並能更加流利的使用ts。並補足其餘前端知識。
明年的後期應會開始接觸後端相關知識。
例如:前端安全性、Web3應用技術、3D應用等。要學習的還很多很多，繼續努力!!!!</p>
<h2 id="理財規劃" tabindex="-1">理財規劃 <a class="header-anchor" href="#理財規劃" aria-label="Permalink to &quot;理財規劃&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>股市
<ul>
<li>尋找優質公司，並觀察總經趨勢操作。</li>
<li>使用均線及相關指標技巧尋找進出點位。</li>
<li>觀察個股趨勢走向，學習技術分析。</li>
<li>觀測三大法人走向</li>
</ul>
</li>
<li>期貨選擇權
<ul>
<li>不隨市場起舞，堅定意志。</li>
<li>不隨意進場，直到訊號出現。</li>
</ul>
</li>
<li>經濟指標
<ul>
<li>時時觀察相關先行指標變動數據。</li>
<li>觀測是否有重大事件發生、是否有後續影響。</li>
<li>關注美聯儲加息量縮、及數據公布等訊息收集。</li>
</ul>
</li>
</ul>
<h3 id="理財規劃總結" tabindex="-1">理財規劃總結 <a class="header-anchor" href="#理財規劃總結" aria-label="Permalink to &quot;理財規劃總結&quot;">&ZeroWidthSpace;</a></h3>
<p>在今年後段由於室友的推薦，學習了啟富達的財經課程，學習正確的理財投資技巧，並實際進入股市及期貨學習操作方式，
幾經浮沉，目前仍是小賠的階段XD，但也從中學到了如何正確操作及分析的方法，期許明年投資標的可以獲利，並訓練市場靈敏度!</p>
<h2 id="閱讀書籍" tabindex="-1">閱讀書籍 <a class="header-anchor" href="#閱讀書籍" aria-label="Permalink to &quot;閱讀書籍&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>經濟
<ul>
<li>經濟指標教你加減碼</li>
<li>投資金律</li>
</ul>
</li>
<li>技術
<ul>
<li>程式資料密集應用</li>
<li>SQL經典實例</li>
<li>Javascript 高級程序設計</li>
<li>Vue.js 的設計與實踐</li>
</ul>
</li>
<li>成長學習
<ul>
<li>代碼之外的生存指南</li>
<li>底層邏輯</li>
<li>人性的弱點</li>
<li>原子習慣</li>
<li>破框能力</li>
</ul>
</li>
</ul>
<h3 id="閱讀書籍總結" tabindex="-1">閱讀書籍總結 <a class="header-anchor" href="#閱讀書籍總結" aria-label="Permalink to &quot;閱讀書籍總結&quot;">&ZeroWidthSpace;</a></h3>
<p>明年會繼續維持閱讀習慣，找到值得學習的好書!書籍目標會往程式碼架構、測試等搜尋，心靈成長及如何與自己獨處等書籍也是目標之一，
還有與金錢相關的理財概念，也是值得投資時間的好夥伴!</p>
<h2 id="人生規劃" tabindex="-1">人生規劃 <a class="header-anchor" href="#人生規劃" aria-label="Permalink to &quot;人生規劃&quot;">&ZeroWidthSpace;</a></h2>
<p>在今年的3月初做了轉換跑道的決定，從原先的接案公司轉到了大架構及多人協作的大公司，真是開了眼界，前端組的成員們各個都有其優勢，組長的規劃力及分析專案的技巧，同事的多年開發經歷、技術上的差距，讓我覺得這個決定並沒有做錯，觀察自己與他們的差異性，並持續精進自己，讓我感到非常快樂。與其他組的協作方式也是跟小公司有所差異，架構的完整度則有雲泥之別，終於可以放心的下班了XD</p>
<p>短期的目標仍未有出現變化，仍會繼續加深自己的知識範圍及深度，往資深工程師方向前行，中期則會希望能前往其他國家或是與遠距辦公的機會，培養除了程式之外的第二專長(廚藝?)，花更少的時間賺取更多的效益，長期規劃希望能在垂垂老矣前，能夠完成自己的夢想清單XD。
人際交流上,維持與老朋友的聯繫，並時時互通有無，維持關聯性。新朋友則是保持開放的態度交流。<strong>人脈既是錢脈的</strong>
旅行遊玩則是，以不減少投資規劃的程度，去進行遊樂及休息。今年開始的健身項目，也會持續進行，但後續的教練課真的太貴，應該不會繼續投資。維持健康的體態並持續減下體脂肪也是明年的重要目標！</p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[Type 與 Interface 的差異]]></title>
            <link>https://www.aaron-shih.com/frontend/type-interface-diff</link>
            <guid>https://www.aaron-shih.com/frontend/type-interface-diff</guid>
            <pubDate>Thu, 15 Dec 2022 21:18:08 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><h1 id="type-與-interface-的差異" tabindex="-1">Type 與 Interface 的差異 <a class="header-anchor" href="#type-與-interface-的差異" aria-label="Permalink to &quot;Type 與 Interface 的差異&quot;">&ZeroWidthSpace;</a></h1>
<p>最近在學習TypeScript時，覺得Type跟Interface這兩種定義型別的方式，有種若即若離的關係，
定義型別何時要用type、何時要用Interface呢?自己也無法解釋的很清楚，於是想把在網路上找到的知識，
以及自己的實作做些統整，加深自己的記憶點。</p>
<h2 id="type" tabindex="-1">Type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;Type&quot;">&ZeroWidthSpace;</a></h2>
<p>定義型別的一種方法，可採用顯式的定義，也可使用隱式的類型推斷，常用來定義較為簡易的型別類型(較為推薦)，
對定義之型別，有較多的操作空間，TypeScript提供了許多工具類型的type供我們使用。可以表示原始類型、聯合類型、元組類型和物件類型。</p>
<div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//簡易地定義屬性</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Apple</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> string</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//以物件類型定義屬性</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Aaron</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  year</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  kind</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  IQ</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=>?</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">代表選填</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  ()</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> =></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 可以被執行</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  [</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">key</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">any</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> =></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">可以接受任何 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">index</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  new</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">aaron</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> =></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 可以被實例化</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  readonly</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> weight</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> =></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">只讀屬性</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> test</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">s</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">aaron</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">s</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">IQ</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">s</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">year</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> s</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> s</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'aaron'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//工具類型操作 getType</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> GetType</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">K</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> keyof</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">> </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">S</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> K</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">S</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> c</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> GetType</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">aaron</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'year'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //type c = {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //   year: number;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//工具類型操作 exclude</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//利用簡單型別的分配律，去除限制型別，可以把 extends視為限制的關鍵，T 必須符合 K 的條件。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ExcludeType</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">K</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">> </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">  T</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> K</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  never</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> T</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ExcludeType</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'year'</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> |</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'age'</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF"> |</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'now'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'year'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">> </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// age,now</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//去除readOnly屬性 -號可以去除modified修飾詞，預設是+readonly，不用+是因為ts編譯時幫我們加上去了。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Book</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  readonly</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> buyYear</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  readonly</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> kind</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  readonly</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> cost</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ReadonlyRemove</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">> </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">-</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">readonly</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">S</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> keyof</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ]</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">S</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> ReadonlyRemove</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">Book</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h2 id="interface" tabindex="-1">Interface <a class="header-anchor" href="#interface" aria-label="Permalink to &quot;Interface&quot;">&ZeroWidthSpace;</a></h2>
<p>用來形容或描述物件的結構或屬性的型別，也因為Js有許多物件結構的描述，較能用來描述這些預設的js行為~</p>
<div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> myInterFace</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  [</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">propname</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">any</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  say</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> myInterFace</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  gender</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> obj</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">myInterFace</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'123'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">12</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  gender</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'12312313123'</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//定義class時 可以使用 interface規範 所需的屬性</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Myclass</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(實現) </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">myInterFace</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 繼承(擴充)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Myclass</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> myInterFace</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//當然也可以這樣使用</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> cake</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">K</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  cost</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  size</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">K</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">cake</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">> </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  cost</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">18</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  size</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"big"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p><strong>補充 [key:string|number|symbol] 若建立key必須符合以下型別，不然會ERROR。</strong></p>
<h2 id="type-vs-interface" tabindex="-1">Type vs Interface <a class="header-anchor" href="#type-vs-interface" aria-label="Permalink to &quot;Type vs Interface&quot;">&ZeroWidthSpace;</a></h2>
<p><strong>與interface的差異在於無法重複覆值，沒有overload特性及merging特性，並且不能繼承實作物件與其屬性。</strong>
而且語意上也有些需差異，需要多方評估後挑適合的使用。</p>
<div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Aaron</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">year</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">} &#x3C;-顯式定義</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Aaron</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">kind</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">} &#x3C;- </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">Duplicate</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> identifier</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'Aaron'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 無法合併</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Hellen</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">year</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Hellen</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">kind</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">} &#x3C;- </span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">Hellen</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">屬性中有</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">year</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">height</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">kind</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> =></span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> merging</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 合併了</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> cake</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  cost</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  size</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  match</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">s</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">void</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//overload</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">  match</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">s</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//overload</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> testOne</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">cake</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//  return a.match('s') // string</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> a</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">match</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">18</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//number</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//例如 哪一個更符合座標物件的型別描述呢?</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Point</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B"> Point</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    x</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    y</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>簡單下個結論，就是使用前先思考要定義的是原始的型別，亦或是物件型別，若是物件型別是否需要操作其中的屬性，
還是單純的表示構造屬性，若需要操作就可以考慮type，反之則可以使用interface做為表示~</p>
<p>若有不同的看法，歡迎在下方留言~</p>
<p><a href="https://www.typescriptlang.org/cheatsheets" target="_blank" rel="noreferrer">TypeScript官網描述</a>
<a href="https://basarat.gitbook.io/typescript" target="_blank" rel="noreferrer">TypeScript DeepDive</a></p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[網頁的效能指標及優化]]></title>
            <link>https://www.aaron-shih.com/frontend/web-performance</link>
            <guid>https://www.aaron-shih.com/frontend/web-performance</guid>
            <pubDate>Thu, 15 Dec 2022 21:18:08 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><h1 id="知道網頁有哪些效能指標嗎" tabindex="-1">知道網頁有哪些效能指標嗎? <a class="header-anchor" href="#知道網頁有哪些效能指標嗎" aria-label="Permalink to &quot;知道網頁有哪些效能指標嗎?&quot;">&ZeroWidthSpace;</a></h1>
<p>常常聽到網頁開發撰寫功能時，需要顧及效能及優化網頁效率等用詞，但我們真的知道如何去改善這些指標嗎?更進一步的說我們知道指標到底有那些嗎?
這些指標又各自代表著甚麼意義，需要我們如何調校呢?接下來我們一一的介紹並分析這些指標吧~</p>
<h2 id="效能對使用者來說" tabindex="-1">效能對使用者來說? <a class="header-anchor" href="#效能對使用者來說" aria-label="Permalink to &quot;效能對使用者來說?&quot;">&ZeroWidthSpace;</a></h2>
<p>對使用者來說，網站的優劣，其實也不難分辨，就是網站載入的速度，使用上的流程體感是否順暢，頁面功能都能正常使用，畫面不會有跑版的情況發生，就已經足夠了。但這些簡單的評估方法，也就包含了許多的效能指標~</p>
<h2 id="first-contentful-paint-首次內容加載、繪製時間" tabindex="-1">First Contentful Paint(首次內容加載、繪製時間) <a class="header-anchor" href="#first-contentful-paint-首次內容加載、繪製時間" aria-label="Permalink to &quot;First Contentful Paint(首次內容加載、繪製時間)&quot;">&ZeroWidthSpace;</a></h2>
<p>首次内容繪製 (FCP) 指標即测量頁面從開始加載到頁面内容(包含文本、圖片、canvas等...)的任何部分在視窗上完成渲染的時間，<strong>但並非是所有內容。</strong>
一個好的網頁FCP應該在1.8內被繪製，換句話說，即是在1.8秒內有任意內容被繪製到網頁上，讓使用者可以看到內容。</p>
<p>FCP可以使用F12的燈塔觀察，或是使用第三方套件測量，js也有提供相關效能api可供檢測，但有些特殊形況，可能會造成差異，需要特別注意。</p>
<blockquote>
<p>優化FCP方法:</p>
<ol>
<li>消除阻塞渲染的资源(小心重排與垂繪)</li>
<li>壓縮 CSS 大小(加載的速度)</li>
<li>移除未使用的 CSS(tree shaking)</li>
<li>預連接到所需的来源</li>
<li>避免巨大的網路負載</li>
<li>Dom的大小控制</li>
<li>關鍵請求數的控制(瀏覽器有上限，超過就要等待回傳)</li>
</ol>
</blockquote>
<h2 id="largest-contentful-paint-最大内容繪製、最大視覺元素載入的时間" tabindex="-1">Largest Contentful Paint 最大内容繪製、最大視覺元素載入的时間 <a class="header-anchor" href="#largest-contentful-paint-最大内容繪製、最大視覺元素載入的时間" aria-label="Permalink to &quot;Largest Contentful Paint 最大内容繪製、最大視覺元素載入的时間&quot;">&ZeroWidthSpace;</a></h2>
<p>依據頁面首次開始加載的時間點来報告可視區域内可見的最大圖像或文本內容完成渲染的相對時間。
對於SEO来说最重要的指標~! 應在2.5秒内完成最大內容繪製，也就是讓使用者能盡快的看到網頁的重點圖像或文本。
載入的時間越快，則越能容易讓使用者留下使用。<strong>注意在加載時，若當前元素被移除，則會重新計算加載時間</strong></p>
<blockquote>
<p>優化LCP方法:</p>
<ol>
<li>優化<a href="https://developer.mozilla.org/zh-CN/docs/Web/Performance/Critical_rendering_path" target="_blank" rel="noreferrer">關鍵渲染路徑</a>(CSSOM+DOM+布局等)</li>
<li>優化css(不使用會重新計算的屬性)</li>
<li>優化圖像(圖像大小控制、暫存等等..)</li>
<li>優化js(控制js行數，使布局可以更快被運算出來)</li>
</ol>
</blockquote>
<h2 id="first-input-delay-首次輸入延遲" tabindex="-1">First Input Delay 首次輸入延遲 <a class="header-anchor" href="#first-input-delay-首次輸入延遲" aria-label="Permalink to &quot;First Input Delay 首次輸入延遲&quot;">&ZeroWidthSpace;</a></h2>
<p>計算使用者第一次與網頁互動(點擊連結、點開下拉選單、填表格…etc)時的延遲時間。也就是使用者互動後產生反應的所需時間。
良好的輸入延遲應該控制在100毫秒內。主線程的任何處理都有可能影響此數值，需要好好控管，畢竟這代表該網站的第一印象。</p>
<blockquote>
<p>優化FID方法:</p>
<ol>
<li>減少第三方代碼的影響</li>
<li>减少 JavaScript 執行時間</li>
<li>最小化主線程工作</li>
<li>保持較低的HTTP請求數和較小的傳輸內容大小</li>
</ol>
</blockquote>
<h2 id="time-to-interactive-可交互時間-tti" tabindex="-1">Time to Interactive 可交互時間 (TTI) <a class="header-anchor" href="#time-to-interactive-可交互時間-tti" aria-label="Permalink to &quot;Time to Interactive 可交互時間 (TTI)&quot;">&ZeroWidthSpace;</a></h2>
<p>從開始加載到主要子資源完成渲染，並能夠快速、可靠地響應使用者輸入所需的時間。
良好的TTI應控制在五秒內，在SSR框架中因為頁面注入的時間較快，常導致頁面出現但功能無法執行的窘境，也是導致使用者耐心下降的原因之一。
為了解決這個問題有新的技術出現，例如<a href="https://juejin.cn/post/7155300194773860382" target="_blank" rel="noreferrer">孤島架構</a>，讓核心葉面組件，可以有更快的TTI，並兼顧SEO~</p>
<blockquote>
<p>優化TTI方法:</p>
<ol>
<li>減少關鍵請求數量與大小</li>
<li>減少第三方代碼的影響</li>
<li>減少js執行時間</li>
<li>預加載資源</li>
</ol>
</blockquote>
<h2 id="total-blocking-time-總阻塞时间-tbt" tabindex="-1">Total Blocking Time 總阻塞时间 (TBT) <a class="header-anchor" href="#total-blocking-time-總阻塞时间-tbt" aria-label="Permalink to &quot;Total Blocking Time 總阻塞时间 (TBT)&quot;">&ZeroWidthSpace;</a></h2>
<p>意指FCP到TTI之間，主線程”塞住”的時間加總。也就是阻塞主線程并影響页面可用性的時間長短。
若主線程被阻塞超過50毫秒，就有可能會造成使用者的體驗下降。良好的TBT應控制在300毫秒內。</p>
<blockquote>
<p>優化TBT方法:</p>
<ol>
<li>減少關鍵請求數量與大小</li>
<li>減少第三方代碼的影響</li>
<li>減少js執行時間</li>
</ol>
</blockquote>
<h2 id="cumulative-layout-shift-累積布局偏移-cls" tabindex="-1">Cumulative Layout Shift 累積布局偏移 (CLS) <a class="header-anchor" href="#cumulative-layout-shift-累積布局偏移-cls" aria-label="Permalink to &quot;Cumulative Layout Shift 累積布局偏移 (CLS)&quot;">&ZeroWidthSpace;</a></h2>
<p>衡量頁面點擊某些内容位置發生偏移後对頁面造成的影響，<strong>CLS 為整個頁面生命周期內發生的所有意外布局偏移中最大的布局偏移分數。</strong>
良好的CLS應控制在0.1以下。只要可視區域中可見元素的起始位置在兩帧之间發生了變更，這样的元素被視为不穩定元素。若要改變起始位置，可以使用transform屬性取代。</p>
<blockquote>
<p>優化CLS方法:</p>
<ol>
<li><strong>始终在您的圖片和視頻元素上包含尺寸属性，或通過使用CSS 長寬比容器之類的方式預留所需的空間</strong>這種方法可以確保瀏覽器能夠在加載圖片期間在文檔中分配正确的空間大小。請</li>
<li><strong>非到必要切勿在現有內容的上方插入内容</strong>確保發生的任何布局偏移都在預期中。</li>
<li>多使用transform屬性，而非是那些會觸發<a href="https://web.dev/debug-layout-shifts/" target="_blank" rel="noreferrer">偏移的屬性</a>。</li>
</ol>
</blockquote>
<h2 id="結論" tabindex="-1">結論 <a class="header-anchor" href="#結論" aria-label="Permalink to &quot;結論&quot;">&ZeroWidthSpace;</a></h2>
<p>在這些指標中，有幾個共通的重點，例如:請求的數量與大小，第三方套件的影響，布局重排重繪的時間，等等...都是我們開發者必須去注意的!
我們可以善用打包工具與框架套件的優勢，去優化這些指標，將這些要點放入我們的日常開發中，這樣網站就會更加可靠~</p>
<p>參考資料:
<a href="https://web.dev/user-centric-performance-metrics/" target="_blank" rel="noreferrer">google dev</a></p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[如何操作複雜的物件結構]]></title>
            <link>https://www.aaron-shih.com/frontend/obj-constructure</link>
            <guid>https://www.aaron-shih.com/frontend/obj-constructure</guid>
            <pubDate>Sat, 26 Nov 2022 00:45:20 GMT</pubDate>
            <description><![CDATA[<PageInfo/><h1 id="如何操作複雜的物件結構" tabindex="-1">如何操作複雜的物件結構 <a class="header-anchor" href="#如何操作複雜的物件結構" aria-label="Permalink to &quot;如何操作複雜的物件結構&quot;">&ZeroWidthSpace;</a></h1>
<p>在開發過程中，前端工程師們常常會遇到許多複雜的資料結構，結構與頁面的抽象及邏輯成正比，簡單來說，越複雜的結構就反應越複雜的頁面邏輯，當我們看到這些結構可以做哪些方法，去優化、簡化這些結構，來增加我們的開發效率並降低心智負擔呢?畢竟看到層層疊疊的物件及陣列，相信正常人的頭都會隱隱作痛XD
下面我們就來依序介紹:</p>
<blockquote>
<p>1.處理方法(Api工具) 2.邏輯拆解(思考資料結構拆分) 3.組合及優化(解題)</p>
</blockquote>
<h2 id="處理方法" tabindex="-1">處理方法 <a class="header-anchor" href="#處理方法" aria-label="Permalink to &quot;處理方法&quot;">&ZeroWidthSpace;</a></h2>
<p>通常複雜的資料結構不免俗的就是物件及陣列的巢狀嵌套，要先來了解有哪些方法可以幫助我們處理，並用方法把目標解構出來吧!!</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>]]></description>
            <content:encoded><![CDATA[<PageInfo/><h1 id="如何操作複雜的物件結構" tabindex="-1">如何操作複雜的物件結構 <a class="header-anchor" href="#如何操作複雜的物件結構" aria-label="Permalink to &quot;如何操作複雜的物件結構&quot;">&ZeroWidthSpace;</a></h1>
<p>在開發過程中，前端工程師們常常會遇到許多複雜的資料結構，結構與頁面的抽象及邏輯成正比，簡單來說，越複雜的結構就反應越複雜的頁面邏輯，當我們看到這些結構可以做哪些方法，去優化、簡化這些結構，來增加我們的開發效率並降低心智負擔呢?畢竟看到層層疊疊的物件及陣列，相信正常人的頭都會隱隱作痛XD
下面我們就來依序介紹:</p>
<blockquote>
<p>1.處理方法(Api工具) 2.邏輯拆解(思考資料結構拆分) 3.組合及優化(解題)</p>
</blockquote>
<h2 id="處理方法" tabindex="-1">處理方法 <a class="header-anchor" href="#處理方法" aria-label="Permalink to &quot;處理方法&quot;">&ZeroWidthSpace;</a></h2>
<p>通常複雜的資料結構不免俗的就是物件及陣列的巢狀嵌套，要先來了解有哪些方法可以幫助我們處理，並用方法把目標解構出來吧!!</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">條件篩選</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> ary</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] ;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> aryMap</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'aaron'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'joy'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">1.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">filter</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 遍歷目標陣列篩選出符合條件的物件，並回傳陣列。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ary</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">filter</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">num</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">num</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">></span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">2.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">find</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  遍歷目標陣列篩選出符合條件的物件，並回傳物件。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">aryMap</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">find</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">d</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">d</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">===</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'aaron'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'aaron'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">3.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">findIndex</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 遍歷目標陣列篩選出符合條件的物件，並回傳目標索引。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ary</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">findIndex</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">num</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">num</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">></span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (找到目標後</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">就停止遍歷。)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">4.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 遍歷目標陣列篩選出符合條件的物件，並回傳布林值。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">aryMap</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">includes</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">d</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> d</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'jack'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">5.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">indexOf</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  回傳目標陣列中第一個被找到的索引值，若不存在則會回傳</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ary</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">indexOf</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)  </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">資料重組</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">1.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 遍歷陣列依照設定格式，回傳陣列。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ary</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">({</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">num</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">})) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">num</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">num</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">2.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">reduce</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 遍歷陣列依照閉包設定格式，回傳陣列、或物件。(非常重要</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">可以組出任意元素)</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ary</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">reduce</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">acc</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">cur</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  acc</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'id'</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'!'</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> acc</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'id1!'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'id2!'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'id3!'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'id4!'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'id5!'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>以上的方法，有些是以閉包模式傳遞，並在內部遞迴後回傳出來，相當地有趣，筆者會在最後附上相關的實現內容，有興趣的話可以自己實做看看!會對這些方法的操作更加的熟悉!</p>
<p>不知道有沒有一個疑問，那就是上方都是陣列的方法，那物件呢?陣列的原型方法沒法使用阿!?
物件原型方法上的篩選methods的確很少XD，但我們可以把物件轉成陣列模式操作啊!</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> obj</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'123'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'234'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">c</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'345'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">keys</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 回傳物件</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">key</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">值陣列</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">keys</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">obj</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'a'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'b'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'c'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">values</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 回傳物件</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">值陣列</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">values</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">obj</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'123'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> '234'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> '345'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>看到這個模式是否燃燒起你的小宇宙了呢!!我們來合體操作看看吧!</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> obj2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'aaron'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'joke'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'mindy'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">values</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">obj2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">filter</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">d</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">d</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">===</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'mindy'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 'mindy'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="邏輯拆解" tabindex="-1">邏輯拆解 <a class="header-anchor" href="#邏輯拆解" aria-label="Permalink to &quot;邏輯拆解&quot;">&ZeroWidthSpace;</a></h2>
<p>找出我們所需的關鍵資料的一個想法或概念,我們可以透過畫出flow，去嘗試構思哪些資料是我們所需的，且在解題時為必要，
透過這些拆分，我們可以把複雜的資料給拆解出細小原子，在不斷的組合起來。</p>
<h2 id="解題" tabindex="-1">解題 <a class="header-anchor" href="#解題" aria-label="Permalink to &quot;解題&quot;">&ZeroWidthSpace;</a></h2>
<p>在熟悉這些組合操作後，我們來挑戰一題較為困難的題目吧!</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> memberList</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    member</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Alex"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    id</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    score</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 85</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    order</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"A"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "C"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "D"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "B"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "E"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    member</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "jabo"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    id</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    score</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 83</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    order</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"C"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "A"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "D"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "E"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "B"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    member</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "aaron"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    id</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    score</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 80</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    order</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"A"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "D"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "E"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "B"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "C"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    member</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "phobe"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    id</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    score</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 90</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    order</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"D"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "A"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "C"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "E"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "B"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    member</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "celia"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    id</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    score</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 60</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    order</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"C"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "A"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "B"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "D"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "E"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">Ｑ：按照分數高低，最後導出使用者的希望組別，組別不可以重複</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">memberList</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">sort</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">score</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">score</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//先照高分順序排序</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//按照 組別分組</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> groupBox</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> memberList</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">reduce</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">acc</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> cur</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> i</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  i</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x26;&#x26;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> cur</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">order</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">d</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">acc</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">d</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [])); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//先將組別放入物件中，並將值設為陣列</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  cur</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">order</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">d</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    acc</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">d</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">d</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> cur</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">member</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> cur</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">score</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> hopeIndex</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> }); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//依照順序送入陣列中</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  });</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> acc</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> map</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> pointer</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//指針移動推入希望組別</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">while</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">pointer</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> memberList</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">key</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> groupBox</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    map</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">groupBox</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">key</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">][</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">pointer</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//此時的map陣列中就是按照分數高低及使用者意願的順序</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    pointer</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">但這解法有一個問題，就是</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">for</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 並保證</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">key</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">順序，若為重要資料陣列，建議還是另外保存索引值，較為理想喔</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">!</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><p>若有更有趣的實現方式，歡迎在下方留言~</p>
<p><a href="https://github.com/eepson123tw/DeepLearnJs/blob/master/10%E8%B3%87%E6%96%99%E7%B5%90%E6%A7%8B%E6%93%8D%E4%BD%9C%E5%8F%8A%E5%AF%A6%E7%8F%BE/arrayApi.js" target="_blank" rel="noreferrer">陣列實現</a>
<a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Statements/for...in" target="_blank" rel="noreferrer">for in</a></p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[實作一個可視區域導讀提醒]]></title>
            <link>https://www.aaron-shih.com/frontend/intersection-observer-api</link>
            <guid>https://www.aaron-shih.com/frontend/intersection-observer-api</guid>
            <pubDate>Sat, 05 Nov 2022 00:08:25 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><h1 id="實作一個可視區域導讀提醒" tabindex="-1">實作一個可視區域導讀提醒 <a class="header-anchor" href="#實作一個可視區域導讀提醒" aria-label="Permalink to &quot;實作一個可視區域導讀提醒&quot;">&ZeroWidthSpace;</a></h1>
<p>在前端的開發過程中，常需要在某個視覺區塊進入頁面的可視範圍時，讓頁面進行某些變化，我們會使用一些第三方的套件庫，但第三方的套件庫可能相當龐大，或是使用上來說並沒有那麼直覺，那有沒有其他更便利方法呢？</p>
<h2 id="intersection-observer" tabindex="-1">Intersection Observer <a class="header-anchor" href="#intersection-observer" aria-label="Permalink to &quot;Intersection Observer&quot;">&ZeroWidthSpace;</a></h2>
<p>原生的 Api，可以用來觀測頁面元素與可見區域相交部分的比例，然後可以在達到比例時觸發 callback。
常被用來在圖片的 lazyLoading，內容的無限滾動，及自動播放影片或音檔等功能。</p>
<h2 id="參數" tabindex="-1">參數 <a class="header-anchor" href="#參數" aria-label="Permalink to &quot;參數&quot;">&ZeroWidthSpace;</a></h2>
<p><code>IntersectionObserver(callback， options)</code>  接受兩個參數：</p>
<ul>
<li><code>callback</code>： 當指定重疊條件發生時要執行的 callback 函式。</li>
<li><code>options</code>：
<ul>
<li><code>root</code>：欲觀察的 root 元素，不特別指定或是  <code>null</code>  時等於瀏覽器的可視範圍 (browser viewport)。</li>
<li><code>rootMargin</code>：用來改變 root 元素觀察的範圍。</li>
<li><code>threshold</code>：Target(目標元素) 的可見程度。可帶入浮點數或浮點數的 array，ex <code>[0， 0.25， 0.5， 0.75， 1]</code>，每當 target 的可見程度高於 threshold 時，<code>callback</code>  就會被頻繁地觸發， 也就是每 25% 或者减少 25% 的时候都通知一次。可看需求變動。</li>
</ul>
</li>
</ul>
<h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> options</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  root</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">querySelector</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'#scrollArea'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  rootMargin</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> '0px'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  threshold</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> observer</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> IntersectionObserver</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> options</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> target</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">querySelector</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'#listItem'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">observer</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">observe</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">target</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h1 id="實際使用案例" tabindex="-1">實際使用案例 <a class="header-anchor" href="#實際使用案例" aria-label="Permalink to &quot;實際使用案例&quot;">&ZeroWidthSpace;</a></h1>
<p>筆者希望能夠模擬出閱讀網站的功能，即在當前閱讀區域時，可以在 menu list 標記閱讀區塊及變動 URL。</p>
<blockquote>
<p><code>實現程式碼使用 vue3，可貼上下方程式碼，觀看變化</code></p>
</blockquote>
<div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">&#x3C;!</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">DOCTYPE</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> html</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> lang</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> charset</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> http-equiv</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"X-UA-Compatible"</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> content</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"IE=edge"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> name</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> content</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> src</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"https://unpkg.com/vue@3/dist/vue.global.js"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>Document&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">style</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    *</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      margin</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      padding</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      list</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">style</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">none</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      box</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">sizing</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">border</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">box</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    body</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      display</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">flex</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      justify</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">content</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">center</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      align</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">items</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">center</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      background</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: #</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">aaa</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    .container</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      height</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: 2500</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    h1</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      font</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">size</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: 5</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">rem</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    p</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      font</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">size</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: 1</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">rem</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      line</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    .menu</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      position</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">fixed</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      top</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      right</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      width</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: 200</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      height</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: 200</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      background</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: #</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">fff</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    .menu ul</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      display</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">flex</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      flex</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">direction</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">column</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      background</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: #</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">aaa</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      height</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    .menu ul li</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      flex</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">grow</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      text</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">align</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">center</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      display</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">flex</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      align</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">items</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">center</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      justify</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">content</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">center</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      background</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:#</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">ccc</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      color</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: #</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">fff</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    a</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      text</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">decoration</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">none</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      color</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">inherit</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    .menu ul li.active a</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      color</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">red</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      font</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">weight</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">900</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">style</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> class</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"container"</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"app"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> class</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"menu"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">ul</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> v-if</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"ary.length"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">li</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> v-for</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"(item,idx) of ary"</span><span style="--shiki-light:#B392F0;--shiki-dark:#FFFFFF"> :class="`${item}`"></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#FFFFFF">          &#x3C;a</span><span style="--shiki-light:#B392F0;--shiki-dark:#FFFFFF"> :href="`#${item}`"></span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD"> {</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#B392F0;--shiki-dark:#FFFFFF">&#x3C;/a></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#FFFFFF">        &#x3C;/li></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#FFFFFF">      &#x3C;/ul></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#FFFFFF">    &#x3C;/div></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#FFFFFF">    &#x3C;div</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> class</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"div title1"</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"title1"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>title1&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Odio aspernatur iure esse vero eveniet quam, laudantium optio facere voluptate, autem ratione nihil dolorem veritatis non unde repellendus in maiores explicabo suscipit. Omnis quisquam tempora eum doloribus repellendus deserunt architecto, corrupti est, odit accusamus repellat ipsa voluptas quis nesciunt. Quos nostrum dolor, ratione, facere quis quibusdam nemo, vitae temporibus delectus voluptate odit eius debitis earum atque minus suscipit reiciendis. Perspiciatis cupiditate corporis nam dolore tempore molestias exercitationem nesciunt optio provident fugiat suscipit libero earum ea, modi nulla, quas delectus veniam, doloremque necessitatibus inventore. Ratione mollitia sequi architecto labore dolores magni omnis tenetur provident. Debitis praesentium tempora sit rerum! Eaque eum, sunt nesciunt voluptatem magni, nihil impedit dolorum nostrum assumenda eos at corrupti velit nam omnis quaerat esse iste dolorem? Exercitationem accusantium sint harum, ab nesciunt alias velit eveniet soluta sequi, nulla, facilis aliquid expedita modi possimus sit. Explicabo eveniet voluptates quis amet voluptas deleniti dolor, nostrum fugit error labore omnis exercitationem iste impedit saepe tempore nulla earum sequi aspernatur ratione harum! Magni autem quam magnam alias fuga nemo, quibusdam aliquid? Maxime adipisci eligendi eius ab repellat, iste aliquid illo provident similique obcaecati fuga animi quibusdam, quidem in numquam molestiae minus mollitia sequi veniam placeat molestias voluptates ex totam! Maiores veritatis cumque doloribus quas dolores illo facere deleniti in, perferendis, ea, facilis porro. Dignissimos vitae, nesciunt velit nostrum iste iure labore tempore consectetur ducimus exercitationem recusandae voluptas blanditiis ut aut, accusamus pariatur voluptates rerum consequatur qui assumenda vel provident neque? Delectus reiciendis incidunt molestiae iusto ea officia itaque ipsum at doloremque hic dolorem eius atque sunt, corporis, magni deleniti sint odit optio fuga. Ratione expedita eligendi magni voluptate alias delectus totam tempora veritatis, qui itaque? Tenetur ea quam quisquam deleniti itaque asperiores nesciunt, culpa nam dolorum voluptate amet ducimus exercitationem laborum, temporibus optio! Minima reprehenderit ipsum sit quisquam, ipsam est voluptates recusandae adipisci, a voluptas perspiciatis officiis, quibusdam eos? Dicta facere modi voluptatem inventore? Odit a repellendus corrupti atque porro nostrum perferendis possimus, repudiandae quas incidunt enim maiores ea distinctio ad est quaerat. Explicabo suscipit laborum, ea amet in id quis consequatur odio quo perferendis nihil quia necessitatibus nostrum quam vero laudantium iusto tempora voluptate nulla. Corrupti perferendis culpa, similique praesentium saepe sint porro! Vero unde illum tempore dolore, eaque saepe voluptate repellat similique commodi eos doloremque nulla quos itaque tenetur enim, error culpa fuga quisquam laborum? Earum, corporis, libero quo voluptatibus voluptatem odio dignissimos aliquid nam ea esse vel eveniet, similique recusandae. Nesciunt quasi tenetur aperiam laboriosam consectetur aut quae soluta reprehenderit deserunt, dolore ratione ipsum fugiat! Accusamus a vel delectus repellat laudantium dignissimos reprehenderit eveniet, ipsum dolorem placeat labore tenetur accusantium tempora beatae aperiam commodi eligendi inventore velit. Esse repellendus deleniti rerum praesentium! Soluta ipsam dolore quod suscipit corrupti cum doloribus iure voluptatem alias accusamus molestias maiores sint excepturi magni magnam labore, accusantium adipisci aspernatur, quidem dolores perspiciatis saepe repellendus rem? Repudiandae, maiores culpa sequi voluptates distinctio quae explicabo mollitia ea repellat, cum ipsam adipisci aliquam accusantium perferendis nobis beatae.&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quidem eveniet architecto rerum amet corrupti velit tempore odit placeat, impedit, nisi eligendi? At excepturi reiciendis ab tempore voluptas voluptatum aperiam nisi.&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> class</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"div title2"</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"title2"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>title2&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Odio aspernatur iure esse vero eveniet quam, laudantium optio facere voluptate, autem ratione nihil dolorem veritatis non unde repellendus in maiores explicabo suscipit. Omnis quisquam tempora eum doloribus repellendus deserunt architecto, corrupti est, odit accusamus repellat ipsa voluptas quis nesciunt. Quos nostrum dolor, ratione, facere quis quibusdam nemo, vitae temporibus delectus voluptate odit eius debitis earum atque minus suscipit reiciendis. Perspiciatis cupiditate corporis nam dolore tempore molestias exercitationem nesciunt optio provident fugiat suscipit libero earum ea, modi nulla, quas delectus veniam, doloremque necessitatibus inventore. Ratione mollitia sequi architecto labore dolores magni omnis tenetur provident. Debitis praesentium tempora sit rerum! Eaque eum, sunt nesciunt voluptatem magni, nihil impedit dolorum nostrum assumenda eos at corrupti velit nam omnis quaerat esse iste dolorem? Exercitationem accusantium sint harum, ab nesciunt alias velit eveniet soluta sequi, nulla, facilis aliquid expedita modi possimus sit. Explicabo eveniet voluptates quis amet voluptas deleniti dolor, nostrum fugit error labore omnis exercitationem iste impedit saepe tempore nulla earum sequi aspernatur ratione harum! Magni autem quam magnam alias fuga nemo, quibusdam aliquid? Maxime adipisci eligendi eius ab repellat, iste aliquid illo provident similique obcaecati fuga animi quibusdam, quidem in numquam molestiae minus mollitia sequi veniam placeat molestias voluptates ex totam! Maiores veritatis cumque doloribus quas dolores illo facere deleniti in, perferendis, ea, facilis porro. Dignissimos vitae, nesciunt velit nostrum iste iure labore tempore consectetur ducimus exercitationem recusandae voluptas blanditiis ut aut, accusamus pariatur voluptates rerum consequatur qui assumenda vel provident neque? Delectus reiciendis incidunt molestiae iusto ea officia itaque ipsum at doloremque hic dolorem eius atque sunt, corporis, magni deleniti sint odit optio fuga. Ratione expedita eligendi magni voluptate alias delectus totam tempora veritatis, qui itaque? Tenetur ea quam quisquam deleniti itaque asperiores nesciunt, culpa nam dolorum voluptate amet ducimus exercitationem laborum, temporibus optio! Minima reprehenderit ipsum sit quisquam, ipsam est voluptates recusandae adipisci, a voluptas perspiciatis officiis, quibusdam eos? Dicta facere modi voluptatem inventore? Odit a repellendus corrupti atque porro nostrum perferendis possimus, repudiandae quas incidunt enim maiores ea distinctio ad est quaerat. Explicabo suscipit laborum, ea amet in id quis consequatur odio quo perferendis nihil quia necessitatibus nostrum quam vero laudantium iusto tempora voluptate nulla. Corrupti perferendis culpa, similique praesentium saepe sint porro! Vero unde illum tempore dolore, eaque saepe voluptate repellat similique commodi eos doloremque nulla quos itaque tenetur enim, error culpa fuga quisquam laborum? Earum, corporis, libero quo voluptatibus voluptatem odio dignissimos aliquid nam ea esse vel eveniet, similique recusandae. Nesciunt quasi tenetur aperiam laboriosam consectetur aut quae soluta reprehenderit deserunt, dolore ratione ipsum fugiat! Accusamus a vel delectus repellat laudantium dignissimos reprehenderit eveniet, ipsum dolorem placeat labore tenetur accusantium tempora beatae aperiam commodi eligendi inventore velit. Esse repellendus deleniti rerum praesentium! Soluta ipsam dolore quod suscipit corrupti cum doloribus iure voluptatem alias accusamus molestias maiores sint excepturi magni magnam labore, accusantium adipisci aspernatur, quidem dolores perspiciatis saepe repellendus rem? Repudiandae, maiores culpa sequi voluptates distinctio quae explicabo mollitia ea repellat, cum ipsam adipisci aliquam accusantium perferendis nobis beatae.&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quidem eveniet architecto rerum amet corrupti velit tempore odit placeat, impedit, nisi eligendi? At excepturi reiciendis ab tempore voluptas voluptatum aperiam nisi.&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> class</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"div title3"</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"title3"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>title3&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>Lorem ipsum dolor sit amet consectetur adipisicing elit. Aut nemo inventore quaerat consequuntur culpa qui accusantium explicabo quod voluptatum ab, quidem rem ipsa? Tempora, pariatur vitae neque voluptatum eum sed iusto maiores fugiat repellendus incidunt iste explicabo obcaecati eveniet quibusdam non a sint voluptas, illum vero exercitationem sunt nihil voluptate? Hic, quo nesciunt. Vel exercitationem ipsam error eligendi nisi voluptate earum nesciunt ullam fuga. Ipsum exercitationem culpa, laborum repellat nulla iusto vitae rerum eligendi. Fugit sunt, tenetur itaque reiciendis non magnam officiis odit voluptatum culpa fuga, velit ab! Quaerat totam sapiente laborum quae eius tempora obcaecati qui aliquid animi. Expedita adipisci aperiam deleniti deserunt repudiandae velit ipsa temporibus dolorum minus? Inventore, quo dolorem possimus reiciendis repellendus veniam praesentium provident ratione eos officia corrupti architecto, sequi cum at obcaecati fuga repudiandae? Necessitatibus, veritatis recusandae hic eos ducimus cumque tenetur odio, doloribus sapiente quam similique tempora at voluptate nesciunt quisquam dolore sit saepe molestias dolores illum placeat sunt. Eos, doloribus? Soluta explicabo similique vitae tempore blanditiis voluptatem dicta? Eius repellendus id sit accusamus saepe rem debitis modi vel dolores autem ut voluptatum a sequi aliquam, ad eos eum libero iure minus quam sint. Necessitatibus eum id commodi quae? Incidunt rem atque dolores eligendi voluptatibus aliquam aspernatur numquam. Nobis, iusto illo! Repellendus, a sapiente vitae voluptatum iusto corporis perspiciatis earum cupiditate optio, blanditiis est voluptates ducimus inventore ullam amet id minus neque sit harum corrupti aspernatur. Commodi mollitia aperiam aspernatur magni, aliquam quas quia voluptas accusantium repellendus obcaecati cumque quibusdam voluptatem labore ab non eum rem! Nostrum, accusantium delectus rerum explicabo ipsa obcaecati nobis commodi animi est repellendus culpa eos eum aliquam sit quod nesciunt maxime excepturi ducimus deserunt! Eligendi, nostrum. Iste repudiandae incidunt corrupti atque. Nemo impedit porro mollitia corrupti aut nihil repellendus quibusdam libero. Numquam explicabo veritatis libero aut ex aliquam consequatur adipisci sint vitae architecto velit quidem iste saepe consequuntur quisquam cum, magnam deleniti amet sed error facilis vero magni alias. Sit, minus provident quia harum iure officia porro nemo doloremque voluptatum. Culpa laudantium consectetur fuga, temporibus iste ipsa accusantium pariatur molestias harum! Ullam dignissimos corrupti ipsam vero reiciendis iure dicta sed aliquid officia eos adipisci soluta quibusdam in deleniti similique aperiam deserunt, quis provident itaque quia sint? Vel odit sit, quasi molestiae quaerat unde nihil maxime harum, doloribus libero assumenda, facere illo corrupti. Error dicta repellat, rerum ratione atque, impedit quia nobis nisi ipsa veniam dolore minus porro libero eos fugiat laudantium at perspiciatis architecto! Sunt modi, optio nulla dignissimos in provident repudiandae libero. Voluptatibus tempora consequuntur alias necessitatibus quisquam culpa porro sequi, odio quam voluptates commodi deleniti impedit fuga, corporis explicabo totam minima ad eligendi ipsa laborum exercitationem dolorem libero aliquam. Quibusdam natus nulla facere saepe! Sunt, eius voluptatum. Placeat, neque exercitationem commodi nulla quis cum facere recusandae ipsa esse ad accusamus distinctio, officia, odio aperiam. Suscipit velit aliquam officia iure, non rerum numquam laborum error quas neque enim cum illum accusantium facilis tempora, eum ipsam porro quidem similique, recusandae unde illo culpa nisi. Pariatur, voluptates? Sapiente, nam?&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Odio aspernatur iure esse vero eveniet quam, laudantium optio facere voluptate, autem ratione nihil dolorem veritatis non unde repellendus in maiores explicabo suscipit. Omnis quisquam tempora eum doloribus repellendus deserunt architecto, corrupti est, odit accusamus repellat ipsa voluptas quis nesciunt. Quos nostrum dolor, ratione, facere quis quibusdam nemo, vitae temporibus delectus voluptate odit eius debitis earum atque minus suscipit reiciendis. Perspiciatis cupiditate corporis nam dolore tempore molestias exercitationem nesciunt optio provident fugiat suscipit libero earum ea, modi nulla, quas delectus veniam, doloremque necessitatibus inventore. Ratione mollitia sequi architecto labore dolores magni omnis tenetur provident. Debitis praesentium tempora sit rerum! Eaque eum, sunt nesciunt voluptatem magni, nihil impedit dolorum nostrum assumenda eos at corrupti velit nam omnis quaerat esse iste dolorem? Exercitationem accusantium sint harum, ab nesciunt alias velit eveniet soluta sequi, nulla, facilis aliquid expedita modi possimus sit. Explicabo eveniet voluptates quis amet voluptas deleniti dolor, nostrum fugit error labore omnis exercitationem iste impedit saepe tempore nulla earum sequi aspernatur ratione harum! Magni autem quam magnam alias fuga nemo, quibusdam aliquid? Maxime adipisci eligendi eius ab repellat, iste aliquid illo provident similique obcaecati fuga animi quibusdam, quidem in numquam molestiae minus mollitia sequi veniam placeat molestias voluptates ex totam! Maiores veritatis cumque doloribus quas dolores illo facere deleniti in, perferendis, ea, facilis porro. Dignissimos vitae, nesciunt velit nostrum iste iure labore tempore consectetur ducimus exercitationem recusandae voluptas blanditiis ut aut, accusamus pariatur voluptates rerum consequatur qui assumenda vel provident neque? Delectus reiciendis incidunt molestiae iusto ea officia itaque ipsum at doloremque hic dolorem eius atque sunt, corporis, magni deleniti sint odit optio fuga. Ratione expedita eligendi magni voluptate alias delectus totam tempora veritatis, qui itaque? Tenetur ea quam quisquam deleniti itaque asperiores nesciunt, culpa nam dolorum voluptate amet ducimus exercitationem laborum, temporibus optio! Minima reprehenderit ipsum sit quisquam, ipsam est voluptates recusandae adipisci, a voluptas perspiciatis officiis, quibusdam eos? Dicta facere modi voluptatem inventore? Odit a repellendus corrupti atque porro nostrum perferendis possimus, repudiandae quas incidunt enim maiores ea distinctio ad est quaerat. Explicabo suscipit laborum, ea amet in id quis consequatur odio quo perferendis nihil quia necessitatibus nostrum quam vero laudantium iusto tempora voluptate nulla. Corrupti perferendis culpa, similique praesentium saepe sint porro! Vero unde illum tempore dolore, eaque saepe voluptate repellat similique commodi eos doloremque nulla quos itaque tenetur enim, error culpa fuga quisquam laborum? Earum, corporis, libero quo voluptatibus voluptatem odio dignissimos aliquid nam ea esse vel eveniet, similique recusandae. Nesciunt quasi tenetur aperiam laboriosam consectetur aut quae soluta reprehenderit deserunt, dolore ratione ipsum fugiat! Accusamus a vel delectus repellat laudantium dignissimos reprehenderit eveniet, ipsum dolorem placeat labore tenetur accusantium tempora beatae aperiam commodi eligendi inventore velit. Esse repellendus deleniti rerum praesentium! Soluta ipsam dolore quod suscipit corrupti cum doloribus iure voluptatem alias accusamus molestias maiores sint excepturi magni magnam labore, accusantium adipisci aspernatur, quidem dolores perspiciatis saepe repellendus rem? Repudiandae, maiores culpa sequi voluptates distinctio quae explicabo mollitia ea repellat, cum ipsam adipisci aliquam accusantium perferendis nobis beatae.&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quidem eveniet architecto rerum amet corrupti velit tempore odit placeat, impedit, nisi eligendi? At excepturi reiciendis ab tempore voluptas voluptatum aperiam nisi.&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    &#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    const </span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> createApp</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD"> }</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> = Vue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    createApp(</span><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">      data</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        return {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">          ary</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">      mounted</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        let </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">h1Ary</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">querySelectorAll</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'h1'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)].</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">d</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">d</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">innerText</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        this.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">ary</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> h1Ary</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        const </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">observerOptions</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">          root</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">          rootMargin</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "0px"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">          threshold</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0.0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0.75</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">        adObserver</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> IntersectionObserver</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">intersectionCallback</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">                          observerOptions</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        function </span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">intersectionCallback</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">entries</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">          entries</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">entry</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> e</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> entry</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">target</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">classList</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> li</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">querySelector</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`li.</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">entry</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">isIntersecting</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">              if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">entry</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">intersectionRatio</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> >=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">0.75</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">                li</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">classList</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'active'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">                li</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">querySelector</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'a'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">click</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">              }</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">                li</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">classList</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'active'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">              }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">          });</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">        setTimeout</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(()</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">        h1Ary</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">forEach</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">d</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">          let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">querySelector</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`div.</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">d</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">          adObserver</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">observe</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">        }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">500</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">      }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#C678DD">    }</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).mount('#app')</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  &#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br></div></div><p>參考資料
<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Intersection_Observer_API" target="_blank" rel="noreferrer">MDN Intersection Observer</a></p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[DOM 到底是什麼呢?]]></title>
            <link>https://www.aaron-shih.com/frontend/dom</link>
            <guid>https://www.aaron-shih.com/frontend/dom</guid>
            <pubDate>Fri, 28 Oct 2022 23:45:03 GMT</pubDate>
            <description><![CDATA[<PageInfo/><h1 id="dom-到底是什麼呢" tabindex="-1">DOM 到底是什麼呢? <a class="header-anchor" href="#dom-到底是什麼呢" aria-label="Permalink to &quot;DOM 到底是什麼呢?&quot;">&ZeroWidthSpace;</a></h1>
<p>其實 DOM 是一個<a href="https://www.w3.org/TR/WebIDL/" target="_blank" rel="noreferrer">定義</a>，是由 W3C WebIDL 所規定，宿主瀏覽器應用程式按此定義實現(底層為 C++)，
並且是一種資料結構，存在於[WebKit][1]的記憶體中。</p>
<h2 id="瀏覽器如何實現-dom" tabindex="-1">瀏覽器如何實現 DOM <a class="header-anchor" href="#瀏覽器如何實現-dom" aria-label="Permalink to &quot;瀏覽器如何實現 DOM&quot;">&ZeroWidthSpace;</a></h2>
<p>之前提到 DOM 是存在於 Webkit 記憶體中的，而具體操作可以簡略成下圖
<img src="/assets/images/dom/內部關係圖.png" alt="內部關係圖" data-fancybox="gallery"></p>
<h2 id="映射物件和-v8binding" tabindex="-1">映射物件和 V8binding <a class="header-anchor" href="#映射物件和-v8binding" aria-label="Permalink to &quot;映射物件和 V8binding&quot;">&ZeroWidthSpace;</a></h2>
<p>而瀏覽器透過內部引擎與 WebKit(dom)進行綁定(v8 binding)，建立出一個可以在記憶體中訪問到的 <strong>映射物件(wrapper object)</strong> 。</p>
<p><img src="/assets/images/dom/bindingV8.png" alt="binding" data-fancybox="gallery"></p>
<p>v8 與 dom 的<a href="https://www.jianshu.com/p/53de5e4deb43" target="_blank" rel="noreferrer">詳細實現</a>，而我們日常開發中在 devtools 看到畫面並不是 dom，而是<strong>渲染樹</strong>，是 DOM 和 CSSOM 的組合。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 前兩行執行後， v8 dom wrapper 與 c++ DOM 的綁定關係就完成</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> div</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"div"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "&#x3C;p>&#x3C;span>foo&#x3C;/span>&#x3C;/p>"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 測試下面程式碼</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">xxx</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 123</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">body</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">appendChild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">body</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">lastChild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">xxx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 123</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>透過生成 DOM 的 api 會<strong>建立出映射</strong>，並存放在記憶體中，讓我們能夠進行操作，且不會被<strong>GC 回收</strong>。</p>
<p><img src="/assets/images/dom/DOM記憶體關係圖.png" alt="記憶體布局" data-fancybox="gallery"></p>
<p>由此圖我們可以瞭解，只要建造出映射，就算我們取消記憶體位置指向，映射仍會存在，DOM 仍然可以訪問，<strong><em>若要取消映射，只能透過 DOM api remove</em></strong>。</p>
<blockquote>
<p>DOM 是 JS 操作頁面的介面，但是 JS 不能直接對 DOM 增刪改查只能透過宿主提供 DOM API 間接操作。</p>
<blockquote>
<p>1.JS 夠過與 DOM 的映射關係操作頁面 2.頁面內容的控制 3.表格、表單資料事件 4.監聽各種使用者互動 5.懶加載其他資源 6.組件化、工程化開發複雜的應用</p>
</blockquote>
</blockquote>
]]></description>
            <content:encoded><![CDATA[<PageInfo/><h1 id="dom-到底是什麼呢" tabindex="-1">DOM 到底是什麼呢? <a class="header-anchor" href="#dom-到底是什麼呢" aria-label="Permalink to &quot;DOM 到底是什麼呢?&quot;">&ZeroWidthSpace;</a></h1>
<p>其實 DOM 是一個<a href="https://www.w3.org/TR/WebIDL/" target="_blank" rel="noreferrer">定義</a>，是由 W3C WebIDL 所規定，宿主瀏覽器應用程式按此定義實現(底層為 C++)，
並且是一種資料結構，存在於<a href="https://zh.m.wikipedia.org/zh-tw/WebKit" title="Webkit" target="_blank" rel="noreferrer">WebKit</a>的記憶體中。</p>
<h2 id="瀏覽器如何實現-dom" tabindex="-1">瀏覽器如何實現 DOM <a class="header-anchor" href="#瀏覽器如何實現-dom" aria-label="Permalink to &quot;瀏覽器如何實現 DOM&quot;">&ZeroWidthSpace;</a></h2>
<p>之前提到 DOM 是存在於 Webkit 記憶體中的，而具體操作可以簡略成下圖
<img src="/assets/images/dom/內部關係圖.png" alt="內部關係圖" data-fancybox="gallery"></p>
<h2 id="映射物件和-v8binding" tabindex="-1">映射物件和 V8binding <a class="header-anchor" href="#映射物件和-v8binding" aria-label="Permalink to &quot;映射物件和 V8binding&quot;">&ZeroWidthSpace;</a></h2>
<p>而瀏覽器透過內部引擎與 WebKit(dom)進行綁定(v8 binding)，建立出一個可以在記憶體中訪問到的 <strong>映射物件(wrapper object)</strong> 。</p>
<p><img src="/assets/images/dom/bindingV8.png" alt="binding" data-fancybox="gallery"></p>
<p>v8 與 dom 的<a href="https://www.jianshu.com/p/53de5e4deb43" target="_blank" rel="noreferrer">詳細實現</a>，而我們日常開發中在 devtools 看到畫面並不是 dom，而是<strong>渲染樹</strong>，是 DOM 和 CSSOM 的組合。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 前兩行執行後， v8 dom wrapper 與 c++ DOM 的綁定關係就完成</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> div</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"div"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "&#x3C;p>&#x3C;span>foo&#x3C;/span>&#x3C;/p>"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 測試下面程式碼</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">xxx</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 123</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">body</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">appendChild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">body</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">lastChild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">xxx</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 123</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>透過生成 DOM 的 api 會<strong>建立出映射</strong>，並存放在記憶體中，讓我們能夠進行操作，且不會被<strong>GC 回收</strong>。</p>
<p><img src="/assets/images/dom/DOM記憶體關係圖.png" alt="記憶體布局" data-fancybox="gallery"></p>
<p>由此圖我們可以瞭解，只要建造出映射，就算我們取消記憶體位置指向，映射仍會存在，DOM 仍然可以訪問，<strong><em>若要取消映射，只能透過 DOM api remove</em></strong>。</p>
<blockquote>
<p>DOM 是 JS 操作頁面的介面，但是 JS 不能直接對 DOM 增刪改查只能透過宿主提供 DOM API 間接操作。</p>
<blockquote>
<p>1.JS 夠過與 DOM 的映射關係操作頁面 2.頁面內容的控制 3.表格、表單資料事件 4.監聽各種使用者互動 5.懶加載其他資源 6.組件化、工程化開發複雜的應用</p>
</blockquote>
</blockquote>
<hr>
<h3 id="那有哪些可以創建元素-建立映射的方法呢" tabindex="-1">那有哪些可以創建元素，建立映射的方法呢? <a class="header-anchor" href="#那有哪些可以創建元素-建立映射的方法呢" aria-label="Permalink to &quot;那有哪些可以創建元素，建立映射的方法呢?&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">innerHTML</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> DOMParser</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> parser</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> DOMParser</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> htmlString</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "&#x3C;strong>Beware of the leopard&#x3C;/strong>"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> doc3</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> parser</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">parseFromString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">htmlString</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "text/html"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">3.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">createElementNS</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createElementNS</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'p'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'endition'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">endition</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>​&#x3C;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">endition</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>​</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">4.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">createElement</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">5.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">write</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">6.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">createDocumentFragment</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">DocumentFragments</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 是 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">DOM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 節點(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Nodes</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)。他們不會成為 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">DOM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">主幹的一部份，需要</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">append</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">加入 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">DOM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 樹。</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">7.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">createTextNode</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">建立文字節點</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">...</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><hr>
<h2 id="dom-的組成" tabindex="-1">DOM 的組成 <a class="header-anchor" href="#dom-的組成" aria-label="Permalink to &quot;DOM 的組成&quot;">&ZeroWidthSpace;</a></h2>
<p>標準定義的 DOM 由三大部分構成: 1.節點 2.事件 3.選擇區域(Range AP)</p>
<h3 id="節點-node" tabindex="-1">節點(Node) <a class="header-anchor" href="#節點-node" aria-label="Permalink to &quot;節點(Node)&quot;">&ZeroWidthSpace;</a></h3>
<p><strong>標籤</strong>是 HTML 的基本單位，如:p、div、h1、input 等。
<strong>節點</strong>是 DOM 的基本單位，一個具有標準結構化模型的文件，有 Element、Text、註解等,共有 12 種節點<a href="https://developer.mozilla.org/en-US/docs/Web/API/Node" target="_blank" rel="noreferrer">MDN</a>。</p>
<p>其中 Element &lt;=&gt; HTML 標籤，是互相對應的關係。</p>
<div class="language-HTML vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">h2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">>hello world!&#x3C;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">h2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">></span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>h2 是標籤，在 DOM 內部會生成兩個節點。</p>
<ul>
<li>
<p>Element Node:h2</p>
</li>
<li>
<p>Text Node:&quot;hello world!&quot;</p>
</li>
</ul>
<blockquote>
<p>Document 文件
<strong>指任何一個結構化的文件</strong>：
XML Document - 一個 XML 標準模型的文件
HTML Document - 一個 HTML 標準模型的文件
JSON Document - 一個 JSON 標準模型的文件</p>
<blockquote>
<p><strong>瀏覽器的 document 對象是一個 DOM wrapper object 綁定整顆 DOM 的根</strong>，並掛載於 Global Object 上(如記憶體布局圖)，它們<a href="https://www.796t.com/post/YjJ2dWc=.html" title="dom繼承" target="_blank" rel="noreferrer">互相繼承</a>(document -&gt; HTMLDocument.prototype -&gt; Document.prototype -&gt; Node.prototype)，並可以往上回溯至 object.prototype。</p>
</blockquote>
</blockquote>
<hr>
<h3 id="element-元素" tabindex="-1">Element 元素 <a class="header-anchor" href="#element-元素" aria-label="Permalink to &quot;Element 元素&quot;">&ZeroWidthSpace;</a></h3>
<p>屬於程式語言中的語義，在 HTML 中叫 Tag、在 CSS 的表現中稱作 盒 Box。
所謂的操作 DOM 就是對 節點 Node 做 增刪改查、監聽、綁事件。</p>
<p><strong><em>Element.prototype</em></strong> 所有元素的共同方法。</p>
<blockquote>
<p>若使用創建元素，建立映射的方法，則該元素的<strong>proto</strong>會指向此原型方法，裡面有各種元素操作函數，標籤各自的特別屬性、不同標籤預設的行為樣式等等。</p>
</blockquote>
<hr>
<p><strong><em>Document.prototype</em></strong> 是 document 的共同方法。</p>
<blockquote>
<p>是一份 xml 文件的根、總稱，掛載了許多 DOM 公共函數，還有瀏覽器的一些訊息(網址、跟引擎相關的 load ready)，html 標籤集合(document.all)等等，它的語義涵蓋 html、dom、文件，因為總總歷史因素，裡面有需多方法跟資料。</p>
</blockquote>
<hr>
<h2 id="dom-tree" tabindex="-1">DOM Tree <a class="header-anchor" href="#dom-tree" aria-label="Permalink to &quot;DOM Tree&quot;">&ZeroWidthSpace;</a></h2>
<p>描述 DOM 的一種稱呼，與 DOM 一樣，指 WebKit 記憶體內部的 Object，只不過講 DOM Tree 時，重點是<strong>在樹形結構</strong>，而若是講 DOM 時，則是在對比 JS 中的<strong>Wrapper object</strong>。</p>
<p><img src="/assets/images/dom/dom_tree.png" alt="DOM Tree" data-fancybox="gallery"></p>
<hr>
<h3 id="nodelist-與-htmlcollection" tabindex="-1">NodeList 與 HTMLCollection <a class="header-anchor" href="#nodelist-與-htmlcollection" aria-label="Permalink to &quot;NodeList 與 HTMLCollection&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>NodeList 靜態/動態集合，包含所有的 Node 節點 Element、Text、屬性、註解，等 12 種節點(querySelector 系列)</li>
<li>HTMLCollection 動態集合，只有 Element 1 種節點 (getElement 系列)</li>
</ul>
<hr>
<h2 id="重排與重繪" tabindex="-1">重排與重繪 <a class="header-anchor" href="#重排與重繪" aria-label="Permalink to &quot;重排與重繪&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="/assets/images/dom/webkit_render.png" alt="Repaint ReFlow" data-fancybox="gallery"></p>
<p>頁面生成過程：</p>
<ol>
<li>HTML 被 HTML 解析器解析成 DOM 樹</li>
<li>CSS 被 CSS 解析器解析成 CSSOM 樹</li>
<li>DOM 樹 + CSSOM 樹，生成一棵渲染樹(Render Tree)</li>
<li>生成佈局 (flow)瀏覽器在屏幕上畫出所有節點</li>
<li>將佈局繪製(paint)在屏幕上，顯示出整個頁面</li>
<li>第四步和第五步是最耗時的部分 這兩步合起來，就是我們通常所說的渲染</li>
</ol>
<p><strong>重排/回流（Reflow）</strong>：當 DOM 的變化影響了元素的幾何信息，瀏覽器需要重新計算元素大小寬高等屬性，將其安排在正確的位置，就叫重排，為重新生成布局，重新排列。
<strong>重繪(Repaint)</strong>: 當一元素的外觀產生變化，但没有改變布局,重新把元素外觀繪製出来的過程，叫做重繪。
<strong><em>任何改變渲染樹的操作都會導致重排或重繪,重排必定重繪</em></strong></p>
<ul>
<li><a href="https://csstriggers.com/" target="_blank" rel="noreferrer">css 重繪</a></li>
</ul>
<hr>
<h2 id="dom-與-vdom" tabindex="-1">DOM 與 VDOM <a class="header-anchor" href="#dom-與-vdom" aria-label="Permalink to &quot;DOM 與 VDOM&quot;">&ZeroWidthSpace;</a></h2>
<p>直接進行 DOM 操作的會何會影響性能?</p>
<ul>
<li>頻繁的 DOM 操作會導致重排、重繪，會讓瀏覽器在 v8 與 WebKit 兩個 thread 之間來回切換(只能擇一)，</li>
<li>兩個引擎 thread 來回切換就會造成 <strong>「性能損耗」</strong> 。</li>
<li>因此現代框架，為了避免頻繁的操作 DOM 的，自然而然就有了虛擬 DOM 的概念。</li>
</ul>
<p>vDOM 的設計</p>
<ul>
<li>用 JS object 模擬 DOM 就是 vdom (Vue Vnode)</li>
<li>當頁面的數據變動時，產生新的 vdom(vue 副作用 effect 時，響應式產生，Diff 比對)</li>
<li>比較兩個 vdom 的差異(Vue Diff 演算，雙端 Diff，快速 Diff)</li>
<li>差異的部分透過 DOM API 映射到真實 DOM 上(Vue renderer)</li>
</ul>
<h2 id="分類整理-api" tabindex="-1">分類整理 API <a class="header-anchor" href="#分類整理-api" aria-label="Permalink to &quot;分類整理 API&quot;">&ZeroWidthSpace;</a></h2>
<p>來源 MDN</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">查驗文檔</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">readyState</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  屬性描述文件的讀取狀態</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">title</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 文檔標題</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">visibilityState</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">的可见性</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 即当前可见元素的上下文环境. 由此可以知道当前文档(即为页面)是在背后</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 或是不可见的隐藏的标签</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">----</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">寫文檔</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">markup</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 方法将一个文本字符串写入一个由 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">open</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() 打开的文档流（</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> stream</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">）。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 全頻相關</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">webkitFullscreenEnabled</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 全屏啟用”屬性指示全屏模式是否可用。</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">webkitIsFullScreen</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 是否在全屏模式。</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">exitFullscreen</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 用于让当前文档退出全屏模式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">fullscreenElement</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //返回当前文档中正在以全屏模式显示的Element节点,如果没有使用全屏模式,则返回null.</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">fullscreenEnabled</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //返回一个布尔值,表明浏览器是否支持全屏模式.</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> Range</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 物件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createRange</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">  Range</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 物件。(可用來當富文本切割)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> range</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createRange</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    range</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">setStart</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">startNode</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> startOffset</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">    range</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">setEnd</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">endNode</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> endOffset</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">caretRangeFromPoint</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> range</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">caretRangeFromPoint</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">float</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> float</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回一个 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Range</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 对象（指定坐标的文档片段）。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 創建類(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">DOM</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">元素</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">comment</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">event</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createAttribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> attribute</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createAttribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 创建并返回一个新的属性节点</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">tagName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> options</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 创建一个由标签名称 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">tagName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 指定的 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">HTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 元素。如果用户代理无法识别 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">tagName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">，则会生成一个未知 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">HTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 元素 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">HTMLUnknownElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createDocumentFragment</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> fragment</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">createDocumentFragment</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 创建一个新的空白的文档片段，文档片段存在于内存中，并不在</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">DOM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">树中，</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 所以将子元素插入到文档片段时不会引起页面回流（对元素位置和几何上的计算）。因此，使用文档片段通常会带来更好的性能。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 獲取元素資訊</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">nodeType</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //唯讀屬性表示了節點物件的類型。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">nodeType</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 9</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">DOCUMENT_NODE</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">previousSibling</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //返回当前节点的前一个兄弟节点</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">nextElementSibling</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 返回当前元素在其父元素的子元素节点中的后一个元素节点,如果该元素已经是最后一个元素节点,则返回null</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">previousElementSibling</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //返回当前元素在其父元素的子元素节点中的前一个元素节点,如果该元素已经是第一个元素节点,则返回null</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">classList</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //唯讀屬性代表了該元素所擁有之類別屬性（Class Attribute）的即時更新集－DOMTokenList。</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">className</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 获取或设置指定元素的class属性的值。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 屬性獲取或設置元素中包含的HTML或XML標記</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getBoundingClientRect</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回元素的大小及其相对于视口的位置。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 如果是标准盒子模型，元素的尺寸等于</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> padding</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> border</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">的总和。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 如果</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">box</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">sizing</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> border</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">box</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">，元素的的尺寸等于 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">querySelector</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> baseElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">querySelector</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">selectors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回与指定的选择器组匹配的元素的后代的第一个元素。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">querySelectorAll</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回一个</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">non</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">live</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">的</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">NodeList</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 它包含所有元素的非活动节点，该元素来自与其匹配指定的</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">CSS</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">选择器组的元素。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> baseElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">querySelectorAll</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">selectors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">cloneNode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> dupNode</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">cloneNode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">deep</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{true||</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">false</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//如果为true,则该节点的所有后代节点也都会被克隆</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> fn</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 回傳一個呼叫此方法之節點物件的拷貝</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">body</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ex</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">. </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">body</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">querySelector</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'body'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//true</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回的是一个布尔值，来表示传入的节点是否为该节点的后代节点</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getElementById</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getElementById</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回一个匹配特定 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">ID</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">的元素.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getElementsByClassName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getElementsByClassName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">names</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回一个包含了所有指定类名的子元素的类数组对象。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getElementsByName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getElementsByName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回一个在 (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">X</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">HTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">的节点列表集合。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getElementsByTagName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getElementsByTagName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回一个包括所有给定标签名称的元素的</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">HTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">集合</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">HTMLCollection</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getAttribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> align</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> div1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getAttribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"align"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 函式會回傳該網頁元素的屬性。 如果該屬性不存在，其回傳值會是</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">或 </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">""</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (空字串);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getAttributeNS</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 命名空间仅在 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">XML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 文档中受支持</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回具有指定命名空间和名称的属性的字符串值。如果命名属性不存在，则返回值将为 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 或 </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">""</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> （空字符串）</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getAttributeNames</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> attributeNames</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getAttributeNames</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回一个</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Array</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">，该数组包含指定元素（</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">）的所有属性名称，如果该元素不包含任何属性，则返回一个空数组。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">hasAttribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">hasAttribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">attName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 返回一个布尔值，指示该元素是否包含有指定的属性（</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">attribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 設定元素</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">attributes</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //把特定節點裡所有的屬性變成一個集合,然後回傳出來 // NamedNodeMap 並非一個陣列.attributes 是一個鍵/值的配對</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">toggleAttribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">toggleAttribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> force</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 切换给定元素的某个布尔值属性的状态（如果属性不存在则添加属性，属性存在则移除属性）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">setAttribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">setAttribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> value</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 设置指定元素上的某个属性值。如果属性已经存在，则更新该值</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">before</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> child</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">before</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 方法可以在</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">ChildNode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">这个节点的父节点中插入一些列的 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 或者 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">DOMString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 对象，</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 位置就是在</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">ChildNode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">节点的前面，</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">DOMString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 对象其实和 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Text</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">节点一样的方式来完成插入的。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">after</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> after</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> nodes</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 方法会在其父节点的子节点列表中插入一些 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 或 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">DOMString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 对象。插入位置为该节点之后。</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">DOMString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 对象会被以 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Text</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 的形式插入。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> parent</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 在 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">的最后一个子节点之后插入一组 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 对象或 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">DOMString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 对象。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 没有返回值</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">appendChild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() 返回追加對象</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">prepend</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">prepend</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> or</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> DOMString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> nodes</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 在父节点的第一个子节点之前插入一系列</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">对象或者</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">DOMString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">对象。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">insertAdjacentElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">insertAdjacentElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">position</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> activeElem</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">insertAdjacentElement</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'afterend'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 将一个给定的元素节点插入到相对于被调用的元素的给定的一个位置。</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  'beforebegin'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: 在该元素本身的前面.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  'afterbegin'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:只在该元素当中</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 在该元素第一个子孩子前面.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  'beforeend'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">:只在该元素当中</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 在该元素最后一个子孩子后面.</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">  'afterend'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">: 在该元素本身的后面.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">insertAdjacentHTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">insertAdjacentHTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() 把傳入的字串解析成 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">HTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 或 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">XML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">，並把該節點插入到 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">DOM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 樹指定的位置。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">它不會重新解析被使用的元素，因此他不會破壞該元素裡面原有的元素。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">insertAdjacentHTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">position</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> text</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> position</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> like</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> top</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> d1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">insertAdjacentHTML</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'afterend'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> '&#x3C;div id="two">two&#x3C;/div>'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">insertAdjacentText</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 将一个给定的文本节点插入在相对于被调用的元素给定的位置。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">insertAdjacentText</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">position</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> position</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> like</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> top</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> para</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">insertAdjacentText</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">'afterbegin'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">textInput</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">replaceChildren</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">replaceChildren</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">nodesOrDOMStrings</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 将一个 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 的后代替换为指定的后代集合。这些新的后代可以为 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">DOMString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 或 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 对象</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">replaceWith</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> child</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">replaceWith</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 对象或者 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">DOMString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 对象，替换了该节点父节点下的子节点 。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">----</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">移除</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">removeChild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">removeChild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">child</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">從 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">DOM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 移除一個子節點，並傳回移除的節點。 可刪除被</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">v8binding</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">的 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">dom</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">映射，立即無法使用且不可挽回。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">replaceChild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> parentNode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">replaceChild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">newChild</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> oldChild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 用指定的节点替换当前节点的一个子节点，并返回被替换掉的节点。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 可探討</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">DOM</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> binding</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 還在嗎</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">?</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> node</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 把对象从它所属的 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">DOM</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 树中删除。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">removeAttribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> element</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">removeAttribute</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">attrName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">  -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 指定的元素中删除一个属性。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">----</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">location</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  对象的位置（</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">URL</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">含有文檔的 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">URL</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 相關的信息，并提供了改變該 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">URL</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 和加載其他 </span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">URL</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 的方法。</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">----</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">location</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">location</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> window</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">location</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 接口位置相等</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">location</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">href</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //url整個</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">location</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">host</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //返回域名(包含port) 192.168.31.121:8080</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">location</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">search</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //返回URL参数包含(?)</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">location</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">hash</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   // 返回標示符URL参数包含(#)。</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">location</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">reload</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // fn重仔頁面資源</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">location</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">replace</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // fn 用給定的URl跳轉至該頁面，不會有紀錄</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">可設定功能類型</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">designMode</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 控制整個文件是否能夠編輯 = "on" || "off"</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">dir</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 文档的文字朝向 = 'ltr' || 'rtl'</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">---</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br></div></div><h2 id="參考資料及引用" tabindex="-1">參考資料及引用 <a class="header-anchor" href="#參考資料及引用" aria-label="Permalink to &quot;參考資料及引用&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://bitsofco.de/what-exactly-is-the-dom/" target="_blank" rel="noreferrer">What, exactly, is the DOM?</a></li>
<li><a href="https://www.gushiciku.cn/pl/gFY6/zh-tw" target="_blank" rel="noreferrer">Virtual DOM</a></li>
<li><a href="https://www.zhihu.com/question/324992717/answer/707044362" target="_blank" rel="noreferrer">前端为什么操作 DOM 是最耗性能的呢？</a></li>
<li><a href="https://www.jianshu.com/p/53de5e4deb43" target="_blank" rel="noreferrer">v8</a></li>
<li><a href="https://www.zhihu.com/question/269333790/answer/350467595" target="_blank" rel="noreferrer">document 与 element 上的函数为什么不是一个?</a></li>
<li><a href="https://html5.tool.webfrontend.dev/" target="_blank" rel="noreferrer">HTML 標籤週期表</a></li>
<li><a href="https://www.cnblogs.com/111testing/p/11186335.html" target="_blank" rel="noreferrer">渲染過程</a></li>
<li><a href="https://chromium.googlesource.com/chromium/src.git/+/62.0.3178.1/third_party/WebKit/Source/bindings/core/v8/V8BindingDesign.md" target="_blank" rel="noreferrer">chorme BindingDesign</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[Intro]]></title>
            <link>https://www.aaron-shih.com/intro</link>
            <guid>https://www.aaron-shih.com/intro</guid>
            <pubDate>Fri, 28 Oct 2022 23:45:03 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="動機" tabindex="-1">動機 <a class="header-anchor" href="#動機" aria-label="Permalink to &quot;動機&quot;">&ZeroWidthSpace;</a></h2>
<p>建立一個部落格，把在開發過程中遇到的問題和學到的知識都記錄下來。也分享一些從開發中得到的體悟，就是一種心靈祥和(!?)，能更好地面對挑戰和學習。我的目標是創建一個可以分享知識和經驗的平台，互相學習和成長。我會分享觀察到的技術趨勢、最佳實踐和問題解決方法等等，希望大家會喜歡！拓展自己的知識領域，持續學習!</p>
<h2 id="展望" tabindex="-1">展望 <a class="header-anchor" href="#展望" aria-label="Permalink to &quot;展望&quot;">&ZeroWidthSpace;</a></h2>
<p>除了紀錄開發過程，我希望這個部落格也能分享我的生活經歷，包括學習、成長、挑戰和收穫等。同時，我也想通過這個部落格展望未來，分享我的夢想、計劃和期許，以一個非本科的角度描述這個開發歷程，鼓勵讀者積極追求自己的目標和夢想。我相信，這樣的分享和交流將會讓這個部落格更加有價值和有意義，並且能夠啟發和幫助更多的人。</p>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[前端與框架的關係]]></title>
            <link>https://www.aaron-shih.com/frontend/frameWork</link>
            <guid>https://www.aaron-shih.com/frontend/frameWork</guid>
            <pubDate>Fri, 28 Oct 2022 00:06:03 GMT</pubDate>
            <content:encoded><![CDATA[<PageInfo/><h1 id="前端與框架的秘密" tabindex="-1">前端與框架的秘密 <a class="header-anchor" href="#前端與框架的秘密" aria-label="Permalink to &quot;前端與框架的秘密&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="前言-js-誕生與戰國時代" tabindex="-1">前言: JS 誕生與戰國時代 <a class="header-anchor" href="#前言-js-誕生與戰國時代" aria-label="Permalink to &quot;前言: JS 誕生與戰國時代&quot;">&ZeroWidthSpace;</a></h2>
<p>1995 年 JavaScript 誕生，<strong>布蘭登·艾克 Brendan Eich</strong>只花了 <span style="color:red;">10 天</span> 時間設計出 JavaScript 語言。
而那時正處於瀏覽器的戰國時代，各家瀏覽器都有自己的 JS 規格。語法的實現不一，常常造成困擾，為了兼容都塞在 window 屬性裡，現今印出 window 的屬性，也有許多歷史的痕跡。直到後來才有了 ECMA 組織訂出了標準。</p>
<!-- ### JS 的爸爸 -->
<!-- ### 混亂的 Window -->
<h2 id="jquery-的大統一" tabindex="-1">jQuery 的大統一 <a class="header-anchor" href="#jquery-的大統一" aria-label="Permalink to &quot;jQuery 的大統一&quot;">&ZeroWidthSpace;</a></h2>
<p>2006 年，jQuery 發布了，當時前端面對的是瀏覽器兼容性問題(瀏覽器戰爭遺毒)，jQuery 在處理 DOM 兼容上，開發出大量的 DOM/BOM 兼容方案，並且相當的輕量，還使用了鏈式連結，提供開發者們快捷的開發方式，並能開發出更穩定的應用，導致被大量地使用。而這也是間接導致前後端分離的原因之一。
但我們並不能稱 jQuery 是一個框架，它只是一個<strong>library 函式庫</strong>，但它是前端框架的啟蒙者。</p>
<h2 id="js-與-jquery-的差異" tabindex="-1">JS 與 jQuery 的差異 <a class="header-anchor" href="#js-與-jquery-的差異" aria-label="Permalink to &quot;JS 與 jQuery 的差異&quot;">&ZeroWidthSpace;</a></h2>
<p>JS</p>
<div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> checkValue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> elements</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getElementsByTagName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(‘</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">input</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">’);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> elements</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">elements</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ‘</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">radio</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">’ </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">&#x26;&#x26;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> elements</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> ‘</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">RadioGroup</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">’ </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">&#x26;&#x26;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> elements</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">checked</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">checkedValue</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> elements</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>jQuery</p>
<div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> checkValue</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> $</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(‘[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">”</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">radioGroup</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">”]:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">checked</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">’).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">val</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="jquery-的消逝與退場" tabindex="-1">jQuery 的消逝與退場 <a class="header-anchor" href="#jquery-的消逝與退場" aria-label="Permalink to &quot;jQuery 的消逝與退場&quot;">&ZeroWidthSpace;</a></h2>
<p>隨著網頁應用的越加廣泛，頁面邏輯也就越加複雜，jQ 的優勢也漸漸的消逝，為了開發越加複雜的應用，開發者必須新增不同功能的 jQ 庫，來解決開發複雜頁面所遇到的問題，慢慢地成為開發者的負擔。雖然不斷有新的 library 出世，但一直沒有人可以取代 jQ，一直到 2010 年的 Angular 被提出，一個新的想法，「前端框架」的概念才橫空出世。</p>
<h1 id="何謂框架的概念-框架又是為了解決甚麼問題" tabindex="-1">何謂框架的概念，框架又是為了解決甚麼問題? <a class="header-anchor" href="#何謂框架的概念-框架又是為了解決甚麼問題" aria-label="Permalink to &quot;何謂框架的概念，框架又是為了解決甚麼問題?&quot;">&ZeroWidthSpace;</a></h1>
<p>要回答這個問題，我們需要回到業務模型開始分析</p>
<p><strong>web1.0</strong>: MVC 模型開發應用，頁面顯示和邏輯功能都綁定再一起，前後端並未進行明確的職責分工，也就是說一個頁面中會混入不同的語言邏輯。</p>
<p><strong>web2.0</strong>: AJAX 技術的出現，前端透過 AJAX 非同步方式來獲取資料，並使用 jQ 展現頁面及邏輯操作，後端透過提供 Api 接口，此合作方式將頁面與資料分離，這也是最初的前後端分離雛形！但仍是 MVC 的模型。</p>
<h2 id="舊有的業務模型-mvc" tabindex="-1">舊有的業務模型 MVC <a class="header-anchor" href="#舊有的業務模型-mvc" aria-label="Permalink to &quot;舊有的業務模型 MVC&quot;">&ZeroWidthSpace;</a></h2>
<p>模型（Model): 工程師編寫程式應有的功能、資料庫進行資料管理和資料庫設計。（實現演算法，實現頁面功能等等...）
視圖（View):圖形介面設計，也就是客戶端頁面。
控制器（Controller):負責轉發請求，對請求進行處理後，通知 model。</p>
<h2 id="新的業務模型-mvvm" tabindex="-1">新的業務模型 MVVM <a class="header-anchor" href="#新的業務模型-mvvm" aria-label="Permalink to &quot;新的業務模型 MVVM&quot;">&ZeroWidthSpace;</a></h2>
<p>Model: 代表數據模型。
View: 用戶操作介面。
ViewModel： 業務邏輯層。</p>
<p>簡單來說，MVVM 可以讓業務邏輯反映在頁面上，邏輯層又與數據層雙向綁定，達到互相連動的效果。</p>
<p><strong>MVVM 就是框架的概念，簡化數據與 UI 頁面的依賴，也解決了數據頻繁更新的問題</strong>，
開發者不用再依賴一堆 jQ 套件，前端不需要再把邏輯和頁面混在一起做撒尿牛丸，資料實時反映在 view 上，後端不需要再對前端頁面進行加工，降低開發者們的精神負擔,達到各端專注分工的合作模式。</p>
<!-- # MVC 與 MVVM 資料夾架構差異 -->
<h1 id="框架御三家" tabindex="-1">框架御三家 <a class="header-anchor" href="#框架御三家" aria-label="Permalink to &quot;框架御三家&quot;">&ZeroWidthSpace;</a></h1>
<p><strong>React</strong> 開源於 2013 年 5 月，目前有 196K 星數，爸爸是 FB。
<strong>Angular</strong> 開源於 2009 年，目前有 84.4K 星數，爸爸是 Google。
<strong>Vue</strong> 開源於 2014 年，200K 星數，創作者是尤宇溪，目前沒有爸爸。
三大框架都有各自的愛好者，學習成本為 Angular&gt;React&gt;Vue。</p>
<h2 id="react" tabindex="-1">React <a class="header-anchor" href="#react" aria-label="Permalink to &quot;React&quot;">&ZeroWidthSpace;</a></h2>
<p><code>UI = fn(state)</code>
React 的核心思想，頁面可以靠著抽象的函式包覆狀態後產生 UI，也就是 UI 是將數據投影到不同形式的函式中。相同的輸入提供相同的輸出。維持純粹且簡單的使用方法。</p>
<p>目前版本為 18 版本，16.8 版本後引入 Hook Api ，能更好的控制副作用及進行狀態管理，並將生命週期的概念移除，使用統一的流管理函式，可將依賴抽象化，合理地控制渲染流程，降低開發人員的心智負擔，但需要對 Js 有一定的理解，才能方便的操作。</p>
<h2 id="vue" tabindex="-1">Vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;Vue&quot;">&ZeroWidthSpace;</a></h2>
<p>三大框架中最年輕的一個，也最綜合的一個。</p>
<p>Vue 核心分為<code>聲明式的描述UI，渲染器，組件，編譯器</code>。</p>
<p>各個核心相互依賴，構成了一個比 React 更為複雜的框架，框架本身進行了許多優化處理，結合其餘框架的精華，有生命週期，有 hook 式的使用方法，有 Class optional 的使用方式，有 Fn composition 的組合方式，官方檔案文件齊全，開法上手快速，擁有許多框架語法糖供開法者使用，也提供了 JSX 的撰寫模式，讓你寫近乎原生的 JS。</p>
<p>簡單來說，就是要什麼有什麼，甚麼都碰一點~</p>
<h2 id="angular" tabindex="-1">Angular <a class="header-anchor" href="#angular" aria-label="Permalink to &quot;Angular&quot;">&ZeroWidthSpace;</a></h2>
<p>最古老且完整的框架</p>
<p>基於 TypeScript 進行開發，具有完整且龐大的依賴體系庫，指令式的開發模式及組件切分的概念被眾多框架仿效，學習成本陡峭，已與許多良好的開發模式可以依循，大型且需要高穩定度的網站，多使用此框架。</p>
<!-- # 2021 年度 框架滿意度及使用度 -->
<h1 id="後起之秀-學不完的框架" tabindex="-1">後起之秀（學不完的框架） <a class="header-anchor" href="#後起之秀-學不完的框架" aria-label="Permalink to &quot;後起之秀（學不完的框架）&quot;">&ZeroWidthSpace;</a></h1>
<p><strong>Svelte</strong> 是一種全新的構建用戶界面的框架。Svelte 有別於傳統框架，它將大量的優化工作放到了構建應用程序的編譯階段來處理。<strong>無虛擬 DOM，無須添加狀態管理工具</strong></p>
<p><strong>SolidJS</strong> 用於在 Web 上構建快速的聲明式 UI。它<strong>與 React 共享許多想法</strong>，但不使用虛擬 DOM 來提供更高效和更實用的開發人員體驗。</p>
<p><strong>Qwik</strong> 類似 react 的前端 ssr 框架，大幅優化甚至取消了 hydration 的過程，不光是延遲加載組件，還可以延遲加載點擊事件等代碼，幾乎可以做到， 只加載當前用到的 js 代碼與 css 代碼，dom 元素沒有出現在屏幕的可視區，則不執行組件內部方法。</p>
<h2 id="結語" tabindex="-1">結語 <a class="header-anchor" href="#結語" aria-label="Permalink to &quot;結語&quot;">&ZeroWidthSpace;</a></h2>
<p>各框架為了解決日益複雜化的前端應用問題，演化出了不同的核心想法，有自由無限制的控制模式，也有規定繁雜的設計概念，隨著瀏覽器引擎的進化，前端框架勢必隨著更新，觀察框架也是在觀察前端的脈動，前端工程在這些思想的衝擊下，也會越加發展成熟茁壯。</p>
<p>參考資料：</p>
<ul>
<li><a href="https://javascript.alphacamp.co/javascript-past-and-present.html" target="_blank" rel="noreferrer">Js 起源與前世</a></li>
<li><a href="https://kknews.cc/tech/vlypb5l.html" target="_blank" rel="noreferrer">盤點 Web20 年</a></li>
<li><a href="https://www.notion.so/b9059106045a4432a2f697402372126e#29689bd6e5954a1f979289312dcdbd6f" target="_blank" rel="noreferrer">前端框架演進之路</a></li>
<li><a href="https://www.kn8.lt/blog/ui-is-a-function-of-data/" target="_blank" rel="noreferrer">UI is a function of state</a></li>
<li><a href="https://2021.stateofjs.com/zh-Hant/libraries/front-end-frameworks/" target="_blank" rel="noreferrer">Front-end frameworks and librariese</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/445122206" target="_blank" rel="noreferrer">如何利用Qwik和Partytown削减掉页面中99%的JavaScript</a></li>
</ul>
<GitTalk/>]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[轉職前端前，你可能會想知道?]]></title>
            <link>https://www.aaron-shih.com/smallTalk/frontend-job-smalltalk</link>
            <guid>https://www.aaron-shih.com/smallTalk/frontend-job-smalltalk</guid>
            <pubDate>Wed, 12 Oct 2022 21:23:15 GMT</pubDate>
            <description><![CDATA[<h1 id="轉職前端前-你可能會想知道" tabindex="-1">轉職前端前，你可能會想知道? <a class="header-anchor" href="#轉職前端前-你可能會想知道" aria-label="Permalink to &quot;轉職前端前，你可能會想知道?&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/frontend-job-smalltalk.webp" alt="frontend-job-smalltalk" data-fancybox="gallery"></p>
<p>在搜尋引擎中，打下關鍵字[前端，轉職]往往會出現非常多的資訊，難免會有些補習班的廣告及年份已經過期的資料，故想要將自己知道的業界資訊分享給想要轉職前端的夥伴們，希望可以節省一些大家找資料和過濾正確性的時間，並讓轉職者們對前端有簡易的認識。</p>
<blockquote>
<p>保持滾動式的持續更新 😆...</p>
</blockquote>
<h2 id="前情提要" tabindex="-1">前情提要 <a class="header-anchor" href="#前情提要" aria-label="Permalink to &quot;前情提要&quot;">&ZeroWidthSpace;</a></h2>
<p>在轉職之前，你可能會懷抱對軟體業過度美化的想法，或看到程式補習班打出轉職後高薪 XXk 等標語，但實際上，能轉職後馬上找到高薪的工作，要不是你頗具慧根、相關科系、有額外加分條件等...，通常都是 35k~45k 起跳(<strong>32k 的鬼故事 🫣，筆者也是常聽到</strong>)，若要更高要往博弈業、區塊鏈走，但好不好走，適不適合，做膩了能否回歸，就又是另一回事了。</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="轉職前端前-你可能會想知道" tabindex="-1">轉職前端前，你可能會想知道? <a class="header-anchor" href="#轉職前端前-你可能會想知道" aria-label="Permalink to &quot;轉職前端前，你可能會想知道?&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/frontend-job-smalltalk.webp" alt="frontend-job-smalltalk" data-fancybox="gallery"></p>
<p>在搜尋引擎中，打下關鍵字[前端，轉職]往往會出現非常多的資訊，難免會有些補習班的廣告及年份已經過期的資料，故想要將自己知道的業界資訊分享給想要轉職前端的夥伴們，希望可以節省一些大家找資料和過濾正確性的時間，並讓轉職者們對前端有簡易的認識。</p>
<blockquote>
<p>保持滾動式的持續更新 😆...</p>
</blockquote>
<h2 id="前情提要" tabindex="-1">前情提要 <a class="header-anchor" href="#前情提要" aria-label="Permalink to &quot;前情提要&quot;">&ZeroWidthSpace;</a></h2>
<p>在轉職之前，你可能會懷抱對軟體業過度美化的想法，或看到程式補習班打出轉職後高薪 XXk 等標語，但實際上，能轉職後馬上找到高薪的工作，要不是你頗具慧根、相關科系、有額外加分條件等...，通常都是 35k~45k 起跳(<strong>32k 的鬼故事 🫣，筆者也是常聽到</strong>)，若要更高要往博弈業、區塊鏈走，但好不好走，適不適合，做膩了能否回歸，就又是另一回事了。</p>
<hr>
<h2 id="軟體業有哪些職缺" tabindex="-1">軟體業有哪些職缺? <a class="header-anchor" href="#軟體業有哪些職缺" aria-label="Permalink to &quot;軟體業有哪些職缺?&quot;">&ZeroWidthSpace;</a></h2>
<p>目前軟體業有許多的職缺，常聽到的有前後端工程師，app(安卓|蘋果)開發工程師，測試工程師，程式架構師，UI/UX 設計師，網頁設計師，infra，AI 工程師等，SA，產品經理，大數據，全端開發工程師等。每個職能都是專業且會互相影響的，在產品的開發當中，會依照產品鎖定客群及公司策略，選擇組成的開發團隊人數及職能分佈。</p>
<p>ex.今天決定要開發 web 產品，最基本組成=&gt; UI/UX ＋前/後端＋ PM，若在大一點的公司就會有 SA 及測試工程師，來維持專案的進程及測試開發中產品是否能正常運行，人數的多寡會依照產品規模的成長增加。產品的上線(發布)則會有部署工程師(maybe 後端)+infra 來協助部署，當然還有許多合作上的細節，之後有提到時會在補充.</p>
<ul>
<li><a href="https://forum.gamer.com.tw/C.php?bsn=60561&amp;snA=19606" target="_blank" rel="noreferrer">前端相關淺談</a></li>
<li><a href="https://www.yourator.co/articles/283" target="_blank" rel="noreferrer">詳細的職缺敘述</a></li>
</ul>
<hr>
<h2 id="來談談非本科轉職的優缺點吧" tabindex="-1">來談談非本科轉職的優缺點吧 <a class="header-anchor" href="#來談談非本科轉職的優缺點吧" aria-label="Permalink to &quot;來談談非本科轉職的優缺點吧&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="優點" tabindex="-1">優點 <a class="header-anchor" href="#優點" aria-label="Permalink to &quot;優點&quot;">&ZeroWidthSpace;</a></h3>
<h4 id="原先的產業知識" tabindex="-1">原先的產業知識 <a class="header-anchor" href="#原先的產業知識" aria-label="Permalink to &quot;原先的產業知識&quot;">&ZeroWidthSpace;</a></h4>
<p>假設非本科的我們，在轉職前對原先職能有一定程度的理解，那我們的優勢就是原產業的知識（domain know-how)，若再轉職後，投遞相關產業可能有意想不到的加分效果，在面試表現時可以有更深度的回答及反饋，但也有可能根本不想回到原行業...😤</p>
<p>ex.轉職前為旅遊業的客服人員，轉職後又進了大型旅遊公司的開發團隊，那對整體的業務流程會有一定程度的了解，在程式開發上就能節省一些理解程式邏輯的時間成本，也能跟 User 或是產品經理提出意見，進行討論時能對於問題提出精確的描述~</p>
<h4 id="換位思考" tabindex="-1">換位思考 <a class="header-anchor" href="#換位思考" aria-label="Permalink to &quot;換位思考&quot;">&ZeroWidthSpace;</a></h4>
<p>這標題並不是說只有非本科才有換位思考的能力，而是<strong>希望非本科轉職能有這個能力</strong>，畢竟我們轉職前是各種網站的使用者(YAHOO、GOOGLE、MOMO)，而今天我們轉職成了工程師，我們從原先的使用者為主的思考模式必須轉換成開發者的角度。</p>
<p>ex.使用者自然希望一個鍵按下去能做完所有他關注的事物，但開發的角度我們則不然，我們可能會針對程式邏輯的組合提出疑問!(可能是兩種對立的觀點，我們要如何去調適這個轉換？)</p>
<h4 id="溝通及合作能力" tabindex="-1">溝通及合作能力 <a class="header-anchor" href="#溝通及合作能力" aria-label="Permalink to &quot;溝通及合作能力&quot;">&ZeroWidthSpace;</a></h4>
<p>最重要的一點就是溝通及合作，<strong>邏輯可以培養</strong>，<strong>技術可以進公司再來慢慢學</strong>,但合作及溝通，從 0 開始要培養是非常困難的，大家可能覺得工程師不是按照上級指令開發，或是看看需求單開發就好了嗎?為什麼要溝通呢？
當然公司只有你一個人時自然不需要溝通，但若是在一定規模的公司上班，你配合的不是一兩個人而已，可能是好幾個團隊，每天都有會議要開，需求要確認，這時溝通與表達能力，自然而然地比重上升許多～，下方的描述開發流程區，就能體現為何溝通能力重要了 😵‍💫</p>
<h3 id="缺點-可能遭遇的問題" tabindex="-1">缺點（可能遭遇的問題) <a class="header-anchor" href="#缺點-可能遭遇的問題" aria-label="Permalink to &quot;缺點（可能遭遇的問題)&quot;">&ZeroWidthSpace;</a></h3>
<p>缺乏軟體業相關技術知識，套入先前行業別的模式處理開發事務，對整體開發流程不熟悉，無法順利以術語表達需求(無法順利溝通)，找不到技術搜尋關鍵字怎麼下，功能不會開發，對未知事務的恐慌等等...，會有這些問題都很正常的，筆者也面對過這些問題。</p>
<ul>
<li>
<p>前端知識: 對於前端而言的最基礎的知識就是 HTML+CSS+JavaScript(御三家)，之於人體即是=&gt;人體骨幹＋表皮＋肌肉神經， 好的可互動網頁這三項缺一不可，進階一點就會往框架方向加深(Js 一定要學好再碰)，常見的前端框架(Vue，React，Angular，Svelte)，框架簡略來說是為了簡化開發人員的精神負擔及節省開發時間，類比的話就是你可以走路從台北到高雄(原生 Js)，也可以選擇搭飛機(框架)。</p>
<blockquote>
<p>更底層一點的知識:網頁渲染流程、SEO、效能優化、SOLID 的程式碼架構及邏輯可循的撰寫模式、SPA、SSR、孤島架構、演算法、計算機概論 等...，你可以都不懂，但好薪水的工作都希望你能懂 QQ</p>
</blockquote>
</li>
<li>
<p>整體開發流程: 以筆者目前經歷過的開發流程有兩種，以公司型態的不同有所區分，大家可以簡單參考一下。</p>
<blockquote>
<p>1.接案公司：公司會以案件的大小及客戶給的開發時程評估這次有組隊的人選(PM+前後端+UI/UX)，一開始會討論專案進行的方式，客戶的目標(產品要做什麼)，並開始使用者訪談，確認專案的細節及核心邏輯，確認客戶一定要做的功能。通常一開始客戶會有各種天花亂墜的想法，我們就是要去限制他，哪些是技術上可以做的，<strong>哪些你就算把錢丟在我臉上，也是做不到的 XD</strong>，通常訪談會來回個兩三次，工程師則利用這個空擋去 survey 要用在專案的技術，及開始佈建一些基礎邏輯，方便使用者定案後，可以馬上開始開發。一但確認後，等 UI/UX 開始出稿件(前端需要依照稿件規格開發產品)，前端會一邊進行稿件開發以及與後端 api 的介接(真實資料的串連)，客戶若有變更或新的需求提出，則會回退至討論及設計，等待確認再回給前端開發，不斷往復，等到整體稿件及邏輯介接完成後，就可以進行產品測試及發布。</p>
</blockquote>
<p>簡單的流程: 使用者討論會談=&gt; UI/UX 設計=&gt;前後端開發=&gt;使用者變更=&gt;回到 2 步驟=&gt;專案測試及發布=&gt;上線好棒棒！
通常開發時程不長，且以客戶為主體，開發的發言權不高.（薪水也不高 🤫）</p>
<hr>
<blockquote>
<p>2.專案公司（自有產品）：流程架構則會以 PM、SA 去跟 User 訪談，等確認要做哪些核心邏輯後，拉 UI/UX 及開發團隊進入會議一起討論，若有問題則在會議上馬上提出，UI/UX 會在會議中 DEMO 頁面流程等，與使用者確認，使用者提出新需求，UI/UX 更正後會再另外發出會議，此流程會消耗較多的時間，再討論流程及頁面元素上，PM 及 SA 也會提供一些建議，協助開發者找尋技術方向，並在會議中限縮使用者的發想，開發順序則依照頁面上線排程進行安排，然後樸實無華的 UI/UX 出稿=&gt;前端開發頁面=&gt;後端出 api=&gt;前端串接=&gt;測試=&gt;上版=&gt;QA 測試=&gt;確認上線</p>
</blockquote>
<p><a href="https://medium.com/codingbar/api-%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E9%BA%BC-%E7%94%A8%E7%99%BD%E8%A9%B1%E6%96%87%E5%B8%B6%E4%BD%A0%E8%AA%8D%E8%AD%98-95f65a9cfc33" target="_blank" rel="noreferrer">api 是什麼？</a></p>
<p>當然每家的流程都有不同，筆者僅以自身經歷提供簡略描述，在產品公司工作，則會有較多的時間餘裕，並且開發的發言權也有一定被採納的空間。</p>
<hr>
</li>
<li>
<p>技術搜尋關鍵字怎麼下: 描述你享用的技術要拿來做什麼，或是要做什麼。
ex. Js array methods to slice item ， CSS overFlow website ， 我的網頁 404 怎麼辦？</p>
</li>
<li>
<p>未知事務的恐慌: 開始轉職後，常常會擔心自己學的不夠多也不夠深，在開發上也常常四處碰壁，開到課程就想買，朋友推薦的書也想看，會擔心及恐懼自己不夠好。但事實上我們只要保持腳步持續進行就好，今天遇到什麼困難解決就好，不要放大恐慌性的思想，一切都會度過，然後遇到新的難關，再次挑戰並度過，只要保持好心態，持續進步都會度過的~</p>
</li>
</ul>
<h2 id="工作型態" tabindex="-1">工作型態 <a class="header-anchor" href="#工作型態" aria-label="Permalink to &quot;工作型態&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="接案公司類" tabindex="-1">接案公司類 <a class="header-anchor" href="#接案公司類" aria-label="Permalink to &quot;接案公司類&quot;">&ZeroWidthSpace;</a></h3>
<p>大部分接案公司都是中小型企業(1~50 人)，當然有例外，例如資拓、緯創等，通常開發模式以公司案件報價計酬，接越多賺越多(前提是能在時限內完成)，敏捷開發抑或是隕石開發 🤯，技術上會採用較新的技術，畢竟案主可能會有很多突發奇想 XD，挑戰力高，成長速度較快，有機會成為全端一條龍，若對自己能力有保握，可以試試。</p>
<blockquote>
<p>削價競爭，壓榨工程師開發時間的公司，也是略有耳聞，當然也有幸福企業，不以偏概全。</p>
</blockquote>
<h3 id="新創產品類" tabindex="-1">新創產品類 <a class="header-anchor" href="#新創產品類" aria-label="Permalink to &quot;新創產品類&quot;">&ZeroWidthSpace;</a></h3>
<p>快速迭代技術的類別，人數也不會太多（50 人上下)，公司很吃產品視野及老闆腦袋，需要常常更新版本，以達到快速拓展業務、開闢客戶、急速發展的宗旨，開發時程快速，但薪水也較優渥，容易被看見，升職或升薪幅度也較大。
建議可以挑自己喜歡的產品類別，新創起來才會更有動力，加班也更有...</p>
<blockquote>
<p>沒選好，可能會落得蠟燭兩頭燒。</p>
</blockquote>
<h3 id="產品公司類" tabindex="-1">產品公司類 <a class="header-anchor" href="#產品公司類" aria-label="Permalink to &quot;產品公司類&quot;">&ZeroWidthSpace;</a></h3>
<p>開發時程較為緩慢，不需要負擔公司賺錢壓力，若在團隊架構較大較完整的公司，可以完整學習開發流程，從開發=&gt;測試=&gt;部屬=&gt;上線的迴圈，學習每個環節需要的技術能力，但通常越完善的公司，面試起來的難度也會越高，對轉職新手較不友善，通常要等多開缺比較有機會進入。(筆者較為推薦)</p>
<blockquote>
<p>但也有可能進入養老公司，沒有保持進步，反而被公司綁住。</p>
</blockquote>
<h3 id="外商公司類" tabindex="-1">外商公司類 <a class="header-anchor" href="#外商公司類" aria-label="Permalink to &quot;外商公司類&quot;">&ZeroWidthSpace;</a></h3>
<p>通常進去就發達了 XD，需要一定的外語能力(口說及閱讀)，此類也較多遠端缺額，但職缺通常都比較少公布，若有人脈會比較好進入，也能解省外商面試的時間。</p>
<p><a href="https://www.hexschool.com/2022/06/23/2022-06-23-software-engineer-salary/" target="_blank" rel="noreferrer">參考薪水</a>
<a href="https://guide.104.com.tw/salary/cat/2007001000?type=catjobs&amp;salary=monthly" target="_blank" rel="noreferrer">104 薪水</a></p>
<blockquote>
<p>薪水參考價值居多，多面幾間公司，多談多比較，每年都出來試水溫，更有機會談到好薪水。</p>
</blockquote>
<hr>
<h2 id="有哪些學習資源" tabindex="-1">有哪些學習資源? <a class="header-anchor" href="#有哪些學習資源" aria-label="Permalink to &quot;有哪些學習資源?&quot;">&ZeroWidthSpace;</a></h2>
<p>以下會推薦一些筆者覺得不錯的學習資源，並會描述使用哪些技術。</p>
<ul>
<li>
<p>中文 youtuber: Alex 宅幹嘛[Vue 框架] ， Tommy 騎巴哥[JavaScript] ， Code Learning | 编程教程[底層知識] ， 布魯斯前端[React]， loyiCodes[資料結構]， 在地上滾的工程師 Nic[開發者的心態]，Web 實驗室[網路運作，底層知識] ， Mike Cheng[Vue]，CSScoke[CSS]，Jomy King[JavaScript，綜合前端技術]</p>
</li>
<li>
<p>國外 youtuber: Online Tutorials[CSS 動畫特效]，codeSTACKr[前端 RoadMap]，LearnCode.academy[JavaScript]，CrashCourse[資料結構]，NetworkChuck[Linux]，ByteByteGo[網頁底層]，HackBear 泰瑞[國外的開發者簡述生活]，<a href="https://github.com/JoseDeFreitas/awesome-youtubers" target="_blank" rel="noreferrer">awesome-youtubers</a> =&gt; 集結各種優質頻道</p>
</li>
<li>
<p>udemy hahow hiskio 開發技術學習平台:網頁開發全端攻略｜零程式基礎也適用，JavaScript + Vue3，JavaScript 全攻略：克服 JS 的奇怪部分，The Complete JavaScript Course 2022: From Zero to Expert!，The Complete 2022 Web Development Bootcamp</p>
</li>
<li>
<p><a href="https://roadmap.sh/frontend" target="_blank" rel="noreferrer">RoadMap</a></p>
</li>
<li>
<p>書本: JavaScript 犀牛書，鐵人幫入門系列等，網站互動設計進化之道。</p>
</li>
<li>
<p>github: <a href="https://github.com/7-sevens/Developer-Books" target="_blank" rel="noreferrer">Developer-Books</a>，<a href="https://github.com/jCodeLife/mind-map" target="_blank" rel="noreferrer">mind-map</a>，<a href="https://github.com/geekxh/hello-algorithm" target="_blank" rel="noreferrer">针对小白的完整的算法训练流程</a>，<a href="https://github.com/FrontEndGitHub/FrontEndGitHub" target="_blank" rel="noreferrer">FrontEndGitHub</a>，<a href="https://github.com/lgwebdream/FE-Interview" target="_blank" rel="noreferrer">FE-Interview</a>，<a href="https://github.com/kujian/frontendDaily" target="_blank" rel="noreferrer">frontendDaily</a></p>
<blockquote>
<p>若有好的學習資源推薦,非常歡迎在下方留言 🙌</p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="轉職成功-就是結束" tabindex="-1">轉職成功，就是結束? <a class="header-anchor" href="#轉職成功-就是結束" aria-label="Permalink to &quot;轉職成功，就是結束?&quot;">&ZeroWidthSpace;</a></h2>
<p>轉職成功絕非結束，是漫漫長路的開始，為了解決不同的需求，前端百家爭鳴，各種新舊技術交雜，我們都需要不斷的溫故知新，不要排斥學習，因為這條路，只有不斷的學習，才能讓你更加精進。也不要停止與業界人士交流，不論是公司同事或是只有一面之緣的技術論壇朋友，維持好的人際網路，會對未來的旅途有意想不到的加分效果，開始記錄你遇到的技術難點及筆記，也許在哪場面試中，就幫了你一把，也不要停止追尋更好的自己，畢竟轉職就是對自己的人生有所覺悟的體現，我們都值得更好的未來。</p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[前端轉職很簡單?]]></title>
            <link>https://www.aaron-shih.com/smallTalk/change-job-smalltalk</link>
            <guid>https://www.aaron-shih.com/smallTalk/change-job-smalltalk</guid>
            <pubDate>Fri, 07 Oct 2022 22:49:30 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="前端轉職很簡單" tabindex="-1">前端轉職很簡單? <a class="header-anchor" href="#前端轉職很簡單" aria-label="Permalink to &quot;前端轉職很簡單?&quot;">&ZeroWidthSpace;</a></h1>
<PageInfo/><p><img src="/assets/postimg/smalltalk/change-job-small-talk.webp" alt="change-job-small-talk" data-fancybox="gallery"></p>
<p>最近與朋友聊天,被詢問到為什麼想要轉職,從外文轉換到工程師的過程,是不是很痛苦？
要回應時竟一時語塞,只能微笑帶過,回說真的蠻困難的...
於是有了想要把轉職的過程,思維轉換的過程,記錄下來的想法.</p>
<h2 id="為什麼想要轉職" tabindex="-1">為什麼想要轉職？ <a class="header-anchor" href="#為什麼想要轉職" aria-label="Permalink to &quot;為什麼想要轉職？&quot;">&ZeroWidthSpace;</a></h2>
<p>本身私大日文系畢業,大學時期及畢業後工作階段,完全沒有碰過任何程式邏輯,連有前端這個職缺都不知道的無關人士.
轉職前的我過著全台跑客戶的業務生活,每天不是迎合老闆就是陪客戶拉單的日子,看著這樣的每天,打從心底有了一個厭煩的感覺,<strong>好想脫離這樣的生活</strong>,剛好遇到轉職成功的朋友,小聊了一下覺得好像工程師也不錯耶!!
坐在辦公室吹冷氣,寫程式切版面,薪水又高,好爽的感覺～
是的,那時的我並沒有做任何的研究,就只是一個想跳脫固有框架,過爽日子的簡單想法😆</p>
<h2 id="去哪裡轉職" tabindex="-1">去哪裡轉職？ <a class="header-anchor" href="#去哪裡轉職" aria-label="Permalink to &quot;去哪裡轉職？&quot;">&ZeroWidthSpace;</a></h2>
<p>基於自己的性格以及朋友提供的故事,知道自己沒有一個鞭策的動力,一定是不會主動學習,也不知道該行業別的先備知識,應該是無法成功的,所以首先自學這條路基本上沒考慮過...
評估過六角的課程,資策會養成班,以及其他線上課程,最後還是選擇了<a href="https://www.tibame.com/goodjob/frontend_taipei" target="_blank" rel="noreferrer">養成班</a>,也就是業界戲稱的「速成量產班」,
半年為一期,報名費高昂,但學長姐們的網頁寫的都很好看,好像很好入門,報名時被詢問是否<strong>真的對前端有興趣</strong>,
那時對前端這個概念基本上為0,就草草的回答有😇.
現在回想起來,基本上就是個沒有思考的蠢蛋...</p>
<blockquote>
<p>建議真的要經過謹慎的評估,及多方詢問再決定轉職方式,若真的沒有業界人士可以詢問,也可以詢問我.</p>
</blockquote>
<h2 id="轉職的學習過程" tabindex="-1">轉職的學習過程 <a class="header-anchor" href="#轉職的學習過程" aria-label="Permalink to &quot;轉職的學習過程&quot;">&ZeroWidthSpace;</a></h2>
<p>一開始學習HTML+CSS,覺得還行,就跟背書一樣,把CSS屬性 HTML tag記下來,感覺沒什麼大不了的,對盒模型,flex黑魔法,grid佈局,render flow,時間因素下,課程就是只能帶過,硬記下來也就過了,但到了Js直接崩潰,有種老師到底在說什麼的感覺,var let const 函式 閉包 callback loop condition,每天資訊量都過載,<strong><em>感覺大腦在顫抖</em></strong>.</p>
<p>基於js的壓力,課堂上的同學們開始抱團,互相詢問,但作業直接抄同學程式碼的人也是大有人在~
於是我開始思考,到底要怎麼脫離這個循環,這樣下去真的會轉職成功?我連程式都寫不出來,有種挫折＋失敗的混沌想法,塞滿了我的腦海,但那時有一位同學跟大家都不一樣,大家還在寫第三題時,總是快了大家兩到三步,我覺得很神奇,詢問下才知道,還在學HTML時,她就趁著課餘的時間學習js了,還去補了線上課程的切版班!</p>
<p>「怎麼可以這麼強！是妖怪吧！」,於是我開始模仿她的做法,盡量的壓縮休息時間,看書看線上課程,才知道之前的自己有多廢...
學習程式需要大量實作及不斷地更新正確知識,才有機會學好,只靠老師課堂上的簡單練習,及同學們的程式碼是非常危險的一件事,
當課程進行到前端框架時,自己已經先打了預防針,知道要做什麼,怎麼學習.
至今,由衷的感謝那位同學,若沒有看到當時她的努力,驚醒了我,根本不會走到現在的程度.</p>
<p>最後的團體專題時,被選為組長,老師說會有很多負擔,但我想如果多做了這些東西,是不是代表我會多學到東西呢?是不是比別人多了可以展現的資本呢？
團專真的很累人,除了要顧自己的產出外,還要監督大家的進度,git有沒有人亂推解衝突,打包上版,也是各種開夜車的每天,
好不容易順利Demo作品,又遇到了另一個難題,找工作.....</p>
<p>前端關鍵字:HTML CSS Javascript 前端框架 css預處理 url輸入後瀏覽器做了什麼 git</p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[簡易函式封裝]]></title>
            <link>https://www.aaron-shih.com/frontend/functional-programming</link>
            <guid>https://www.aaron-shih.com/frontend/functional-programming</guid>
            <pubDate>Sat, 07 May 2022 13:15:06 GMT</pubDate>
            <description><![CDATA[<PageInfo/><h1 id="簡易函式封裝" tabindex="-1">簡易函式封裝 <a class="header-anchor" href="#簡易函式封裝" aria-label="Permalink to &quot;簡易函式封裝&quot;">&ZeroWidthSpace;</a></h1>
<p><img src="/assets/images/fn/fn1.png" alt="編成範式圖" data-fancybox="gallery"></p>
<ul>
<li>面向過程 關心執行流程與控制，通過順序執行一組語句來實現一個功能，這些語句的執行過程就是整個程式</li>
<li>物件導向 將數據與指令組織成模塊，模塊間通過繼承、多態、委託等方式實現複用</li>
<li>函數式 核心思想是將運算過程儘量寫成一系列嵌套的函數調用，關注的是做什麼而不是怎麼做</li>
<li>邏輯式 只關心規則、事實和問題的推導這樣的標準方式，不需要關心程序控制，也不需要關心具體的實現算法</li>
</ul>
]]></description>
            <content:encoded><![CDATA[<PageInfo/><h1 id="簡易函式封裝" tabindex="-1">簡易函式封裝 <a class="header-anchor" href="#簡易函式封裝" aria-label="Permalink to &quot;簡易函式封裝&quot;">&ZeroWidthSpace;</a></h1>
<p><img src="/assets/images/fn/fn1.png" alt="編成範式圖" data-fancybox="gallery"></p>
<ul>
<li>面向過程 關心執行流程與控制，通過順序執行一組語句來實現一個功能，這些語句的執行過程就是整個程式</li>
<li>物件導向 將數據與指令組織成模塊，模塊間通過繼承、多態、委託等方式實現複用</li>
<li>函數式 核心思想是將運算過程儘量寫成一系列嵌套的函數調用，關注的是做什麼而不是怎麼做</li>
<li>邏輯式 只關心規則、事實和問題的推導這樣的標準方式，不需要關心程序控制，也不需要關心具體的實現算法</li>
</ul>
<hr>
<p>若在網路上搜尋 javascript 的封裝常常會看到物件導向、函數式編成等關鍵字，其核心都是將抽象的細節邏輯去做包裝，優化、細節處理，降低開發複雜度後提供給使用者，我們並不需要了解深度的封裝細節，就能快速地使用這些邏輯，達到我們要的應用。
例如現代 js 的三大框架，也是經過許多深度的封裝後，提供開發者便利的 api 及框架環境~</p>
<p>例如:</p>
<ul>
<li>vue2、vue3 -&gt;響應式物件代理(proxy,object.defineproperty)、觀察者、訂閱者、渲染器 。</li>
<li>react 的 render、redux、hook 函式</li>
</ul>
<hr>
<p>今天想介紹最簡單的幾種函數封裝的方式</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 基礎封裝的幾種返回模式</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    ()</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//返回 function</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    ()</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{} </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//返回帶有方法的 {}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    ()</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//返回 陣列</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    ()</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //返回 condition</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">root</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">){})(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">window</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//基礎封裝  匿名函數</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="返回-function" tabindex="-1">返回 function <a class="header-anchor" href="#返回-function" aria-label="Permalink to &quot;返回 function&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">賦值表達式;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">m</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">n</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  };</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">>></span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 30</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">複雜表達式((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">y</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>我們利用閉包的特性將 m 及 n 分別暫存住各自的值，等到 return 後記憶體便會釋放，我們也能得到 30 最為回傳值。
我們也可以利用複雜表達式的寫法去重寫上面的程式碼，兩種寫法是等價的。</p>
<p>有很多應用的情況，例如針對使用者 input 的值，我們需要使用正則的判斷，去檢測有無非預期的輸入，此時就可以使用這種封裝方式。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> vaild</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">rex</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">val</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> rex</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">test</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">val</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  };</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> emailVaild</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> vaild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">/</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">^</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#D19A66">[A-Za-z0-9_\-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#56B6C2">\.</span><span style="--shiki-light:#FFAB70;--shiki-dark:#D19A66">]</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#F97583;--shiki-dark:#D19A66">+</span><span style="--shiki-light:#FFAB70;--shiki-dark:#56B6C2">\@</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#D19A66">[A-Za-z0-9_\-</span><span style="--shiki-light:#FFAB70;--shiki-dark:#56B6C2">\.</span><span style="--shiki-light:#FFAB70;--shiki-dark:#D19A66">]</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#F97583;--shiki-dark:#D19A66">+</span><span style="--shiki-light:#FFAB70;--shiki-dark:#56B6C2">\.</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#D19A66">[A-Za-z]</span><span style="--shiki-light:#F97583;--shiki-dark:#D19A66">{2,4}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">$</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75">/</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">emailVaild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"aaa@.asdasd"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">emailVaild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"aaa@gmail.com"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>經過了這一層的封裝，我們就能依照不同的正則規則，去檢驗不同的輸入，非常的方便且複用性相當高。</p>
<h2 id="返回帶有方法的" tabindex="-1">返回帶有方法的{} <a class="header-anchor" href="#返回帶有方法的" aria-label="Permalink to &quot;返回帶有方法的{}&quot;">&ZeroWidthSpace;</a></h2>
<p>我們封裝一個會回傳物件的函式，讓他再回傳封裝在其中的邏輯，做出一個可以與之互動的錢包。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> newWaller</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> money</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> x</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> log</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">key</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]) </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">][</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">key</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">!==</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">undefined</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> true</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">    log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">][</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">key</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Date</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">toLocaleString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    checkMoney</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">money</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)}</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    use</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">      money</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">money</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">      log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//傳入fn名稱當作key</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> money</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">    printLog</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">      console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> aaronMoney</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> newWaller</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> buyDrink</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> buylunch</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 60</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">aaronMoney</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">use</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">buyDrink</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">aaronMoney</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">use</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">buylunch</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">aaronMoney</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">checkMoney</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">></span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">30</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">aaronMoney</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">printLog</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">buyDrink</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> '2022/5/7 下午2:24:34'</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> buylunch</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> '2022/5/7 下午2:24:34'</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><hr>
<h2 id="返回-array" tabindex="-1">返回 array <a class="header-anchor" href="#返回-array" aria-label="Permalink to &quot;返回 array&quot;">&ZeroWidthSpace;</a></h2>
<p>我們可以透過一個封裝過的函式，return 出我們想要的值，更可以透過之前分享的嵌套模式，複合這些邏輯，相當地有趣。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> arr</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "a"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "d"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 8</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "9"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 封裝 過濾出數字</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> getNumbers</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">arr</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> newArr</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  arr</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">item</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">typeof</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> item</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "number"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">      newArr</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  });</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> newArr</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getNumbers</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">arr</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//取得數字</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> getEvenNumber</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">arr</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> newArr</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  arr</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">item</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> %</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">      newArr</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  });</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> newArr</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getEvenNumber</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">getNumbers</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">arr</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//取得偶數</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="返回-condition" tabindex="-1">返回 condition <a class="header-anchor" href="#返回-condition" aria-label="Permalink to &quot;返回 condition&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> tellme</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "可"</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "不可"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">tellme</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> isNumberEven</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> number</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ></span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">number</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> %</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">isNumberEven</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">也可以結合之前的應用;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> conditionOne</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 比 </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 高</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">公分，他當兵`</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> conditionTwo</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">`</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 比 </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> 高 </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> a</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">公分，他當兵`</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> beSoldier</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> a</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ></span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> conditionOne</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> conditionTwo</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">beSoldier</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Aaron"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> height</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 180</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "Eric"</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> height</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 170</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> }); </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//aaron 當兵去囉QQ</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><hr>
<h2 id="基礎封裝-匿名函數" tabindex="-1">基礎封裝 匿名函數 <a class="header-anchor" href="#基礎封裝-匿名函數" aria-label="Permalink to &quot;基礎封裝 匿名函數&quot;">&ZeroWidthSpace;</a></h2>
<p>這邊就是框架們使用的方式，把一些東西掛載至 window，方便調用。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">root</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> undefined</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 私有狀態</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> age</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 20</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> name</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "aaron"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> money</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 87</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> show</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "you"</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      ?</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `Your name is  </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> and </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> years old.`</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      :</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "money"</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      ?</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `your money is `</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> money</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">      :</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "what?"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> getMoney</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> `your money is `</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> money</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> setMoney</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">m</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">money</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> +=</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">  function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> codingTime</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">      Math</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">abs</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Date</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2022</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 05</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> Date</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">2020</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">)) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 60</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 60</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 24</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "天"</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">    );</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 將引用保存在外部，一種簡單的對外開放方法的方式</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">  root</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">Who</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">show</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> getMoney</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> setMoney</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> codingTime</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> };</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">})(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">window</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Who</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">show</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"you"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Who</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">show</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379">"age"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Who</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">codingTime</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">();</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>以上介紹的這幾種方式，若經過良好的細節處理及互相應用，你也可以寫出有趣的 lib 供人們使用~</p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
        <item>
            <title><![CDATA[記憶體布局]]></title>
            <link>https://www.aaron-shih.com/frontend/memory-layouts</link>
            <guid>https://www.aaron-shih.com/frontend/memory-layouts</guid>
            <pubDate>Fri, 06 May 2022 23:23:00 GMT</pubDate>
            <description><![CDATA[<PageInfo/><p>在許多的面試裡，js 的基礎問題是常常會被面試官詢問，像是 Hoisting，var/let/const 差異，閉包...，而今天想跟各位分享的也是眾多基礎題的其中之一，原型鍊(prototype chain)，要分享原型鍊則需提到 js 記憶體中的布局。
在我們尚未執行代碼之前，我們所寫的 JS 以及宿主環境預設的 API 會被存放在「靜態區」，執行時 V8 會按照執行順序將代碼移動到相應的其他區域，而甚麼是宿主的環境呢?常被提到的像是 client 端(browser)、sever 端(node)</p>
<blockquote>
<p>而在 ECMAScript 的規範中沒有對「宿主環境」給出明確的定義。它沒有明確地指出標準輸入和輸出需要確切地在哪個對象中實現，這導致 JS 的內置實現有一定的混亂性。但我們可以客觀地認為： 瀏覽器為 V8 提供基礎的消息循環系統、Global Object、Web API，而 V8 的核心是實現了 ECMAScript 標準定義的一些 Native Object 和一些核心函數 此外 V8 還提供了垃圾回收器、協程功能。</p>
</blockquote>
<p>--引用自業界前輩的分析</p>
<h2 id="記憶體的布局" tabindex="-1">記憶體的布局 <a class="header-anchor" href="#記憶體的布局" aria-label="Permalink to &quot;記憶體的布局&quot;">&ZeroWidthSpace;</a></h2>
<p>JS 的值有兩種類型，基礎值 primitive value 與 引用值 reference value</p>
<ul>
<li>基礎值 Number，String，Boolean，Null，Undefined,Symbol</li>
<li>引用值 Object，function，Array，RegExp，Data，Date</li>
</ul>
<p>常常會在網路上搜尋到 js 是傳值、傳址、傳參考?當我再找資料時，也常常被這些術語搞得十分頭痛。
其實我們可以透過簡易圖繪圖畫出記憶體的指向，而不是強記這些術語，反而會十分地清晰。</p>
<p>在畫圖之前，讓我們來想想，以下的程式碼是怎麼被存放在記憶體中的吧。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> c</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "aaron"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> d</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> e</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> f</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {};</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> fn</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {};</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="記憶體繪圖" tabindex="-1">記憶體繪圖 <a class="header-anchor" href="#記憶體繪圖" aria-label="Permalink to &quot;記憶體繪圖&quot;">&ZeroWidthSpace;</a></h3>
<p><img src="/assets/images/memory_layout/ex1.png" alt="範例1" data-fancybox="gallery"></p>
<p>在簡易的繪圖中，發現若我們聲明的變量被覆值為基礎值時，記憶體所存的就會是那個值(<strong>其實仍然會是一個地址，因為記憶方便我們先簡化為基礎值本身</strong>)，而引用值則會是以一個地址被記憶體記住。</p>
]]></description>
            <content:encoded><![CDATA[<PageInfo/><p>在許多的面試裡，js 的基礎問題是常常會被面試官詢問，像是 Hoisting，var/let/const 差異，閉包...，而今天想跟各位分享的也是眾多基礎題的其中之一，原型鍊(prototype chain)，要分享原型鍊則需提到 js 記憶體中的布局。
在我們尚未執行代碼之前，我們所寫的 JS 以及宿主環境預設的 API 會被存放在「靜態區」，執行時 V8 會按照執行順序將代碼移動到相應的其他區域，而甚麼是宿主的環境呢?常被提到的像是 client 端(browser)、sever 端(node)</p>
<blockquote>
<p>而在 ECMAScript 的規範中沒有對「宿主環境」給出明確的定義。它沒有明確地指出標準輸入和輸出需要確切地在哪個對象中實現，這導致 JS 的內置實現有一定的混亂性。但我們可以客觀地認為： 瀏覽器為 V8 提供基礎的消息循環系統、Global Object、Web API，而 V8 的核心是實現了 ECMAScript 標準定義的一些 Native Object 和一些核心函數 此外 V8 還提供了垃圾回收器、協程功能。</p>
</blockquote>
<p>--引用自業界前輩的分析</p>
<h2 id="記憶體的布局" tabindex="-1">記憶體的布局 <a class="header-anchor" href="#記憶體的布局" aria-label="Permalink to &quot;記憶體的布局&quot;">&ZeroWidthSpace;</a></h2>
<p>JS 的值有兩種類型，基礎值 primitive value 與 引用值 reference value</p>
<ul>
<li>基礎值 Number，String，Boolean，Null，Undefined,Symbol</li>
<li>引用值 Object，function，Array，RegExp，Data，Date</li>
</ul>
<p>常常會在網路上搜尋到 js 是傳值、傳址、傳參考?當我再找資料時，也常常被這些術語搞得十分頭痛。
其實我們可以透過簡易圖繪圖畫出記憶體的指向，而不是強記這些術語，反而會十分地清晰。</p>
<p>在畫圖之前，讓我們來想想，以下的程式碼是怎麼被存放在記憶體中的吧。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> c</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379"> "aaron"</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> d</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> e</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> f</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {};</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> fn</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {};</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="記憶體繪圖" tabindex="-1">記憶體繪圖 <a class="header-anchor" href="#記憶體繪圖" aria-label="Permalink to &quot;記憶體繪圖&quot;">&ZeroWidthSpace;</a></h3>
<p><img src="/assets/images/memory_layout/ex1.png" alt="範例1" data-fancybox="gallery"></p>
<p>在簡易的繪圖中，發現若我們聲明的變量被覆值為基礎值時，記憶體所存的就會是那個值(<strong>其實仍然會是一個地址，因為記憶方便我們先簡化為基礎值本身</strong>)，而引用值則會是以一個地址被記憶體記住。</p>
<hr>
<h2 id="原型鍊" tabindex="-1">原型鍊 <a class="header-anchor" href="#原型鍊" aria-label="Permalink to &quot;原型鍊&quot;">&ZeroWidthSpace;</a></h2>
<p>其實在我們執行程式碼後，會生出一個全域 Global Object，而全域 Global Object 會與宿主環境相關，若我們在 Web 環境中執行，瀏覽器會為我們提供 DOM、BOM、setTimeout、setInterval 巴拉巴拉一大堆的 web api...，而它們都會被掛在 Global Object 中，然後掛到 window 中給我們使用。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">keys</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">window</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">　</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">＞＞</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66">326</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 有點肥</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr>
<p>基於上方的簡易的繪圖我們理解到記憶體的引用值中存放的就是一個地址，那這個地址裡還有甚麼呢?</p>
<h3 id="原型鍊中有兩個重要的屬性" tabindex="-1">原型鍊中有兩個重要的屬性 <a class="header-anchor" href="#原型鍊中有兩個重要的屬性" aria-label="Permalink to &quot;原型鍊中有兩個重要的屬性&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> __proto__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 是一個 屬性，值是一個地址</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> prototype</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> 是一個 </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">object</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">，裡面放公用函數</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> e</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75"> f</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {};</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> fn</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {};</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="/assets/images/memory_layout/ex2.png" alt="範例2" data-fancybox="gallery"></p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">e</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">__proto__</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Array</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> f</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {};</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">f</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">__proto__</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> fn</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF"> {};</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">fn</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">__proto__</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>而各自原型物件中也有<strong>proto</strong>存在，陣列原型的 proto 地址會指向物件原型，而物件原型的 proto 地址則指向 null，這大概只能硬記了。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Array</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">__proto__</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF">dir</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75">prototype__proto__</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66">undefined</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>大致上分享完了，原型鍊簡單來說就引用值的 proto 地址像一條鍊子把原型方法分享給串連起來的樣子。
這樣就能理解，為什麼我們聲明變量為引用值時，可以調用那些方法了~</p>
<p><img src="/assets/images/memory_layout/sv.gif" alt="範例2" data-fancybox="gallery"></p>
<p>補充:
若在瀏覽器中測試下方程式碼，會發生一個很有趣的事件。</p>
<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" v-pre=""><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF"> person</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF">() {}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>person.<strong>proto</strong> 指向 funciton.prototype (如上方解釋)
若呼叫，person.prototype 瀏覽器會回傳一個空物件{constructor: ƒ}，
會讓人誤以為 person.prototype 會在一開始開出這個物件的記憶體位置，其實不然。
需要等到呼叫時才會建立。例如 特地寫 person.prototype 或是 new obj 時產生。</p>
]]></content:encoded>
            <author>eepson123@gmial.com (AaronShih)</author>
        </item>
    </channel>
</rss>
